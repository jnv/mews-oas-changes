openapi: 3.0.1
info:
  title: ConnectorApi
  version: v1
paths:
  /api/connector/v1/tasks/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: tasks_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/tasks/add:
    post:
      tags:
        - ConnectorApi
      operationId: tasks_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskAddParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddTaskResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/customers/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: customers_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/customers/getAllByIds:
    post:
      tags:
        - ConnectorApi
      operationId: customers_getAllByIds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleCustomerParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
      deprecated: true
  /api/connector/v1/customers/getAllByEmails:
    post:
      tags:
        - ConnectorApi
      operationId: customers_getAllByEmails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerEmailParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
      deprecated: true
  /api/connector/v1/addresses/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: addresses_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/addresses/add:
    post:
      tags:
        - ConnectorApi
      operationId: addresses_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleAddressAddParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/customers/search:
    post:
      tags:
        - ConnectorApi
      operationId: customers_search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerSearchParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerSearchResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/customers/getAllByName:
    post:
      tags:
        - ConnectorApi
      operationId: customers_getAllByName
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerNameParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
      deprecated: true
  /api/connector/v1/customers/getOpenItems:
    post:
      tags:
        - ConnectorApi
      description: Use payments/getAll and orderItems/getAll
      operationId: customers_getOpenItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerItemParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerItemResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
      deprecated: true
  /api/connector/v1/customers/add:
    post:
      tags:
        - ConnectorApi
      operationId: customers_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAddParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/customers/update:
    post:
      tags:
        - ConnectorApi
      operationId: customers_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerUpdateParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/customers/merge:
    post:
      tags:
        - ConnectorApi
      description: Use accounts/merge instead.
      operationId: customers_merge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerMergeParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
      deprecated: true
  /api/connector/v1/customers/addFile:
    post:
      tags:
        - ConnectorApi
      operationId: customers_addFile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerFileParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddAccountFileResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/customers/charge:
    post:
      tags:
        - ConnectorApi
      operationId: customers_charge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderAdditionParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderAdditionResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
      deprecated: true
  /api/connector/v1/addresses/update:
    post:
      tags:
        - ConnectorApi
      operationId: addresses_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleAddressUpdateParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/vouchers/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: vouchers_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoucherFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoucherResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/vouchers/add:
    post:
      tags:
        - ConnectorApi
      operationId: vouchers_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleVoucherAddParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoucherWriteResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/vouchers/update:
    post:
      tags:
        - ConnectorApi
      operationId: vouchers_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleVoucherUpdateParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoucherWriteResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/vouchers/delete:
    post:
      tags:
        - ConnectorApi
      operationId: vouchers_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleVoucherDeleteParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/voucherCodes/add:
    post:
      tags:
        - ConnectorApi
      operationId: voucherCodes_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleVoucherCodeAddParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoucherCodeResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/voucherCodes/delete:
    post:
      tags:
        - ConnectorApi
      operationId: voucherCodes_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleVoucherCodeDeleteParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/voucherCodes/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: voucherCodes_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoucherCodeFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoucherCodeResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/reservationGroups/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: reservationGroups_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationGroupFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationGroupResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/resourceCategories/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: resourceCategories_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceCategoryFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceCategoryResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/resourceCategoryAssignments/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: resourceCategoryAssignments_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceCategoryAssignmentFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceCategoryAssignmentResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/resourceCategoryImageAssignments/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: resourceCategoryImageAssignments_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceCategoryImageAssignmentFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceCategoryImageAssignmentResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/resourceFeatures/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: resourceFeatures_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceFeatureFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceFeatureResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/resourceFeatureAssignments/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: resourceFeatureAssignments_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceFeatureAssignmentFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceFeatureAssignmentResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/serviceOrderNotes/add:
    post:
      tags:
        - ConnectorApi
      operationId: serviceOrderNotes_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleServiceOrderNoteAddParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceOrderNoteAdditionResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/serviceOrderNotes/update:
    post:
      tags:
        - ConnectorApi
      operationId: serviceOrderNotes_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleServiceOrderNoteUpdateParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceOrderNoteUpdateResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/serviceOrderNotes/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: serviceOrderNotes_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceOrderNoteFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceOrderNoteResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/serviceOrderNotes/delete:
    post:
      tags:
        - ConnectorApi
      operationId: serviceOrderNotes_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceOrderNoteDeleteParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/productServiceOrders/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: productServiceOrders_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductServiceOrderFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductServiceOrderResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/serviceOrders/reservations/getAll:
    post:
      tags:
        - ConnectorApi
      description: Use the equivalent endpoint reservations/getAll/2023-06-06
      operationId: serviceOrders_reservations_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationServiceOrderFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationServiceOrderResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
      deprecated: true
  /api/connector/v1/reservations/getAll/2023-06-06:
    post:
      tags:
        - ConnectorApi
      operationId: reservations_getAll_2023-06-06
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationServiceOrderFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationServiceOrderResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/services/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: services_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/services/updateAvailability:
    post:
      tags:
        - ConnectorApi
      operationId: services_updateAvailability
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceAvailabilityUpdateParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/services/getAvailability:
    post:
      tags:
        - ConnectorApi
      operationId: services_getAvailability
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceAvailabilityFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAvailabilityResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/availabilityAdjustments/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: availabilityAdjustments_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityAdjustmentParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityAdjustmentResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/availabilityBlocks/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: availabilityBlocks_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityBlockParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityBlockResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/availabilityBlocks/add:
    post:
      tags:
        - ConnectorApi
      operationId: availabilityBlocks_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleAvailabilityBlockAddParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityBlockAddResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/availabilityBlocks/update:
    post:
      tags:
        - ConnectorApi
      operationId: availabilityBlocks_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleAvailabilityBlockUpdateParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityBlockAddResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/availabilityBlocks/delete:
    post:
      tags:
        - ConnectorApi
      operationId: availabilityBlocks_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleAvailabilityBlockDeleteParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/orders/add:
    post:
      tags:
        - ConnectorApi
      operationId: orders_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderAdditionParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderAdditionResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/products/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: products_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/products/delete:
    post:
      tags:
        - ConnectorApi
      operationId: products_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDeleteParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/rules/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: rules_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/businessSegments/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: businessSegments_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessSegmentFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessSegmentResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/rates/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: rates_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RateFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/rates/add:
    post:
      tags:
        - ConnectorApi
      operationId: rates_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RateAddParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateAddResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/rates/getPricing:
    post:
      tags:
        - ConnectorApi
      operationId: rates_getPricing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RatePricingParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatePricing'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/rates/updatePrice:
    post:
      tags:
        - ConnectorApi
      operationId: rates_updatePrice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RatePriceUpdateParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/restrictions/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: restrictions_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestrictionFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestrictionResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/restrictions/add:
    post:
      tags:
        - ConnectorApi
      operationId: restrictions_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddRestrictionParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestrictionAdditionResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/restrictions/delete:
    post:
      tags:
        - ConnectorApi
      operationId: restrictions_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRestrictionParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/restrictions/set:
    post:
      tags:
        - ConnectorApi
      operationId: restrictions_set
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetRestrictionParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/restrictions/clear:
    post:
      tags:
        - ConnectorApi
      operationId: restrictions_clear
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClearRestrictionParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/companionships/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: companionships_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanionshipFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanionshipResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/reservations/getAll:
    post:
      tags:
        - ConnectorApi
      description: Use reservations/getAll/2023-06-06.
      operationId: reservations_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
      deprecated: true
  /api/connector/v1/reservations/getAllByIds:
    post:
      tags:
        - ConnectorApi
      operationId: reservations_getAllByIds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleReservationParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
      deprecated: true
  /api/connector/v1/reservations/getAllByCustomers:
    post:
      tags:
        - ConnectorApi
      operationId: reservations_getAllByCustomers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationMultipleCustomerParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
      deprecated: true
  /api/connector/v1/reservations/getAllByNumbers:
    post:
      tags:
        - ConnectorApi
      operationId: reservations_getAllByNumbers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationConfirmationNumberParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
      deprecated: true
  /api/connector/v1/reservations/price:
    post:
      tags:
        - ConnectorApi
      operationId: reservations_price
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationDataParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationPricingResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/reservations/add:
    post:
      tags:
        - ConnectorApi
      operationId: reservations_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationAdditionParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationAdditionResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/reservations/update:
    post:
      tags:
        - ConnectorApi
      operationId: reservations_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleReservationUpdateParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/reservations/confirm:
    post:
      tags:
        - ConnectorApi
      operationId: reservations_confirm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmReservationParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultipleReservationResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/reservations/start:
    post:
      tags:
        - ConnectorApi
      operationId: reservations_start
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationStartParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/reservations/process:
    post:
      tags:
        - ConnectorApi
      operationId: reservations_process
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationProcessingParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/reservations/cancel:
    post:
      tags:
        - ConnectorApi
      operationId: reservations_cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationCancellationParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultipleReservationResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/reservations/updateCustomer:
    post:
      tags:
        - ConnectorApi
      operationId: reservations_updateCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationsUpdateCustomerParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/reservations/updateInterval:
    post:
      tags:
        - ConnectorApi
      operationId: reservations_updateInterval
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationUpdateIntervalParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/reservations/addCompanion:
    post:
      tags:
        - ConnectorApi
      operationId: reservations_addCompanion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationCustomerParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddCompanionshipResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/reservations/deleteCompanion:
    post:
      tags:
        - ConnectorApi
      operationId: reservations_deleteCompanion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationCustomerParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/reservations/addProduct:
    post:
      tags:
        - ConnectorApi
      operationId: reservations_addProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationProductParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddProductItemsResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/reservations/getAllItems:
    post:
      tags:
        - ConnectorApi
      description: Use orderItems/getAll.
      operationId: reservations_getAllItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationItemParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationItemResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
      deprecated: true
  /api/connector/v1/ageCategories/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: ageCategories_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgeCategoryParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgeCategoryResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/sourceAssignments/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: sourceAssignments_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceAssignmentFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceAssignmentResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/sources/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: sources_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/commands/getAllByIds:
    post:
      tags:
        - ConnectorApi
      operationId: commands_getAllByIds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceCommandFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceCommandResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/commands/getAllActive:
    post:
      tags:
        - ConnectorApi
      operationId: commands_getAllActive
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAllActiveCommandsParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceCommandResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/commands/addPrinter:
    post:
      tags:
        - ConnectorApi
      operationId: commands_addPrinter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrinterCommandParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceCommandAddResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/commands/addKeyCutter:
    post:
      tags:
        - ConnectorApi
      operationId: commands_addKeyCutter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyCutterCommandParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceCommandAddResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/commands/update:
    post:
      tags:
        - ConnectorApi
      operationId: commands_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceCommandUpdateParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/images/getUrls:
    post:
      tags:
        - ConnectorApi
      operationId: images_getUrls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageUrlParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageUrlResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/loyaltyPrograms/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: loyaltyPrograms_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoyaltyProgramFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoyaltyProgramResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/loyaltyPrograms/add:
    post:
      tags:
        - ConnectorApi
      operationId: loyaltyPrograms_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleLoyaltyProgramAddParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoyaltyProgramResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/loyaltyPrograms/update:
    post:
      tags:
        - ConnectorApi
      operationId: loyaltyPrograms_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleLoyaltyProgramUpdateParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoyaltyProgramResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/loyaltyPrograms/delete:
    post:
      tags:
        - ConnectorApi
      operationId: loyaltyPrograms_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoyaltyProgramDeleteParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/loyaltyMemberships/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: loyaltyMemberships_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoyaltyMembershipFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoyaltyMembershipResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/loyaltyMemberships/add:
    post:
      tags:
        - ConnectorApi
      operationId: loyaltyMemberships_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleLoyaltyMembershipAddParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoyaltyMembershipResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/loyaltyMemberships/update:
    post:
      tags:
        - ConnectorApi
      operationId: loyaltyMemberships_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleLoyaltyMembershipUpdateParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoyaltyMembershipResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/loyaltyMemberships/delete:
    post:
      tags:
        - ConnectorApi
      operationId: loyaltyMemberships_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoyaltyMembershipDeleteParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/loyaltyTiers/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: loyaltyTiers_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoyaltyTierFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoyaltyTierResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/loyaltyTiers/add:
    post:
      tags:
        - ConnectorApi
      operationId: loyaltyTiers_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleLoyaltyTierAddParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoyaltyTierResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/loyaltyTiers/update:
    post:
      tags:
        - ConnectorApi
      operationId: loyaltyTiers_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleLoyaltyTierUpdateParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoyaltyTierResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/loyaltyTiers/delete:
    post:
      tags:
        - ConnectorApi
      operationId: loyaltyTiers_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoyaltyTierDeleteParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/messageThreads/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: messageThreads_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageThreadFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageThreadResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/messageThreads/add:
    post:
      tags:
        - ConnectorApi
      operationId: messageThreads_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageThreadAddParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageThreadResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/messages/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: messages_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/messages/add:
    post:
      tags:
        - ConnectorApi
      operationId: messages_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleMessageAddParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddedMessageResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/orderItems/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: orderItems_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItemFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItemResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/outlets/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: outlets_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutletFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutletResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/payments/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: payments_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/payments/refund:
    post:
      tags:
        - ConnectorApi
      operationId: payments_refund
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRefundParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRefundResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/productCategories/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: productCategories_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategoryFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategoryResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/countries/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: countries_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Parameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/currencies/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: currencies_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Parameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/taxEnvironments/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: taxEnvironments_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Parameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxEnvironmentResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/taxations/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: taxations_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Parameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxationResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/languages/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: languages_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Parameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguageResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/cultures/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: cultures_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Parameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CultureResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/languages/getTexts:
    post:
      tags:
        - ConnectorApi
      operationId: languages_getTexts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LanguageTextParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguageTextResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/configuration/get:
    post:
      tags:
        - ConnectorApi
      operationId: configuration_get
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Configuration'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/devices/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: devices_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Parameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/exports/add:
    post:
      tags:
        - ConnectorApi
      operationId: exports_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportAddParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportAddResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/exports/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: exports_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/cashiers/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: cashiers_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CashierParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CashierResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/cashierTransactions/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: cashierTransactions_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CashierTransactionParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CashierTransactionResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/accountingCategories/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: accountingCategories_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountingCategoryFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountingCategoryResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/accountingItems/update:
    post:
      tags:
        - ConnectorApi
      operationId: accountingItems_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleAccountingItemsUpdateParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountingItemResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/accountingItems/getAll:
    post:
      tags:
        - ConnectorApi
      description: Use payments/getall or orderItems/getall.
      operationId: accountingItems_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountingItemParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountingItemResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
      deprecated: true
  /api/connector/v1/bills/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: bills_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/bills/getAllByIds:
    post:
      tags:
        - ConnectorApi
      operationId: bills_getAllByIds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
      deprecated: true
  /api/connector/v1/bills/getAllByCustomers:
    post:
      tags:
        - ConnectorApi
      operationId: bills_getAllByCustomers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
      deprecated: true
  /api/connector/v1/bills/getAllClosed:
    post:
      tags:
        - ConnectorApi
      operationId: bills_getAllClosed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
      deprecated: true
  /api/connector/v1/bills/getPdf:
    post:
      tags:
        - ConnectorApi
      operationId: bills_getPdf
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillPdfParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/bills/add:
    post:
      tags:
        - ConnectorApi
      operationId: bills_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleBillAddParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/bills/delete:
    post:
      tags:
        - ConnectorApi
      operationId: bills_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillDeleteParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/bills/close:
    post:
      tags:
        - ConnectorApi
      operationId: bills_close
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillCloseParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/payments/addAlternative:
    post:
      tags:
        - ConnectorApi
      operationId: payments_addAlternative
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlternativePaymentParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlternativePaymentResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/payments/addCreditCard:
    post:
      tags:
        - ConnectorApi
      operationId: payments_addCreditCard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditCardPaymentParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddCreditCardResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/payments/addExternal:
    post:
      tags:
        - ConnectorApi
      operationId: payments_addExternal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalPaymentParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddExternalPaymentResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/creditCards/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: creditCards_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditCardFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCardResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/creditCards/getAllByIds:
    post:
      tags:
        - ConnectorApi
      operationId: creditCards_getAllByIds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleCreditCardParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCardResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
      deprecated: true
  /api/connector/v1/creditCards/getAllByCustomers:
    post:
      tags:
        - ConnectorApi
      operationId: creditCards_getAllByCustomers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleCustomerParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCardResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
      deprecated: true
  /api/connector/v1/creditCards/charge:
    post:
      tags:
        - ConnectorApi
      operationId: creditCards_charge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChargeCreditCardParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargeCreditCardResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/creditCards/addTokenized:
    post:
      tags:
        - ConnectorApi
      operationId: creditCards_addTokenized
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenizedCreditCardParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddCreditCardResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/preauthorizations/getAllByCustomers:
    post:
      tags:
        - ConnectorApi
      operationId: preauthorizations_getAllByCustomers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleCustomerParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreauthorizationResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/outletItems/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: outletItems_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutletItemsFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutletItemResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/outletBills/add:
    post:
      tags:
        - ConnectorApi
      operationId: outletBills_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddOutletBillsParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOutletBillsResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/routingRules/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: routingRules_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingRuleFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingRuleResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/routingRules/add:
    post:
      tags:
        - ConnectorApi
      operationId: routingRules_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleRoutingRuleAddParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingRuleResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/routingRules/update:
    post:
      tags:
        - ConnectorApi
      operationId: routingRules_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleRoutingRuleUpdateParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoutingRuleResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/routingRules/delete:
    post:
      tags:
        - ConnectorApi
      operationId: routingRules_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoutingRuleDeleteParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/paymentRequests/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: paymentRequests_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequestFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequestResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/paymentRequests/add:
    post:
      tags:
        - ConnectorApi
      operationId: paymentRequests_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiplePaymentRequestAddParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequestResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/paymentRequests/cancel:
    post:
      tags:
        - ConnectorApi
      operationId: paymentRequests_cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiplePaymentRequestCancelParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRequestResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/accountNotes/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: accountNotes_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountNoteFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountNoteResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/accountNotes/add:
    post:
      tags:
        - ConnectorApi
      operationId: accountNotes_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleAccountNoteAddParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountNoteAdditionResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/accountNotes/update:
    post:
      tags:
        - ConnectorApi
      operationId: accountNotes_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleAccountNoteUpdateParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountNoteUpdateResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/accountNotes/delete:
    post:
      tags:
        - ConnectorApi
      operationId: accountNotes_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleAccountNoteDeleteParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/accounts/merge:
    post:
      tags:
        - ConnectorApi
      operationId: accounts_merge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleAccountMergeParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/cancellationPolicies/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: cancellationPolicies_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancellationPolicyFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancellationPolicyResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/companies/add:
    post:
      tags:
        - ConnectorApi
      operationId: companies_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyAddParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/companies/update:
    post:
      tags:
        - ConnectorApi
      operationId: companies_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyUpdateParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/companies/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: companies_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/companies/getAllByName:
    post:
      tags:
        - ConnectorApi
      operationId: companies_getAllByName
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyNameParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
      deprecated: true
  /api/connector/v1/companyContracts/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: companyContracts_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyContractFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/companyContracts/add:
    post:
      tags:
        - ConnectorApi
      operationId: companyContracts_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleCompanyContractAddParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/companyContracts/update:
    post:
      tags:
        - ConnectorApi
      operationId: companyContracts_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleCompanyContractUpdateParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/companyContracts/delete:
    post:
      tags:
        - ConnectorApi
      operationId: companyContracts_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleCompanyContractDeleteParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/departments/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: departments_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepartmentFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/enterprises/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: enterprises_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnterpriseFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnterpriseResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/exchangeRates/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: exchangeRates_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CurrencyAcceptanceFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeRateResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/counters/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: counters_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CounterFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CounterResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/resources/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: resources_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/resources/add:
    post:
      tags:
        - ConnectorApi
      operationId: resources_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleResourceAddParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/resources/update:
    post:
      tags:
        - ConnectorApi
      operationId: resources_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleResourceUpdateParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/resourceBlocks/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: resourceBlocks_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceBlockParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceBlockResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/resourceBlocks/add:
    post:
      tags:
        - ConnectorApi
      operationId: resourceBlocks_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleResourceBlockAddParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceBlockResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/resourceBlocks/delete:
    post:
      tags:
        - ConnectorApi
      operationId: resourceBlocks_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceBlockDeleteParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/resourceAccessTokens/getAll:
    post:
      tags:
        - ConnectorApi
      operationId: resourceAccessTokens_getAll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceAccessTokenFilterParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAccessTokenResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/resourceAccessTokens/add:
    post:
      tags:
        - ConnectorApi
      operationId: resourceAccessTokens_add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleResourceAccessTokenParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAccessTokenResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/resourceAccessTokens/update:
    post:
      tags:
        - ConnectorApi
      operationId: resourceAccessTokens_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleResourceAccessTokenUpdateParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAccessTokenResult'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
  /api/connector/v1/resourceAccessTokens/delete:
    post:
      tags:
        - ConnectorApi
      operationId: resourceAccessTokens_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceAccessTokenDeleteParameters'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by the client app, e.g. in case of malformed request or invalid identifier of a resource. In most cases, such an error signifies a bug in the client app (consumer of the API).'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by usage of invalid ClientToken, AccessToken, or you may not have the necessary permission to use the endpoint.'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Server error that should be reported to the end user of the client app. Happens for example when the server-side validation fails or when a business-logic check is violated.
        '408':
          description: Request Timeout
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: Error caused by heavy requests that takes too long to process (in magnitude of tens of seconds). To get around this send/request data in smaller batches.
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Error caused by too many requests sent in a given amount of time, please see Request limits for more information.'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                properties:
                  Message:
                    type: string
                    example: Description of the error.
                  DebugDetails:
                    type: object
                    example:
                      Sample: 'Object with additional internal details about the error (request, headers, server stack trace, inner exceptions etc.). Only available on development environment.'
                  Details:
                    type: object
                    example:
                      Sample: Object with additional details about the error.
                description: 'Unexpected error of the server. In most cases, such an error signifies a bug on our side. We are logging it and are immediately notified when such an error happens. If anything like this happens, feel free to directly contact us or raise an issue here on Github.'
components:
  schemas:
    AccountAddress:
      title: AccountAddress
      type: object
      properties:
        Id:
          type: string
          format: uuid
        AccountId:
          type: string
          format: uuid
        ChainId:
          type: string
          format: uuid
          nullable: true
        AccountType:
          anyOf:
            - $ref: '#/components/schemas/AccountType'
          nullable: true
        Line1:
          maxLength: 255
          type: string
          nullable: true
        Line2:
          maxLength: 255
          type: string
          nullable: true
        City:
          maxLength: 255
          type: string
          nullable: true
        PostalCode:
          maxLength: 255
          type: string
          nullable: true
        CountryCode:
          maxLength: 3
          type: string
          nullable: true
        CountrySubdivisionCode:
          maxLength: 3
          type: string
          nullable: true
        Latitude:
          type: number
          format: double
          nullable: true
        Longitude:
          type: number
          format: double
          nullable: true
        UpdatedUtc:
          type: string
          format: date-time
          nullable: true
        IsActive:
          type: boolean
      additionalProperties: false
      x-schema-id: AccountAddress
    AccountMergeParameter:
      title: AccountMergeParameter
      required:
        - AccountType
        - SourceAccountIds
        - TargetAccountId
      type: object
      properties:
        SourceAccountIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
        TargetAccountId:
          type: string
          format: uuid
        AccountType:
          $ref: '#/components/schemas/MergeAccountType'
      additionalProperties: false
      x-schema-id: AccountMergeParameter
    AccountNote:
      title: AccountNote
      required:
        - AccountId
        - AccountType
        - Classifications
        - Content
        - CreatorProfile
        - Id
        - IsActive
        - UpdaterProfile
      type: object
      properties:
        Id:
          type: string
          format: uuid
        AccountId:
          type: string
          format: uuid
        Content:
          minLength: 1
          type: string
        AccountType:
          $ref: '#/components/schemas/AccountType'
        Classifications:
          type: array
          items:
            $ref: '#/components/schemas/AccountNoteClassification'
        IsActive:
          type: boolean
        CreatorProfile:
          $ref: '#/components/schemas/ProfileData'
        UpdaterProfile:
          $ref: '#/components/schemas/ProfileData'
      additionalProperties: false
      x-schema-id: AccountNote
    AccountNoteAddParameters:
      title: AccountNoteAddParameters
      required:
        - AccountId
        - Classifications
        - Content
      type: object
      properties:
        AccountId:
          type: string
          format: uuid
        Content:
          maxLength: 1000
          minLength: 1
          type: string
        Classifications:
          maxItems: 1
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/AccountNoteClassification'
      additionalProperties: false
      x-schema-id: AccountNoteAddParameters
    AccountNoteAdditionResult:
      title: AccountNoteAdditionResult
      type: object
      properties:
        AccountNotes:
          type: array
          items:
            $ref: '#/components/schemas/AccountNote'
          nullable: true
      additionalProperties: false
      x-schema-id: AccountNoteAdditionResult
    AccountNoteClassification:
      enum:
        - General
        - FoodAndBeverage
        - FrontOffice
        - Reservations
        - Housekeeping
        - Maintenance
        - PreviousStay
        - FamilyRelations
        - Gifts
        - Accounting
        - Complaints
        - Other
      type: string
    AccountNoteFilterParameters:
      title: AccountNoteFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        ChainIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        AccountNoteIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        AccountIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        ActivityStates:
          type: array
          items:
            $ref: '#/components/schemas/ActivityStates'
          nullable: true
      additionalProperties: false
      x-schema-id: AccountNoteFilterParameters
    AccountNoteResult:
      title: AccountNoteResult
      type: object
      properties:
        AccountNotes:
          type: array
          items:
            $ref: '#/components/schemas/AccountNote'
          nullable: true
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: AccountNoteResult
    AccountNoteUpdateClassifications:
      title: AccountNoteUpdateClassifications
      type: object
      properties:
        General:
          $ref: '#/components/schemas/BooleanUpdateValue'
        FoodAndBeverage:
          $ref: '#/components/schemas/BooleanUpdateValue'
        FrontOffice:
          $ref: '#/components/schemas/BooleanUpdateValue'
        Reservations:
          $ref: '#/components/schemas/BooleanUpdateValue'
        Housekeeping:
          $ref: '#/components/schemas/BooleanUpdateValue'
        Maintenance:
          $ref: '#/components/schemas/BooleanUpdateValue'
        PreviousStay:
          $ref: '#/components/schemas/BooleanUpdateValue'
        FamilyRelations:
          $ref: '#/components/schemas/BooleanUpdateValue'
        Gifts:
          $ref: '#/components/schemas/BooleanUpdateValue'
        Accounting:
          $ref: '#/components/schemas/BooleanUpdateValue'
        Complaints:
          $ref: '#/components/schemas/BooleanUpdateValue'
        Other:
          $ref: '#/components/schemas/BooleanUpdateValue'
      additionalProperties: false
      x-schema-id: AccountNoteUpdateClassifications
    AccountNoteUpdateParameters:
      title: AccountNoteUpdateParameters
      required:
        - AccountNoteId
      type: object
      properties:
        AccountNoteId:
          type: string
          format: uuid
        Content:
          $ref: '#/components/schemas/StringUpdateValue'
        Classifications:
          $ref: '#/components/schemas/AccountNoteUpdateClassifications'
      additionalProperties: false
      x-schema-id: AccountNoteUpdateParameters
    AccountNoteUpdateResult:
      title: AccountNoteUpdateResult
      type: object
      properties:
        AccountNotes:
          type: array
          items:
            $ref: '#/components/schemas/AccountNote'
          nullable: true
      additionalProperties: false
      x-schema-id: AccountNoteUpdateResult
    AccountType:
      enum:
        - Company
        - Customer
      type: string
    AccountingCategory:
      title: AccountingCategory
      required:
        - CreatedUtc
        - EnterpriseId
        - Id
        - IsActive
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          format: uuid
        EnterpriseId:
          type: string
          format: uuid
        IsActive:
          type: boolean
        Name:
          type: string
          nullable: true
        Code:
          type: string
          nullable: true
        ExternalCode:
          type: string
          nullable: true
        LedgerAccountCode:
          type: string
          nullable: true
        PostingAccountCode:
          type: string
          nullable: true
        CostCenterCode:
          type: string
          nullable: true
        Classification:
          type: string
          nullable: true
        CreatedUtc:
          minLength: 1
          type: string
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          format: date-time
      additionalProperties: false
      x-schema-id: AccountingCategory
    AccountingCategoryFilterParameters:
      title: AccountingCategoryFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        AccountingCategoryIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        ActivityStates:
          type: array
          items:
            $ref: '#/components/schemas/ActivityStates'
          nullable: true
      additionalProperties: false
      x-schema-id: AccountingCategoryFilterParameters
    AccountingCategoryParameters:
      title: AccountingCategoryParameters
      type: object
      properties:
        Code:
          type: string
          nullable: true
        Name:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: AccountingCategoryParameters
    AccountingCategoryResult:
      title: AccountingCategoryResult
      type: object
      properties:
        AccountingCategories:
          type: array
          items:
            $ref: '#/components/schemas/AccountingCategory'
          nullable: true
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: AccountingCategoryResult
    AccountingConfiguration:
      title: AccountingConfiguration
      required:
        - SurchargeConfiguration
      type: object
      properties:
        AdditionalTaxIdentifier:
          maxLength: 50
          type: string
          nullable: true
        CompanyName:
          maxLength: 100
          type: string
          nullable: true
        BankAccountNumber:
          maxLength: 50
          type: string
          nullable: true
        BankName:
          maxLength: 100
          type: string
          nullable: true
        Iban:
          maxLength: 40
          type: string
          nullable: true
        Bic:
          maxLength: 11
          type: string
          nullable: true
        SurchargeConfiguration:
          $ref: '#/components/schemas/SurchargeConfiguration'
      additionalProperties: false
      x-schema-id: AccountingConfiguration
    AccountingItem:
      title: AccountingItem
      type: object
      properties:
        Id:
          type: string
          format: uuid
        AccountId:
          type: string
          format: uuid
        CustomerId:
          type: string
          format: uuid
          nullable: true
          deprecated: true
        OrderId:
          type: string
          format: uuid
          nullable: true
        ServiceId:
          type: string
          format: uuid
          nullable: true
        ProductId:
          type: string
          format: uuid
          nullable: true
        BillId:
          type: string
          format: uuid
          nullable: true
        InvoiceId:
          type: string
          format: uuid
          nullable: true
        AccountingCategoryId:
          type: string
          format: uuid
          nullable: true
        CreditCardId:
          type: string
          format: uuid
          nullable: true
        Type:
          type: string
          nullable: true
        SubType:
          type: string
          nullable: true
        Name:
          type: string
          nullable: true
        Notes:
          type: string
          nullable: true
        ConsumptionUtc:
          type: string
          nullable: true
        ClosedUtc:
          type: string
          nullable: true
        State:
          type: string
          nullable: true
        SubState:
          type: string
          nullable: true
        Amount:
          $ref: '#/components/schemas/ExtendedAmount'
      additionalProperties: false
      x-schema-id: AccountingItem
    AccountingItemExtent:
      title: AccountingItemExtent
      type: object
      properties:
        AccountingItems:
          type: boolean
        OrderItems:
          type: boolean
        PaymentItems:
          type: boolean
        CreditCardTransactions:
          type: boolean
      additionalProperties: false
      x-schema-id: AccountingItemExtent
    AccountingItemParameters:
      title: AccountingItemParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - EndUtc
        - Extent
        - StartUtc
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        StartUtc:
          minLength: 1
          type: string
          format: date-time
        EndUtc:
          minLength: 1
          type: string
          format: date-time
        Extent:
          $ref: '#/components/schemas/AccountingItemExtent'
        ItemIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        RebatedItemIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ClosedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        ConsumedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        TimeFilter:
          type: string
          nullable: true
          deprecated: true
        Currency:
          type: string
          format: currency
          nullable: true
        States:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
      x-schema-id: AccountingItemParameters
    AccountingItemResult:
      title: AccountingItemResult
      type: object
      properties:
        AccountingItems:
          type: array
          items:
            $ref: '#/components/schemas/AccountingItem'
          nullable: true
          deprecated: true
        OrderItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemOld'
          nullable: true
        PaymentItems:
          type: array
          items:
            $ref: '#/components/schemas/PaymentItemOld'
          nullable: true
        CreditCardTransactions:
          type: array
          items:
            $ref: '#/components/schemas/CreditCardTransaction'
          nullable: true
      additionalProperties: false
      x-schema-id: AccountingItemResult
    AccountingItemUpdateParameters:
      title: AccountingItemUpdateParameters
      required:
        - AccountingItemId
        - BillId
      type: object
      properties:
        AccountingItemId:
          type: string
          format: uuid
        AccountId:
          $ref: '#/components/schemas/GuidUpdateValue'
        BillId:
          $ref: '#/components/schemas/GuidUpdateValue'
      additionalProperties: false
      x-schema-id: AccountingItemUpdateParameters
    AccountingState:
      enum:
        - Open
        - Closed
        - Inactive
        - Canceled
      type: string
    ActivityState:
      enum:
        - Deleted
        - Active
      type: string
    ActivityStates:
      enum:
        - Deleted
        - Active
      type: string
    AddAccountFileResult:
      title: AddAccountFileResult
      type: object
      properties:
        FileId:
          type: string
          format: uuid
      additionalProperties: false
      x-schema-id: AddAccountFileResult
    AddCompanionshipResult:
      title: AddCompanionshipResult
      type: object
      properties:
        CompanionshipId:
          type: string
          format: uuid
      additionalProperties: false
      x-schema-id: AddCompanionshipResult
    AddCreditCardResult:
      title: AddCreditCardResult
      type: object
      properties:
        CreditCardId:
          type: string
          format: uuid
      additionalProperties: false
      x-schema-id: AddCreditCardResult
    AddExternalPaymentResult:
      title: AddExternalPaymentResult
      type: object
      properties:
        ExternalPaymentId:
          type: string
          format: uuid
      additionalProperties: false
      x-schema-id: AddExternalPaymentResult
    AddOutletBillsParameters:
      title: AddOutletBillsParameters
      required:
        - AccessToken
        - Bills
        - Client
        - ClientToken
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Bills:
          type: array
          items:
            $ref: '#/components/schemas/OutletBillParameters'
      additionalProperties: false
      x-schema-id: AddOutletBillsParameters
    AddOutletBillsResult:
      title: AddOutletBillsResult
      type: object
      properties:
        OutletBillIds:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: AddOutletBillsResult
    AddProductItemsResult:
      title: AddProductItemsResult
      type: object
      properties:
        ItemIds:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: AddProductItemsResult
    AddRestrictionParameters:
      title: AddRestrictionParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Restrictions
        - ServiceId
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        ServiceId:
          type: string
          format: uuid
        Restrictions:
          type: array
          items:
            $ref: '#/components/schemas/RestrictionData'
      additionalProperties: false
      x-schema-id: AddRestrictionParameters
    AddTaskResult:
      title: AddTaskResult
      type: object
      properties:
        TaskId:
          type: string
          format: uuid
      additionalProperties: false
      x-schema-id: AddTaskResult
    AddedMessage:
      title: AddedMessage
      type: object
      properties:
        Identifier:
          type: string
          nullable: true
        Message:
          $ref: '#/components/schemas/Message'
      additionalProperties: false
      x-schema-id: AddedMessage
    AddedMessageResult:
      title: AddedMessageResult
      required:
        - Messages
      type: object
      properties:
        Messages:
          type: array
          items:
            $ref: '#/components/schemas/AddedMessage'
      additionalProperties: false
      x-schema-id: AddedMessageResult
    AddedReservation:
      title: AddedReservation
      type: object
      properties:
        Identifier:
          type: string
          nullable: true
        Reservation:
          $ref: '#/components/schemas/ReservationOld'
      additionalProperties: false
      x-schema-id: AddedReservation
    AddedRestriction:
      title: AddedRestriction
      type: object
      properties:
        Identifier:
          type: string
          nullable: true
        Restriction:
          $ref: '#/components/schemas/Restriction'
      additionalProperties: false
      x-schema-id: AddedRestriction
    AdditionalServiceData:
      title: AdditionalServiceData
      type: object
      properties:
        Promotions:
          $ref: '#/components/schemas/Promotions'
      additionalProperties: false
      x-schema-id: AdditionalServiceData
    Address:
      title: Address
      type: object
      properties:
        Line1:
          type: string
          nullable: true
        Line2:
          type: string
          nullable: true
        City:
          type: string
          nullable: true
        PostalCode:
          type: string
          nullable: true
        SubdivisionCode:
          type: string
          nullable: true
        CountryCode:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: Address
    AddressAddParameters:
      title: AddressAddParameters
      required:
        - AccountId
      type: object
      properties:
        AccountId:
          type: string
          format: uuid
        Line1:
          maxLength: 255
          type: string
          nullable: true
        Line2:
          maxLength: 255
          type: string
          nullable: true
        City:
          maxLength: 255
          type: string
          nullable: true
        PostalCode:
          maxLength: 255
          type: string
          format: postal-code
          nullable: true
        CountryCode:
          maxLength: 8
          type: string
          nullable: true
        CountrySubdivisionCode:
          maxLength: 8
          type: string
          nullable: true
        Latitude:
          maximum: 90
          minimum: -90
          type: number
          format: double
          nullable: true
        Longitude:
          maximum: 180
          minimum: -180
          type: number
          format: double
          nullable: true
      additionalProperties: false
      x-schema-id: AddressAddParameters
    AddressFilterParameters:
      title: AddressFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        ChainIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        AccountIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        AddressIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        ActivityStates:
          type: array
          items:
            $ref: '#/components/schemas/ActivityStates'
          nullable: true
      additionalProperties: false
      x-schema-id: AddressFilterParameters
    AddressParameters:
      title: AddressParameters
      type: object
      properties:
        Line1:
          type: string
          nullable: true
        Line2:
          type: string
          nullable: true
        City:
          type: string
          nullable: true
        PostalCode:
          type: string
          format: postal-code
          nullable: true
        CountryCode:
          type: string
          nullable: true
        CountrySubdivisionCode:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: AddressParameters
    AddressResult:
      title: AddressResult
      type: object
      properties:
        Addresses:
          type: array
          items:
            $ref: '#/components/schemas/AccountAddress'
          nullable: true
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: AddressResult
    AddressUpdateParameters:
      title: AddressUpdateParameters
      required:
        - AccountId
        - AddressId
      type: object
      properties:
        AddressId:
          type: string
          format: uuid
        AccountId:
          type: string
          format: uuid
        Line1:
          $ref: '#/components/schemas/StringUpdateValue'
        Line2:
          $ref: '#/components/schemas/StringUpdateValue'
        City:
          $ref: '#/components/schemas/StringUpdateValue'
        PostalCode:
          $ref: '#/components/schemas/StringUpdateValue'
        CountryCode:
          $ref: '#/components/schemas/StringUpdateValue'
        CountrySubdivisionCode:
          $ref: '#/components/schemas/StringUpdateValue'
      additionalProperties: false
      x-schema-id: AddressUpdateParameters
    AgeCategory:
      title: AgeCategory
      required:
        - CreatedUtc
        - Id
        - Names
        - ServiceId
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          format: uuid
        ServiceId:
          type: string
          format: uuid
        MinimalAge:
          type: integer
          format: int32
          nullable: true
        MaximalAge:
          type: integer
          format: int32
          nullable: true
        Names:
          type: object
          additionalProperties:
            type: string
        ShortNames:
          type: object
          additionalProperties:
            type: string
          nullable: true
        CreatedUtc:
          minLength: 1
          type: string
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          format: date-time
      additionalProperties: false
      x-schema-id: AgeCategory
    AgeCategoryAdjustment:
      title: AgeCategoryAdjustment
      type: object
      properties:
        AgeCategoryId:
          type: string
          format: uuid
        AbsoluteValue:
          type: number
          format: double
        Type:
          anyOf:
            - $ref: '#/components/schemas/AgeCategoryAdjustmentType'
          nullable: true
      additionalProperties: false
      x-schema-id: AgeCategoryAdjustment
    AgeCategoryAdjustmentType:
      enum:
        - ExtraOccupancyAdjustment
        - NegativeOccupancyAdjustment
        - StandardOccupancyAdjustment
      type: string
    AgeCategoryParameters:
      title: AgeCategoryParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
        - ServiceIds
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        AgeCategoryIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ServiceIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        ActivityStates:
          type: array
          items:
            $ref: '#/components/schemas/ActivityStates'
          nullable: true
      additionalProperties: false
      x-schema-id: AgeCategoryParameters
    AgeCategoryResult:
      title: AgeCategoryResult
      type: object
      properties:
        AgeCategories:
          type: array
          items:
            $ref: '#/components/schemas/AgeCategory'
          nullable: true
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: AgeCategoryResult
    AlternativePaymentMethods:
      enum:
        - Ideal
        - ApplePay
        - GooglePay
        - SepaDirectDebit
      type: string
    AlternativePaymentParameters:
      title: AlternativePaymentParameters
      required:
        - AccessToken
        - Amount
        - Client
        - ClientToken
        - CustomerId
        - Method
        - RedirectUrl
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        CustomerId:
          type: string
          format: uuid
        Amount:
          $ref: '#/components/schemas/AmountParameters'
        Method:
          $ref: '#/components/schemas/AlternativePaymentMethods'
        RedirectUrl:
          minLength: 1
          type: string
          format: uri
      additionalProperties: false
      x-schema-id: AlternativePaymentParameters
    AlternativePaymentResult:
      title: AlternativePaymentResult
      type: object
      properties:
        PaymentId:
          type: string
          format: uuid
        NextAction:
          title: NextAction
          properties:
            discriminator:
              $ref: '#/components/schemas/NextActionType'
            value:
              oneOf:
                - $ref: '#/components/schemas/NextAction'
      additionalProperties: false
      x-schema-id: AlternativePaymentResult
    Amount:
      title: Amount
      type: object
      properties:
        Currency:
          type: string
          nullable: true
        NetValue:
          type: number
          format: double
        GrossValue:
          type: number
          format: double
        TaxValues:
          type: array
          items:
            $ref: '#/components/schemas/TaxValue'
          nullable: true
        Breakdown:
          $ref: '#/components/schemas/TaxBreakdown'
      additionalProperties: false
      x-schema-id: Amount
    AmountParameters:
      title: AmountParameters
      required:
        - Currency
        - TaxCodes
      type: object
      properties:
        Currency:
          minLength: 1
          type: string
          format: currency
        TaxCodes:
          type: array
          items:
            type: string
        NetValue:
          type: number
          format: double
          nullable: true
        GrossValue:
          type: number
          format: double
          nullable: true
      additionalProperties: false
      x-schema-id: AmountParameters
    AvailabilityAdjustment:
      title: AvailabilityAdjustment
      required:
        - ActivityState
        - FirstTimeUnitStartUtc
        - Id
        - LastTimeUnitStartUtc
        - ResourceCategoryId
        - UnitCount
      type: object
      properties:
        Id:
          type: string
          format: uuid
        AvailabilityBlockId:
          type: string
          format: uuid
          nullable: true
        ResourceCategoryId:
          type: string
          format: uuid
        StartUtc:
          type: string
          nullable: true
          deprecated: true
        EndUtc:
          type: string
          nullable: true
          deprecated: true
        FirstTimeUnitStartUtc:
          minLength: 1
          type: string
          format: date-time
        LastTimeUnitStartUtc:
          minLength: 1
          type: string
          format: date-time
        UnitCount:
          type: integer
          format: int32
        ActivityState:
          $ref: '#/components/schemas/ActivityState'
        ReleaseOverrideUtc:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
      x-schema-id: AvailabilityAdjustment
    AvailabilityAdjustmentParameters:
      title: AvailabilityAdjustmentParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        AvailabilityAdjustmentIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        ActivityStates:
          type: array
          items:
            $ref: '#/components/schemas/ActivityState'
          nullable: true
      additionalProperties: false
      x-schema-id: AvailabilityAdjustmentParameters
    AvailabilityAdjustmentResult:
      title: AvailabilityAdjustmentResult
      required:
        - AvailabilityAdjustments
      type: object
      properties:
        AvailabilityAdjustments:
          type: array
          items:
            $ref: '#/components/schemas/AvailabilityAdjustment'
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: AvailabilityAdjustmentResult
    AvailabilityBlock:
      title: AvailabilityBlock
      required:
        - PickupDistribution
      type: object
      properties:
        Id:
          type: string
          format: uuid
        EnterpriseId:
          type: string
          format: uuid
        ServiceId:
          type: string
          format: uuid
        RateId:
          type: string
          format: uuid
        VoucherId:
          type: string
          format: uuid
          nullable: true
        BookerId:
          type: string
          format: uuid
          nullable: true
        CompanyId:
          type: string
          format: uuid
          nullable: true
        TravelAgencyId:
          type: string
          format: uuid
          nullable: true
        Budget:
          $ref: '#/components/schemas/CurrencyValueOld'
        State:
          type: string
          nullable: true
        ReservationPurpose:
          type: string
          nullable: true
        CreatedUtc:
          type: string
          nullable: true
        UpdatedUtc:
          type: string
          nullable: true
        ActivityState:
          type: string
          nullable: true
        StartUtc:
          type: string
          nullable: true
          deprecated: true
        EndUtc:
          type: string
          nullable: true
          deprecated: true
        FirstTimeUnitStartUtc:
          type: string
          nullable: true
        LastTimeUnitStartUtc:
          type: string
          nullable: true
        ReleasedUtc:
          type: string
          nullable: true
        RollingReleaseOffset:
          type: string
          nullable: true
        ExternalIdentifier:
          type: string
          nullable: true
        Name:
          type: string
          nullable: true
        Notes:
          type: string
          nullable: true
        PickupDistribution:
          $ref: '#/components/schemas/PickupDistribution'
      additionalProperties: false
      x-schema-id: AvailabilityBlock
    AvailabilityBlockAddParameters:
      title: AvailabilityBlockAddParameters
      required:
        - FirstTimeUnitStartUtc
        - LastTimeUnitStartUtc
        - RateId
        - ReleasedUtc
        - ServiceId
      type: object
      properties:
        ServiceId:
          type: string
          format: uuid
        RateId:
          type: string
          format: uuid
        FirstTimeUnitStartUtc:
          minLength: 1
          type: string
        LastTimeUnitStartUtc:
          minLength: 1
          type: string
        StartUtc:
          type: string
          nullable: true
          deprecated: true
        EndUtc:
          type: string
          nullable: true
          deprecated: true
        ReleasedUtc:
          minLength: 1
          type: string
        Name:
          type: string
          nullable: true
        VoucherCode:
          type: string
          nullable: true
        BookerId:
          type: string
          format: uuid
          nullable: true
        CompanyId:
          type: string
          format: uuid
          nullable: true
        TravelAgencyId:
          type: string
          format: uuid
          nullable: true
        Budget:
          $ref: '#/components/schemas/CurrencyValueOld'
        ReservationPurpose:
          anyOf:
            - $ref: '#/components/schemas/ReservationPurpose'
          nullable: true
        ExternalIdentifier:
          type: string
          nullable: true
        Notes:
          type: string
          nullable: true
        State:
          anyOf:
            - $ref: '#/components/schemas/AvailabilityBlockState'
          nullable: true
      additionalProperties: false
      x-schema-id: AvailabilityBlockAddParameters
    AvailabilityBlockAddResult:
      title: AvailabilityBlockAddResult
      type: object
      properties:
        AvailabilityBlocks:
          type: array
          items:
            $ref: '#/components/schemas/AvailabilityBlock'
          nullable: true
      additionalProperties: false
      x-schema-id: AvailabilityBlockAddResult
    AvailabilityBlockAssignment:
      title: AvailabilityBlockAssignment
      type: object
      properties:
        RateId:
          type: string
          format: uuid
        AvailabilityBlockId:
          type: string
          format: uuid
      additionalProperties: false
      x-schema-id: AvailabilityBlockAssignment
    AvailabilityBlockExtent:
      title: AvailabilityBlockExtent
      type: object
      properties:
        AvailabilityBlocks:
          type: boolean
        Adjustments:
          type: boolean
        ServiceOrders:
          type: boolean
        Rates:
          type: boolean
      additionalProperties: false
      x-schema-id: AvailabilityBlockExtent
    AvailabilityBlockParameters:
      title: AvailabilityBlockParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Extent
        - Limitation
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        Extent:
          $ref: '#/components/schemas/AvailabilityBlockExtent'
        ServiceIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        AvailabilityBlockIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        CreatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        CollidingUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        ReleasedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        ExternalIdentifiers:
          maxItems: 1000
          type: array
          items:
            type: string
          nullable: true
        States:
          type: array
          items:
            type: string
          nullable: true
        ActivityStates:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
      x-schema-id: AvailabilityBlockParameters
    AvailabilityBlockResult:
      title: AvailabilityBlockResult
      type: object
      properties:
        AvailabilityBlocks:
          type: array
          items:
            $ref: '#/components/schemas/AvailabilityBlock'
          nullable: true
        ServiceOrders:
          type: array
          items:
            $ref: '#/components/schemas/ReservationOld'
          nullable: true
        Adjustments:
          type: array
          items:
            $ref: '#/components/schemas/AvailabilityAdjustment'
          nullable: true
        Rates:
          type: array
          items:
            $ref: '#/components/schemas/Rate'
          nullable: true
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: AvailabilityBlockResult
    AvailabilityBlockState:
      enum:
        - Confirmed
        - Optional
        - Inquired
        - Canceled
      type: string
    AvailabilityBlockUpdateParameters:
      title: AvailabilityBlockUpdateParameters
      type: object
      properties:
        AvailabilityBlockId:
          type: string
          format: uuid
        Name:
          $ref: '#/components/schemas/StringUpdateValue'
        FirstTimeUnitStartUtc:
          $ref: '#/components/schemas/StringUpdateValue'
        LastTimeUnitStartUtc:
          $ref: '#/components/schemas/StringUpdateValue'
        StartUtc:
          $ref: '#/components/schemas/StringUpdateValue'
        EndUtc:
          $ref: '#/components/schemas/StringUpdateValue'
        ReleasedUtc:
          $ref: '#/components/schemas/StringUpdateValue'
        ExternalIdentifier:
          $ref: '#/components/schemas/StringUpdateValue'
        State:
          $ref: '#/components/schemas/StringUpdateValue'
        ReservationPurpose:
          $ref: '#/components/schemas/StringUpdateValue'
        CompanyId:
          $ref: '#/components/schemas/GuidNullableUpdateValue'
        TravelAgencyId:
          $ref: '#/components/schemas/GuidNullableUpdateValue'
        BookerId:
          $ref: '#/components/schemas/GuidNullableUpdateValue'
        Notes:
          $ref: '#/components/schemas/StringUpdateValue'
        Budget:
          $ref: '#/components/schemas/CurrencyValueOldUpdateValue'
        CancellationReason:
          $ref: '#/components/schemas/StringUpdateValue'
        CancellationReasonDetail:
          $ref: '#/components/schemas/StringUpdateValue'
      additionalProperties: false
      x-schema-id: AvailabilityBlockUpdateParameters
    BaseRatePricingParameters:
      title: BaseRatePricingParameters
      type: object
      properties:
        Amount:
          $ref: '#/components/schemas/AmountParameters'
        NegativeOccupancyAdjustment:
          type: number
          format: double
        ExtraOccupancyAdjustment:
          type: number
          format: double
      additionalProperties: false
      x-schema-id: BaseRatePricingParameters
    Bill:
      title: Bill
      required:
        - EnterpriseId
      type: object
      properties:
        Id:
          type: string
          format: uuid
        EnterpriseId:
          type: string
          format: uuid
        AccountId:
          type: string
          format: uuid
        CustomerId:
          type: string
          format: uuid
          nullable: true
          deprecated: true
        CompanyId:
          type: string
          format: uuid
          nullable: true
        CounterId:
          type: string
          format: uuid
          nullable: true
        State:
          type: string
          nullable: true
        Type:
          type: string
          nullable: true
        Number:
          type: string
          nullable: true
        VariableSymbol:
          type: string
          nullable: true
        CreatedUtc:
          type: string
          format: date-time
          nullable: true
        IssuedUtc:
          type: string
          format: date-time
          nullable: true
        TaxedUtc:
          type: string
          format: date-time
          nullable: true
        PaidUtc:
          type: string
          format: date-time
          nullable: true
        DueUtc:
          type: string
          format: date-time
          nullable: true
        UpdatedUtc:
          type: string
          format: date-time
          nullable: true
        PurchaseOrderNumber:
          type: string
          nullable: true
        Notes:
          type: string
          nullable: true
        Options:
          $ref: '#/components/schemas/BillOptions'
        Revenue:
          type: array
          items:
            $ref: '#/components/schemas/AccountingItem'
          nullable: true
          deprecated: true
        Payments:
          type: array
          items:
            $ref: '#/components/schemas/AccountingItem'
          nullable: true
          deprecated: true
        OrderItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemOld'
          nullable: true
          deprecated: true
        PaymentItems:
          type: array
          items:
            $ref: '#/components/schemas/PaymentItemOld'
          nullable: true
          deprecated: true
        AssigneeData:
          title: AssigneeData
          properties:
            discriminator:
              $ref: '#/components/schemas/BillAssigneeDataDiscriminator'
            value:
              oneOf:
                - $ref: '#/components/schemas/BillCompanyData'
                - $ref: '#/components/schemas/BillCustomerData'
          deprecated: true
        OwnerData:
          title: OwnerData
          properties:
            discriminator:
              $ref: '#/components/schemas/BillAssigneeDataDiscriminator'
            value:
              oneOf:
                - $ref: '#/components/schemas/BillCompanyData'
                - $ref: '#/components/schemas/BillCustomerData'
        CompanyDetails:
          $ref: '#/components/schemas/BillCompanyData'
        EnterpriseData:
          $ref: '#/components/schemas/BillEnterpriseData'
      additionalProperties: false
      x-schema-id: Bill
    BillAddParameters:
      title: BillAddParameters
      required:
        - AccountId
      type: object
      properties:
        AccountId:
          type: string
          format: uuid
        Name:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: BillAddParameters
    BillAssigneeDataDiscriminator:
      enum:
        - BillCustomerData
        - BillCompanyData
      type: string
    BillCloseParameters:
      title: BillCloseParameters
      required:
        - AccessToken
        - BillId
        - Client
        - ClientToken
        - Type
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        EnterpriseId:
          type: string
          format: uuid
          nullable: true
        BillId:
          type: string
          format: uuid
        Type:
          minLength: 1
          type: string
        BillCounterId:
          type: string
          format: uuid
          nullable: true
        FiscalMachineId:
          type: string
          format: uuid
          nullable: true
        Options:
          $ref: '#/components/schemas/BillOptionsParameters'
        SendEmail:
          type: boolean
        EmailAddress:
          type: string
          nullable: true
        TaxedDate:
          $ref: '#/components/schemas/StringUpdateValue'
        DueDate:
          $ref: '#/components/schemas/StringUpdateValue'
        VariableSymbol:
          $ref: '#/components/schemas/StringUpdateValue'
        TaxIdentifier:
          $ref: '#/components/schemas/StringUpdateValue'
        AccountTaxIdentifier:
          $ref: '#/components/schemas/StringUpdateValue'
        CompanyTaxIdentifier:
          $ref: '#/components/schemas/StringUpdateValue'
        PurchaseOrderNumber:
          $ref: '#/components/schemas/StringUpdateValue'
        Notes:
          $ref: '#/components/schemas/StringUpdateValue'
        Address:
          $ref: '#/components/schemas/AddressParameters'
        AccountAddress:
          $ref: '#/components/schemas/AddressParameters'
        CompanyAddress:
          $ref: '#/components/schemas/AddressParameters'
      additionalProperties: false
      x-schema-id: BillCloseParameters
    BillCompanyData:
      title: BillCompanyData
      type: object
      properties:
        Id:
          type: string
          nullable: true
        Address:
          $ref: '#/components/schemas/Address'
        LegalIdentifiers:
          type: object
          additionalProperties:
            type: string
            nullable: true
          nullable: true
        BillingCode:
          type: string
          nullable: true
        Name:
          type: string
          nullable: true
        FiscalIdentifier:
          type: string
          nullable: true
        AdditionalTaxIdentifier:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: BillCompanyData
    BillCustomerData:
      title: BillCustomerData
      type: object
      properties:
        Id:
          type: string
          nullable: true
        Address:
          $ref: '#/components/schemas/Address'
        LegalIdentifiers:
          type: object
          additionalProperties:
            type: string
            nullable: true
          nullable: true
        BillingCode:
          type: string
          nullable: true
        LastName:
          type: string
          nullable: true
        FirstName:
          type: string
          nullable: true
        SecondLastName:
          type: string
          nullable: true
        TitlePrefix:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: BillCustomerData
    BillDeleteParameters:
      title: BillDeleteParameters
      required:
        - AccessToken
        - BillIds
        - Client
        - ClientToken
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        EnterpriseId:
          type: string
          format: uuid
          nullable: true
        BillIds:
          type: array
          items:
            type: string
            format: uuid
      additionalProperties: false
      x-schema-id: BillDeleteParameters
    BillEnterpriseData:
      title: BillEnterpriseData
      type: object
      properties:
        AdditionalTaxIdentifier:
          type: string
          nullable: true
        CompanyName:
          type: string
          nullable: true
        BankAccount:
          type: string
          nullable: true
        BankName:
          type: string
          nullable: true
        Iban:
          type: string
          nullable: true
        Bic:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: BillEnterpriseData
    BillExtent:
      title: BillExtent
      type: object
      properties:
        Items:
          type: boolean
      additionalProperties: false
      x-schema-id: BillExtent
    BillFilterParameters:
      title: BillFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        Extent:
          $ref: '#/components/schemas/BillExtent'
        TimeFilter:
          type: string
          nullable: true
          deprecated: true
        StartUtc:
          type: string
          nullable: true
          deprecated: true
        EndUtc:
          type: string
          nullable: true
          deprecated: true
        ClosedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        PaidUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        DueUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        CreatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        BillIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        CustomerIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        State:
          anyOf:
            - $ref: '#/components/schemas/BillState'
          nullable: true
      additionalProperties: false
      x-schema-id: BillFilterParameters
    BillFiscalMachineDataDiscriminator:
      enum:
        - ItalianFiscalMachineData
      type: string
    BillOptions:
      title: BillOptions
      type: object
      properties:
        DisplayCustomer:
          type: boolean
        DisplayTaxation:
          type: boolean
        TrackReceivable:
          type: boolean
        DisplayCid:
          type: boolean
        Rebated:
          type: boolean
          deprecated: true
      additionalProperties: false
      x-schema-id: BillOptions
    BillOptionsParameters:
      title: BillOptionsParameters
      required:
        - DisplayCustomer
        - DisplayTaxation
      type: object
      properties:
        DisplayCustomer:
          $ref: '#/components/schemas/BooleanUpdateValue'
        DisplayTaxation:
          $ref: '#/components/schemas/BooleanUpdateValue'
        TrackReceivable:
          $ref: '#/components/schemas/BooleanUpdateValue'
        DisplayCid:
          $ref: '#/components/schemas/BooleanUpdateValue'
      additionalProperties: false
      x-schema-id: BillOptionsParameters
    BillPdfParameters:
      title: BillPdfParameters
      required:
        - AccessToken
        - BillId
        - Client
        - ClientToken
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        BillId:
          type: string
          format: uuid
        BillPrintEventId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: BillPdfParameters
    BillResult:
      title: BillResult
      type: object
      properties:
        Bills:
          type: array
          items:
            $ref: '#/components/schemas/Bill'
          nullable: true
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: BillResult
    BillState:
      enum:
        - Open
        - Closed
      type: string
    BookableServiceData:
      title: BookableServiceData
      type: object
      properties:
        StartOffset:
          type: string
          nullable: true
        EndOffset:
          type: string
          nullable: true
        OccupancyStartOffset:
          type: string
          nullable: true
        OccupancyEndOffset:
          type: string
          nullable: true
        TimeUnit:
          type: string
          nullable: true
          deprecated: true
        TimeUnitPeriod:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: BookableServiceData
    BooleanNullableUpdateValue:
      title: UpdateValue`1
      type: object
      properties:
        Value:
          type: boolean
          nullable: true
      additionalProperties: false
      x-schema-id: UpdateValue`1
    BooleanUpdateValue:
      title: UpdateValue`1
      type: object
      properties:
        Value:
          type: boolean
      additionalProperties: false
      x-schema-id: UpdateValue`1
    BusinessSegment:
      title: BusinessSegment
      required:
        - CreatedUtc
        - Id
        - IsActive
        - Name
        - ServiceId
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          format: uuid
        ServiceId:
          type: string
          format: uuid
        IsActive:
          type: boolean
        Name:
          minLength: 1
          type: string
        CreatedUtc:
          minLength: 1
          type: string
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          format: date-time
      additionalProperties: false
      x-schema-id: BusinessSegment
    BusinessSegmentFilterParameters:
      title: BusinessSegmentFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
        - ServiceIds
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        Ids:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ServiceIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        ActivityStates:
          type: array
          items:
            $ref: '#/components/schemas/ActivityStates'
          nullable: true
      additionalProperties: false
      x-schema-id: BusinessSegmentFilterParameters
    BusinessSegmentResult:
      title: BusinessSegmentResult
      type: object
      properties:
        BusinessSegments:
          type: array
          items:
            $ref: '#/components/schemas/BusinessSegment'
          nullable: true
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: BusinessSegmentResult
    CancellationFeeExtent:
      enum:
        - TimeUnits
        - Products
      type: string
    CancellationPolicy:
      title: CancellationPolicy
      required:
        - AbsoluteFee
        - Applicability
        - ApplicabilityOffset
        - CreatedUtc
        - FeeExtent
        - Id
        - RateGroupId
        - RelativeFee
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          format: uuid
        RateGroupId:
          type: string
          format: uuid
        CreatedUtc:
          minLength: 1
          type: string
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          format: date-time
        Applicability:
          $ref: '#/components/schemas/CancellationPolicyApplicability'
        FeeExtent:
          type: array
          items:
            $ref: '#/components/schemas/CancellationFeeExtent'
        ApplicabilityOffset:
          minLength: 1
          type: string
        FeeMaximumTimeUnits:
          type: integer
          format: int32
          nullable: true
        AbsoluteFee:
          $ref: '#/components/schemas/CurrencyValue'
        RelativeFee:
          type: number
          format: double
      additionalProperties: false
      x-schema-id: CancellationPolicy
    CancellationPolicyApplicability:
      enum:
        - Creation
        - Start
        - StartDate
      type: string
    CancellationPolicyFilterParameters:
      title: CancellationPolicyFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
        - ServiceIds
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ServiceIds:
          maxItems: 100
          type: array
          items:
            type: string
            format: uuid
        CancellationPolicyIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        RateGroupIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
      additionalProperties: false
      x-schema-id: CancellationPolicyFilterParameters
    CancellationPolicyResult:
      title: CancellationPolicyResult
      required:
        - CancellationPolicies
      type: object
      properties:
        CancellationPolicies:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/CancellationPolicy'
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: CancellationPolicyResult
    Cashier:
      title: Cashier
      required:
        - CreatedUtc
        - EnterpriseId
        - Id
        - IsActive
        - Name
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          format: uuid
        EnterpriseId:
          type: string
          format: uuid
        IsActive:
          type: boolean
        Name:
          minLength: 1
          type: string
        CreatedUtc:
          minLength: 1
          type: string
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          format: date-time
      additionalProperties: false
      x-schema-id: Cashier
    CashierParameters:
      title: CashierParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        Ids:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        ActivityStates:
          type: array
          items:
            $ref: '#/components/schemas/ActivityStates'
          nullable: true
      additionalProperties: false
      x-schema-id: CashierParameters
    CashierResult:
      title: CashierResult
      type: object
      properties:
        Cashiers:
          type: array
          items:
            $ref: '#/components/schemas/Cashier'
          nullable: true
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: CashierResult
    CashierTransaction:
      title: CashierTransaction
      type: object
      properties:
        Id:
          type: string
          format: uuid
        EnterpriseId:
          type: string
          format: uuid
        CashierId:
          type: string
          format: uuid
        PaymentId:
          type: string
          format: uuid
          nullable: true
        CreatedUtc:
          type: string
          nullable: true
        Number:
          type: string
          nullable: true
        Notes:
          type: string
          nullable: true
        Amount:
          $ref: '#/components/schemas/CurrencyValueOld'
      additionalProperties: false
      x-schema-id: CashierTransaction
    CashierTransactionParameters:
      title: CashierTransactionParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        CashierTransactionIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        CreatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        StartUtc:
          type: string
          nullable: true
          deprecated: true
        EndUtc:
          type: string
          nullable: true
          deprecated: true
      additionalProperties: false
      x-schema-id: CashierTransactionParameters
    CashierTransactionResult:
      title: CashierTransactionResult
      type: object
      properties:
        CashierTransactions:
          type: array
          items:
            $ref: '#/components/schemas/CashierTransaction'
          nullable: true
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: CashierTransactionResult
    CategoryAdjustment:
      title: CategoryAdjustment
      type: object
      properties:
        CategoryId:
          type: string
          format: uuid
        ParentCategoryId:
          type: string
          format: uuid
          nullable: true
        AbsoluteValue:
          type: number
          format: double
        RelativeValue:
          type: number
          format: double
      additionalProperties: false
      x-schema-id: CategoryAdjustment
    CategoryAvailability:
      title: CategoryAvailability
      type: object
      properties:
        CategoryId:
          type: string
          format: uuid
        Availabilities:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        Adjustments:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
      additionalProperties: false
      x-schema-id: CategoryAvailability
    CategoryPricing:
      title: CategoryPricing
      type: object
      properties:
        CategoryId:
          type: string
          format: uuid
        Prices:
          type: array
          items:
            type: number
            format: double
          nullable: true
          deprecated: true
        AmountPrices:
          type: array
          items:
            $ref: '#/components/schemas/Amount'
          nullable: true
      additionalProperties: false
      x-schema-id: CategoryPricing
    ChannelManagerReservation:
      title: ChannelManagerReservation
      type: object
      properties:
        ReservationId:
          type: string
          format: uuid
        RequestedRateCode:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: ChannelManagerReservation
    ChargeCreditCardParameters:
      title: ChargeCreditCardParameters
      required:
        - AccessToken
        - Amount
        - Client
        - ClientToken
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        BillId:
          type: string
          format: uuid
          nullable: true
        AccountingCategoryId:
          type: string
          format: uuid
          nullable: true
        Amount:
          $ref: '#/components/schemas/ExtendedAmountParameters'
        Category:
          $ref: '#/components/schemas/AccountingCategoryParameters'
        Notes:
          type: string
          nullable: true
        CreditCardId:
          type: string
          format: uuid
        ReceiptIdentifier:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: ChargeCreditCardParameters
    ChargeCreditCardResult:
      title: ChargeCreditCardResult
      type: object
      properties:
        PaymentId:
          type: string
          format: uuid
      additionalProperties: false
      x-schema-id: ChargeCreditCardResult
    ChargeableCustomer:
      title: ChargeableCustomer
      type: object
      properties:
        Customer:
          $ref: '#/components/schemas/Customer'
        Reservation:
          $ref: '#/components/schemas/ReservationOld'
        Id:
          type: string
          format: uuid
        FirstName:
          type: string
          nullable: true
        LastName:
          type: string
          nullable: true
        RoomNumber:
          type: string
          nullable: true
          deprecated: true
        ResourceName:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: ChargeableCustomer
    ClearRestrictionParameters:
      title: ClearRestrictionParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Data
        - ServiceId
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        ServiceId:
          type: string
          format: uuid
        Data:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/RestrictionClearData'
      additionalProperties: false
      x-schema-id: ClearRestrictionParameters
    Companionship:
      title: Companionship
      type: object
      properties:
        Id:
          type: string
          format: uuid
        CustomerId:
          type: string
          format: uuid
        ReservationGroupId:
          type: string
          format: uuid
        ReservationId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: Companionship
    CompanionshipExtent:
      title: CompanionshipExtent
      type: object
      properties:
        Reservations:
          type: boolean
        ReservationGroups:
          type: boolean
        Customers:
          type: boolean
      additionalProperties: false
      x-schema-id: CompanionshipExtent
    CompanionshipFilterParameters:
      title: CompanionshipFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Extent
        - Limitation
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        CompanionshipIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        Extent:
          $ref: '#/components/schemas/CompanionshipExtent'
        ReservationIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        CustomerIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ReservationGroupIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
      additionalProperties: false
      x-schema-id: CompanionshipFilterParameters
    CompanionshipResult:
      title: CompanionshipResult
      type: object
      properties:
        Companionships:
          type: array
          items:
            $ref: '#/components/schemas/Companionship'
          nullable: true
        Reservations:
          type: array
          items:
            $ref: '#/components/schemas/ReservationOld'
          nullable: true
        ReservationGroups:
          type: array
          items:
            $ref: '#/components/schemas/ReservationGroupOld'
          nullable: true
        Customers:
          type: array
          items:
            $ref: '#/components/schemas/Customer'
          nullable: true
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: CompanionshipResult
    Company:
      title: Company
      required:
        - ChainId
        - Id
        - IsActive
        - Name
        - Number
      type: object
      properties:
        Id:
          type: string
          format: uuid
        ChainId:
          type: string
          format: uuid
        Name:
          minLength: 1
          type: string
        MotherCompanyId:
          type: string
          format: uuid
          nullable: true
        InvoicingEmail:
          type: string
          format: email
          nullable: true
        WebsiteUrl:
          type: string
          format: uri
          nullable: true
        InvoiceDueInterval:
          type: string
          nullable: true
        Options:
          $ref: '#/components/schemas/CompanyOptions'
        CreditRating:
          $ref: '#/components/schemas/CreditRating'
        Department:
          type: string
          nullable: true
        DunsNumber:
          type: string
          nullable: true
        ReferenceIdentifier:
          type: string
          nullable: true
        AccountingCode:
          type: string
          nullable: true
        AdditionalTaxIdentifier:
          type: string
          nullable: true
        BillingCode:
          type: string
          nullable: true
        Contact:
          type: string
          nullable: true
        ContactPerson:
          type: string
          nullable: true
        ElectronicInvoiceIdentifier:
          type: string
          nullable: true
        Identifier:
          type: string
          nullable: true
        Iata:
          type: string
          nullable: true
        IsActive:
          type: boolean
        Notes:
          type: string
          nullable: true
        Number:
          type: integer
          format: int64
        TaxIdentifier:
          type: string
          nullable: true
        Telephone:
          type: string
          format: tel
          nullable: true
        CreatedUtc:
          type: string
          format: date-time
          nullable: true
        UpdatedUtc:
          type: string
          format: date-time
          nullable: true
        Address:
          $ref: '#/components/schemas/OldAddress'
        AddressId:
          type: string
          format: uuid
          nullable: true
        TaxIdentificationNumber:
          type: string
          nullable: true
          deprecated: true
        ExternalIdentifier:
          maxLength: 255
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: Company
    CompanyAddParameters:
      title: CompanyAddParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Name
        - Options
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        ChainId:
          type: string
          format: uuid
          nullable: true
        Name:
          minLength: 1
          type: string
        MotherCompanyId:
          type: string
          format: uuid
          nullable: true
        InvoicingEmail:
          type: string
          format: email
          nullable: true
        WebsiteUrl:
          type: string
          format: uri
          nullable: true
        InvoiceDueInterval:
          type: string
          nullable: true
        Options:
          $ref: '#/components/schemas/CompanyOptionsParameters'
        CreditRating:
          $ref: '#/components/schemas/CreditRatingParameters'
        Department:
          type: string
          nullable: true
        DunsNumber:
          type: string
          nullable: true
        ReferenceIdentifier:
          type: string
          nullable: true
        AccountingCode:
          type: string
          nullable: true
        AdditionalTaxIdentifier:
          type: string
          nullable: true
        BillingCode:
          type: string
          nullable: true
        Contact:
          type: string
          nullable: true
        ContactPerson:
          type: string
          nullable: true
        Identifier:
          type: string
          nullable: true
        Iata:
          type: string
          nullable: true
        Notes:
          type: string
          nullable: true
        TaxIdentifier:
          type: string
          nullable: true
        Telephone:
          type: string
          format: tel
          nullable: true
        Address:
          $ref: '#/components/schemas/AddressParameters'
        ExternalIdentifier:
          maxLength: 255
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: CompanyAddParameters
    CompanyClassifications:
      title: CompanyClassifications
      type: object
      properties:
        Corporate:
          type: boolean
        Internal:
          type: boolean
        Private:
          type: boolean
        OnlineTravelAgency:
          type: boolean
        GlobalDistributionSystem:
          type: boolean
        Marketing:
          type: boolean
        Inactive:
          type: boolean
      additionalProperties: false
      x-schema-id: CompanyClassifications
    CompanyClassificationsParameters:
      title: CompanyClassificationsParameters
      type: object
      properties:
        Corporate:
          type: boolean
        Internal:
          type: boolean
        Private:
          type: boolean
        OnlineTravelAgency:
          type: boolean
        GlobalDistributionSystem:
          type: boolean
        Marketing:
          type: boolean
        Inactive:
          type: boolean
      additionalProperties: false
      x-schema-id: CompanyClassificationsParameters
    CompanyContractFilterParameters:
      title: CompanyContractFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
        - ServiceIds
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        CompanyContractIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        CompanyIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ServiceIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
      additionalProperties: false
      x-schema-id: CompanyContractFilterParameters
    CompanyExtent:
      title: CompanyExtent
      type: object
      properties:
        Inactive:
          type: boolean
      additionalProperties: false
      x-schema-id: CompanyExtent
    CompanyFilterParameters:
      title: CompanyFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        CreatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        ChainIds:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        TimeFilter:
          anyOf:
            - $ref: '#/components/schemas/CompanyTimeFilter'
          nullable: true
          deprecated: true
        StartUtc:
          type: string
          format: date-time
          nullable: true
          deprecated: true
        EndUtc:
          type: string
          format: date-time
          nullable: true
          deprecated: true
        Ids:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ExternalIdentifiers:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
          nullable: true
        Name:
          type: string
          nullable: true
        Names:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
          nullable: true
        Extent:
          $ref: '#/components/schemas/CompanyExtent'
        Limitation:
          $ref: '#/components/schemas/Limitation'
      additionalProperties: false
      x-schema-id: CompanyFilterParameters
    CompanyNameParameters:
      title: CompanyNameParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Name
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Name:
          minLength: 1
          type: string
      additionalProperties: false
      x-schema-id: CompanyNameParameters
    CompanyOptions:
      title: CompanyOptions
      type: object
      properties:
        Invoiceable:
          type: boolean
        AddFeesToInvoices:
          type: boolean
      additionalProperties: false
      x-schema-id: CompanyOptions
    CompanyOptionsParameters:
      title: CompanyOptionsParameters
      type: object
      properties:
        Invoiceable:
          type: boolean
        AddFeesToInvoices:
          type: boolean
      additionalProperties: false
      x-schema-id: CompanyOptionsParameters
    CompanyResult:
      title: CompanyResult
      required:
        - Companies
      type: object
      properties:
        Companies:
          type: array
          items:
            $ref: '#/components/schemas/Company'
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: CompanyResult
    CompanyTimeFilter:
      enum:
        - Created
        - Updated
      type: string
    CompanyUpdateClassificationParameters:
      title: CompanyUpdateClassificationParameters
      type: object
      properties:
        Corporate:
          $ref: '#/components/schemas/BooleanUpdateValue'
        Internal:
          $ref: '#/components/schemas/BooleanUpdateValue'
        Private:
          $ref: '#/components/schemas/BooleanUpdateValue'
        OnlineTravelAgency:
          $ref: '#/components/schemas/BooleanUpdateValue'
        GlobalDistributionSystem:
          $ref: '#/components/schemas/BooleanUpdateValue'
        Marketing:
          $ref: '#/components/schemas/BooleanUpdateValue'
        Inactive:
          $ref: '#/components/schemas/BooleanUpdateValue'
      additionalProperties: false
      x-schema-id: CompanyUpdateClassificationParameters
    CompanyUpdateOptionParameters:
      title: CompanyUpdateOptionParameters
      type: object
      properties:
        Invoiceable:
          $ref: '#/components/schemas/BooleanUpdateValue'
        AddFeesToInvoices:
          $ref: '#/components/schemas/BooleanUpdateValue'
      additionalProperties: false
      x-schema-id: CompanyUpdateOptionParameters
    CompanyUpdateParameters:
      title: CompanyUpdateParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - CompanyId
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        ChainId:
          type: string
          format: uuid
          nullable: true
        CompanyId:
          type: string
          format: uuid
        Name:
          $ref: '#/components/schemas/StringUpdateValue'
        MotherCompanyId:
          $ref: '#/components/schemas/GuidNullableUpdateValue'
        InvoicingEmail:
          $ref: '#/components/schemas/StringUpdateValue'
        WebsiteUrl:
          $ref: '#/components/schemas/StringUpdateValue'
        InvoiceDueInterval:
          $ref: '#/components/schemas/StringUpdateValue'
        Options:
          $ref: '#/components/schemas/CompanyUpdateOptionParameters'
        CreditRating:
          $ref: '#/components/schemas/CreditRatingUpdateParameters'
        Department:
          $ref: '#/components/schemas/StringUpdateValue'
        DunsNumber:
          $ref: '#/components/schemas/StringUpdateValue'
        ReferenceIdentifier:
          $ref: '#/components/schemas/StringUpdateValue'
        AccountingCode:
          $ref: '#/components/schemas/StringUpdateValue'
        AdditionalTaxIdentifier:
          $ref: '#/components/schemas/StringUpdateValue'
        BillingCode:
          $ref: '#/components/schemas/StringUpdateValue'
        Contact:
          $ref: '#/components/schemas/StringUpdateValue'
        ContactPerson:
          $ref: '#/components/schemas/StringUpdateValue'
        Identifier:
          $ref: '#/components/schemas/StringUpdateValue'
        Iata:
          $ref: '#/components/schemas/StringUpdateValue'
        Notes:
          $ref: '#/components/schemas/StringUpdateValue'
        TaxIdentifier:
          $ref: '#/components/schemas/StringUpdateValue'
        Telephone:
          $ref: '#/components/schemas/StringUpdateValue'
        ExternalIdentifier:
          $ref: '#/components/schemas/StringUpdateValue'
      additionalProperties: false
      x-schema-id: CompanyUpdateParameters
    Configuration:
      title: Configuration
      type: object
      properties:
        NowUtc:
          type: string
          format: date-time
          nullable: true
        Enterprise:
          $ref: '#/components/schemas/Enterprise'
        Service:
          $ref: '#/components/schemas/Service'
        PaymentCardStorage:
          $ref: '#/components/schemas/PaymentCardStorage'
      additionalProperties: false
      x-schema-id: Configuration
    ConfigurationFilterParameters:
      title: ConfigurationFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        EnterpriseId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ConfigurationFilterParameters
    ConfirmReservationParameters:
      title: ConfirmReservationParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - ReservationIds
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        ReservationIds:
          type: array
          items:
            type: string
            format: uuid
        ReservationId:
          type: string
          format: uuid
          deprecated: true
        Extent:
          $ref: '#/components/schemas/ReservationExtent'
        SendConfirmationEmail:
          type: boolean
          nullable: true
      additionalProperties: false
      x-schema-id: ConfirmReservationParameters
    ContractResult:
      title: ContractResult
      required:
        - TravelAgencyContracts
      type: object
      properties:
        TravelAgencyContracts:
          type: array
          items:
            $ref: '#/components/schemas/TravelAgencyContract'
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ContractResult
    Coproduct:
      title: Coproduct
      required:
        - Discriminator
        - Value
      type: object
      properties:
        Discriminator:
          minLength: 1
          type: string
        Value: { }
      additionalProperties: false
      x-schema-id: Coproduct
    CoproductParameters:
      title: CoproductParameters
      type: object
      properties:
        Discriminator:
          type: string
          nullable: true
        Value:
          $ref: '#/components/schemas/JToken'
      additionalProperties: false
      x-schema-id: CoproductParameters
    CostParameters:
      title: CostParameters
      required:
        - Amount
        - Currency
        - Tax
      type: object
      properties:
        Amount:
          type: number
          format: double
        Currency:
          minLength: 1
          type: string
          format: currency
        Tax:
          type: number
          format: double
      additionalProperties: false
      x-schema-id: CostParameters
    Counter:
      title: Counter
      required:
        - CreatedUtc
        - EnterpriseId
        - Format
        - Id
        - IsDefault
        - Name
        - Type
        - UpdatedUtc
        - Value
      type: object
      properties:
        Id:
          type: string
          format: uuid
        EnterpriseId:
          type: string
          format: uuid
        Name:
          minLength: 1
          type: string
        IsDefault:
          type: boolean
        Value:
          type: integer
          format: int64
        Format:
          minLength: 1
          type: string
        Type:
          $ref: '#/components/schemas/EnterpriseScopeCounterDiscriminator'
        CreatedUtc:
          minLength: 1
          type: string
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          format: date-time
      additionalProperties: false
      x-schema-id: Counter
    CounterFilterParameters:
      title: CounterFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        CounterIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        Type:
          anyOf:
            - $ref: '#/components/schemas/EnterpriseScopeCounterDiscriminator'
          nullable: true
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
      additionalProperties: false
      x-schema-id: CounterFilterParameters
    CounterResult:
      title: CounterResult
      required:
        - BillCounters
        - BillPreviewCounters
        - Counters
        - ProformaCounters
        - RegistrationCardCounters
        - ServiceOrderCounters
      type: object
      properties:
        Counters:
          type: array
          items:
            $ref: '#/components/schemas/Counter'
        BillCounters:
          type: array
          items:
            $ref: '#/components/schemas/Counter'
          deprecated: true
        ProformaCounters:
          type: array
          items:
            $ref: '#/components/schemas/Counter'
          deprecated: true
        BillPreviewCounters:
          type: array
          items:
            $ref: '#/components/schemas/Counter'
          deprecated: true
        ServiceOrderCounters:
          type: array
          items:
            $ref: '#/components/schemas/Counter'
          deprecated: true
        RegistrationCardCounters:
          type: array
          items:
            $ref: '#/components/schemas/Counter'
          deprecated: true
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: CounterResult
    Country:
      title: Country
      type: object
      properties:
        Code:
          type: string
          nullable: true
        SovereignCountryCode:
          type: string
          nullable: true
        EnglishName:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: Country
    CountryGroup:
      title: CountryGroup
      type: object
      properties:
        Code:
          type: string
          nullable: true
        EnglishName:
          type: string
          nullable: true
        CountryCodes:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
      x-schema-id: CountryGroup
    CountryResult:
      title: CountryResult
      type: object
      properties:
        Countries:
          type: array
          items:
            $ref: '#/components/schemas/Country'
          nullable: true
        CountrySubdivisions:
          type: array
          items:
            $ref: '#/components/schemas/CountrySubdivision'
          nullable: true
        CountryRules:
          type: array
          items:
            $ref: '#/components/schemas/CountryRule'
          nullable: true
        CountryGroups:
          type: array
          items:
            $ref: '#/components/schemas/CountryGroup'
          nullable: true
      additionalProperties: false
      x-schema-id: CountryResult
    CountryRule:
      title: CountryRule
      type: object
      properties:
        CountryCode:
          type: string
          nullable: true
        IdentityCardExpirationDateNotRequired:
          type: boolean
        DriverLicenceExpirationDateNotRequired:
          type: boolean
      additionalProperties: false
      x-schema-id: CountryRule
    CountrySubdivision:
      title: CountrySubdivision
      type: object
      properties:
        Code:
          type: string
          nullable: true
        CountryCode:
          type: string
          nullable: true
        EnglishName:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: CountrySubdivision
    CreditCard:
      title: CreditCard
      required:
        - CreatedUtc
        - CustomerId
        - Id
        - IsActive
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          format: uuid
        EnterpriseId:
          type: string
          format: uuid
          nullable: true
        CustomerId:
          type: string
          format: uuid
        IsActive:
          type: boolean
        State:
          type: string
          nullable: true
        Kind:
          type: string
          nullable: true
        Format:
          type: string
          nullable: true
        Type:
          type: string
          nullable: true
        ObfuscatedNumber:
          type: string
          nullable: true
        Expiration:
          type: string
          nullable: true
        CreatedUtc:
          minLength: 1
          type: string
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          format: date-time
      additionalProperties: false
      x-schema-id: CreditCard
    CreditCardData:
      title: CreditCardData
      required:
        - Expiration
        - StorageData
      type: object
      properties:
        MaskedStorageData:
          type: string
          nullable: true
          readOnly: true
        StorageData:
          minLength: 1
          type: string
        ObfuscatedNumber:
          type: string
          nullable: true
          deprecated: true
        Expiration:
          minLength: 1
          type: string
      additionalProperties: false
      x-schema-id: CreditCardData
    CreditCardFilterParameters:
      title: CreditCardFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        CreditCardIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        CustomerIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
      additionalProperties: false
      x-schema-id: CreditCardFilterParameters
    CreditCardParameters:
      title: CreditCardParameters
      required:
        - Name
        - Number
        - Type
      type: object
      properties:
        Type:
          minLength: 1
          type: string
        ObfuscatedNumber:
          type: string
          nullable: true
          readOnly: true
        Number:
          minLength: 1
          type: string
        Expiration:
          type: string
          nullable: true
        Name:
          minLength: 1
          type: string
      additionalProperties: false
      x-schema-id: CreditCardParameters
    CreditCardPaymentParameters:
      title: CreditCardPaymentParameters
      required:
        - AccessToken
        - Amount
        - Client
        - ClientToken
        - CreditCard
        - CustomerId
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        BillId:
          type: string
          format: uuid
          nullable: true
        AccountingCategoryId:
          type: string
          format: uuid
          nullable: true
        Amount:
          $ref: '#/components/schemas/ExtendedAmountParameters'
        Category:
          $ref: '#/components/schemas/AccountingCategoryParameters'
        Notes:
          type: string
          nullable: true
        CustomerId:
          type: string
          format: uuid
        CreditCard:
          $ref: '#/components/schemas/CreditCardParameters'
        ReceiptIdentifier:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: CreditCardPaymentParameters
    CreditCardResult:
      title: CreditCardResult
      type: object
      properties:
        CreditCards:
          type: array
          items:
            $ref: '#/components/schemas/CreditCard'
          nullable: true
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: CreditCardResult
    CreditCardTransaction:
      title: CreditCardTransaction
      type: object
      properties:
        PaymentId:
          type: string
          format: uuid
        SettlementId:
          type: string
          nullable: true
        SettledUtc:
          type: string
          nullable: true
        Fee:
          $ref: '#/components/schemas/ExtendedAmount'
        AdjustedFee:
          $ref: '#/components/schemas/ExtendedAmount'
        ChargedAmount:
          $ref: '#/components/schemas/ExtendedAmount'
        SettledAmount:
          $ref: '#/components/schemas/ExtendedAmount'
      additionalProperties: false
      x-schema-id: CreditCardTransaction
    CreditRating:
      title: CreditRating
      type: object
      properties:
        Basic:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: CreditRating
    CreditRatingParameters:
      title: CreditRatingParameters
      type: object
      properties:
        Basic:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: CreditRatingParameters
    CreditRatingUpdateParameters:
      title: CreditRatingUpdateParameters
      type: object
      properties:
        Basic:
          $ref: '#/components/schemas/StringUpdateValue'
      additionalProperties: false
      x-schema-id: CreditRatingUpdateParameters
    Culture:
      title: Culture
      type: object
      properties:
        Code:
          type: string
          nullable: true
        EnglishName:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: Culture
    CultureResult:
      title: CultureResult
      type: object
      properties:
        Cultures:
          type: array
          items:
            $ref: '#/components/schemas/Culture'
          nullable: true
      additionalProperties: false
      x-schema-id: CultureResult
    Currency:
      title: Currency
      type: object
      properties:
        Code:
          type: string
          nullable: true
        Precision:
          type: integer
          format: int32
      additionalProperties: false
      x-schema-id: Currency
    CurrencyAcceptance:
      title: CurrencyAcceptance
      required:
        - Currency
        - IsDefault
        - IsEnabled
      type: object
      properties:
        Currency:
          minLength: 1
          type: string
          format: currency
        IsDefault:
          type: boolean
        IsEnabled:
          type: boolean
      additionalProperties: false
      x-schema-id: CurrencyAcceptance
    CurrencyAcceptanceFilterParameters:
      title: CurrencyAcceptanceFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Ids:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        EnterpriseIds:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: CurrencyAcceptanceFilterParameters
    CurrencyResult:
      title: CurrencyResult
      type: object
      properties:
        Currencies:
          type: array
          items:
            $ref: '#/components/schemas/Currency'
          nullable: true
      additionalProperties: false
      x-schema-id: CurrencyResult
    CurrencyValue:
      title: CurrencyValue
      required:
        - Currency
        - Value
      type: object
      properties:
        Currency:
          minLength: 1
          type: string
          format: currency
        Value:
          type: number
          format: double
      additionalProperties: false
      x-schema-id: CurrencyValue
    CurrencyValueOld:
      title: CurrencyValueOld
      required:
        - Currency
      type: object
      properties:
        Currency:
          minLength: 1
          type: string
          format: currency
        Value:
          type: number
          format: double
          nullable: true
        Net:
          type: number
          format: double
          nullable: true
        Tax:
          type: number
          format: double
          nullable: true
        TaxRate:
          type: number
          format: double
          nullable: true
      additionalProperties: false
      x-schema-id: CurrencyValueOld
    CurrencyValueOldUpdateValue:
      title: UpdateValue`1
      type: object
      properties:
        Value:
          $ref: '#/components/schemas/CurrencyValueOld'
      additionalProperties: false
      x-schema-id: UpdateValue`1
    Customer:
      title: Customer
      required:
        - ActivityState
        - ChainId
        - Classifications
        - CreatedUtc
        - Id
        - LastName
        - Options
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          format: uuid
        ChainId:
          type: string
          format: uuid
        Number:
          type: string
          nullable: true
        Title:
          type: string
          nullable: true
        Sex:
          type: string
          nullable: true
        Gender:
          type: string
          nullable: true
          deprecated: true
        FirstName:
          type: string
          nullable: true
        LastName:
          minLength: 1
          type: string
        SecondLastName:
          type: string
          nullable: true
        NationalityCode:
          type: string
          nullable: true
        LanguageCode:
          type: string
          nullable: true
        BirthDate:
          type: string
          nullable: true
        BirthPlace:
          type: string
          nullable: true
        CitizenNumber:
          type: string
          nullable: true
        MotherName:
          type: string
          nullable: true
        FatherName:
          type: string
          nullable: true
        Occupation:
          type: string
          nullable: true
        Email:
          type: string
          nullable: true
        HasOtaEmail:
          type: boolean
        Phone:
          type: string
          nullable: true
        TaxIdentificationNumber:
          type: string
          nullable: true
        LoyaltyCode:
          type: string
          nullable: true
        AccountingCode:
          type: string
          nullable: true
        BillingCode:
          type: string
          nullable: true
        Notes:
          type: string
          nullable: true
        CarRegistrationNumber:
          type: string
          nullable: true
        CreatedUtc:
          minLength: 1
          type: string
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          format: date-time
        Passport:
          $ref: '#/components/schemas/Document'
        IdentityCard:
          $ref: '#/components/schemas/Document'
        Visa:
          $ref: '#/components/schemas/Document'
        DriversLicense:
          $ref: '#/components/schemas/Document'
        Address:
          $ref: '#/components/schemas/OldAddress'
        AddressId:
          type: string
          format: uuid
          nullable: true
        Classifications:
          type: array
          items:
            type: string
        Options:
          type: array
          items:
            type: string
        CategoryId:
          type: string
          format: uuid
          nullable: true
          deprecated: true
        BirthDateUtc:
          type: string
          nullable: true
          deprecated: true
        ItalianDestinationCode:
          type: string
          nullable: true
        ItalianFiscalCode:
          type: string
          nullable: true
        CompanyId:
          type: string
          format: uuid
          nullable: true
        MergeTargetId:
          type: string
          format: uuid
          nullable: true
        ActivityState:
          minLength: 1
          type: string
      additionalProperties: false
      x-schema-id: Customer
    CustomerAddParameters:
      title: CustomerAddParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - CustomerId
        - OverwriteExisting
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        CustomerId:
          type: string
          format: uuid
        Title:
          type: string
          nullable: true
        FirstName:
          type: string
          nullable: true
        LastName:
          type: string
          nullable: true
        SecondLastName:
          type: string
          nullable: true
        NationalityCode:
          type: string
          nullable: true
        Sex:
          anyOf:
            - $ref: '#/components/schemas/Sex'
          nullable: true
        Gender:
          type: string
          nullable: true
          deprecated: true
        BirthDate:
          type: string
          nullable: true
        BirthPlace:
          type: string
          nullable: true
        Occupation:
          type: string
          nullable: true
        Email:
          type: string
          format: email
          nullable: true
        Phone:
          type: string
          format: tel
          nullable: true
        LoyaltyCode:
          type: string
          nullable: true
        Notes:
          type: string
          nullable: true
        CarRegistrationNumber:
          type: string
          nullable: true
        TaxIdentificationNumber:
          type: string
          nullable: true
        Address:
          $ref: '#/components/schemas/AddressParameters'
        IdentityCard:
          $ref: '#/components/schemas/DocumentParameters'
        Passport:
          $ref: '#/components/schemas/DocumentParameters'
        Visa:
          $ref: '#/components/schemas/DocumentParameters'
        DriversLicense:
          $ref: '#/components/schemas/DocumentParameters'
        Classifications:
          type: array
          items:
            type: string
          nullable: true
        Options:
          type: array
          items:
            type: string
          nullable: true
        BirthDateUtc:
          type: string
          nullable: true
          deprecated: true
        ChainId:
          type: string
          format: uuid
          nullable: true
        OverwriteExisting:
          type: boolean
        ItalianDestinationCode:
          type: string
          nullable: true
        ItalianFiscalCode:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: CustomerAddParameters
    CustomerEmailParameters:
      title: CustomerEmailParameters
      required:
        - AccessToken
        - Client
        - ClientToken
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Emails:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
      x-schema-id: CustomerEmailParameters
    CustomerExtent:
      title: CustomerExtent
      type: object
      properties:
        Customers:
          type: boolean
        Documents:
          type: boolean
        Addresses:
          type: boolean
      additionalProperties: false
      x-schema-id: CustomerExtent
    CustomerFileParameters:
      title: CustomerFileParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - CustomerId
        - Data
        - Name
        - Type
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        ChainId:
          type: string
          format: uuid
          nullable: true
        CustomerId:
          type: string
          format: uuid
        Name:
          minLength: 1
          type: string
        Type:
          minLength: 1
          type: string
        Data:
          minLength: 1
          type: string
      additionalProperties: false
      x-schema-id: CustomerFileParameters
    CustomerFilterParameters:
      title: CustomerFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Extent
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        CreatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        ChainIds:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        Extent:
          $ref: '#/components/schemas/CustomerExtent'
        TimeFilter:
          type: string
          nullable: true
          deprecated: true
        StartUtc:
          type: string
          nullable: true
          deprecated: true
        EndUtc:
          type: string
          nullable: true
          deprecated: true
        DeletedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        ActivityStates:
          type: array
          items:
            $ref: '#/components/schemas/ActivityStates'
          nullable: true
        CustomerIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        Emails:
          maxItems: 1000
          type: array
          items:
            type: string
          nullable: true
        FirstNames:
          maxItems: 1000
          type: array
          items:
            type: string
          nullable: true
        LastNames:
          maxItems: 1000
          type: array
          items:
            type: string
          nullable: true
        LoyaltyCodes:
          maxItems: 1000
          type: array
          items:
            type: string
          nullable: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
      additionalProperties: false
      x-schema-id: CustomerFilterParameters
    CustomerItemParameters:
      title: CustomerItemParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - CustomerIds
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        CustomerIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
        Currency:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
      x-schema-id: CustomerItemParameters
    CustomerItemResult:
      title: CustomerItemResult
      type: object
      properties:
        Customers:
          type: array
          items:
            $ref: '#/components/schemas/CustomerItems'
          nullable: true
      additionalProperties: false
      x-schema-id: CustomerItemResult
    CustomerItems:
      title: CustomerItems
      type: object
      properties:
        CustomerId:
          type: string
          format: uuid
        Items:
          type: array
          items:
            $ref: '#/components/schemas/AccountingItem'
          nullable: true
        OrderItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemOld'
          nullable: true
        PaymentItems:
          type: array
          items:
            $ref: '#/components/schemas/PaymentItemOld'
          nullable: true
      additionalProperties: false
      x-schema-id: CustomerItems
    CustomerMergeParameters:
      title: CustomerMergeParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - SourceCustomerId
        - TargetCustomerId
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        SourceCustomerId:
          type: string
          format: uuid
        TargetCustomerId:
          type: string
          format: uuid
      additionalProperties: false
      x-schema-id: CustomerMergeParameters
    CustomerNameParameters:
      title: CustomerNameParameters
      required:
        - AccessToken
        - Client
        - ClientToken
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        FirstName:
          type: string
          nullable: true
        LastName:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: CustomerNameParameters
    CustomerResult:
      title: CustomerResult
      type: object
      properties:
        Customers:
          type: array
          items:
            $ref: '#/components/schemas/Customer'
          nullable: true
        Documents:
          type: array
          items:
            $ref: '#/components/schemas/Document'
          nullable: true
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: CustomerResult
    CustomerSearchParameters:
      title: CustomerSearchParameters
      required:
        - AccessToken
        - Client
        - ClientToken
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Operator:
          anyOf:
            - $ref: '#/components/schemas/SearchOperator'
          nullable: true
        Name:
          type: string
          nullable: true
        ResourceId:
          type: string
          format: uuid
          nullable: true
        Extent:
          $ref: '#/components/schemas/CustomerExtent'
        RoomNumber:
          type: string
          nullable: true
          deprecated: true
      additionalProperties: false
      x-schema-id: CustomerSearchParameters
    CustomerSearchResult:
      title: CustomerSearchResult
      type: object
      properties:
        Customers:
          type: array
          items:
            $ref: '#/components/schemas/ChargeableCustomer'
          nullable: true
        Documents:
          type: array
          items:
            $ref: '#/components/schemas/Document'
          nullable: true
      additionalProperties: false
      x-schema-id: CustomerSearchResult
    CustomerUpdateParameters:
      title: CustomerUpdateParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - CustomerId
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        CustomerId:
          type: string
          format: uuid
        Title:
          type: string
          nullable: true
        FirstName:
          type: string
          nullable: true
        LastName:
          type: string
          nullable: true
        SecondLastName:
          type: string
          nullable: true
        NationalityCode:
          type: string
          nullable: true
        Sex:
          anyOf:
            - $ref: '#/components/schemas/Sex'
          nullable: true
        Gender:
          type: string
          nullable: true
          deprecated: true
        BirthDate:
          type: string
          nullable: true
        BirthPlace:
          type: string
          nullable: true
        Occupation:
          type: string
          nullable: true
        Email:
          type: string
          format: email
          nullable: true
        Phone:
          type: string
          format: tel
          nullable: true
        LoyaltyCode:
          type: string
          nullable: true
        Notes:
          type: string
          nullable: true
        CarRegistrationNumber:
          type: string
          nullable: true
        TaxIdentificationNumber:
          type: string
          nullable: true
        Address:
          $ref: '#/components/schemas/AddressParameters'
        IdentityCard:
          $ref: '#/components/schemas/DocumentParameters'
        Passport:
          $ref: '#/components/schemas/DocumentParameters'
        Visa:
          $ref: '#/components/schemas/DocumentParameters'
        DriversLicense:
          $ref: '#/components/schemas/DocumentParameters'
        Classifications:
          type: array
          items:
            type: string
          nullable: true
        Options:
          type: array
          items:
            type: string
          nullable: true
        BirthDateUtc:
          type: string
          nullable: true
          deprecated: true
        ChainId:
          type: string
          format: uuid
          nullable: true
        ItalianDestinationCode:
          $ref: '#/components/schemas/StringUpdateValue'
        ItalianFiscalCode:
          $ref: '#/components/schemas/StringUpdateValue'
      additionalProperties: false
      x-schema-id: CustomerUpdateParameters
    DateRestriction:
      title: DateRestriction
      type: object
      properties:
        Id:
          type: string
          format: uuid
        RateId:
          type: string
          format: uuid
        IsInherited:
          type: boolean
        StartUtc:
          type: string
          nullable: true
        EndUtc:
          type: string
          nullable: true
        Days:
          type: array
          items:
            type: string
          nullable: true
        ExternalIdentifier:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: DateRestriction
    DateTimeIntervalUtc:
      title: DateTimeIntervalUtc
      type: object
      properties:
        StartUtc:
          type: string
          nullable: true
        EndUtc:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: DateTimeIntervalUtc
    DaysParameters:
      title: DaysParameters
      required:
        - Friday
        - Monday
        - Saturday
        - Sunday
        - Thursday
        - Tuesday
        - Wednesday
      type: object
      properties:
        Monday:
          type: boolean
        Tuesday:
          type: boolean
        Wednesday:
          type: boolean
        Thursday:
          type: boolean
        Friday:
          type: boolean
        Saturday:
          type: boolean
        Sunday:
          type: boolean
      additionalProperties: false
      x-schema-id: DaysParameters
    DecimalNullableUpdateValue:
      title: UpdateValue`1
      type: object
      properties:
        Value:
          type: number
          format: double
          nullable: true
      additionalProperties: false
      x-schema-id: UpdateValue`1
    DeleteRestrictionParameters:
      title: DeleteRestrictionParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - RestrictionIds
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        RestrictionIds:
          type: array
          items:
            type: string
            format: uuid
      additionalProperties: false
      x-schema-id: DeleteRestrictionParameters
    Department:
      title: Department
      required:
        - CreatedUtc
        - EnterpriseId
        - Id
        - IsActive
        - Name
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          format: uuid
        EnterpriseId:
          type: string
          format: uuid
        IsActive:
          type: boolean
        Name:
          minLength: 1
          type: string
        CreatedUtc:
          minLength: 1
          type: string
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          format: date-time
      additionalProperties: false
      x-schema-id: Department
    DepartmentFilterParameters:
      title: DepartmentFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        DepartmentIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
      additionalProperties: false
      x-schema-id: DepartmentFilterParameters
    DepartmentResult:
      title: DepartmentResult
      required:
        - Departments
      type: object
      properties:
        Departments:
          type: array
          items:
            $ref: '#/components/schemas/Department'
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: DepartmentResult
    DependentRatePricingParameters:
      title: DependentRatePricingParameters
      type: object
      properties:
        BaseRateId:
          type: string
          format: uuid
        RelativeAdjustment:
          type: number
          format: double
        AbsoluteAdjustment:
          type: number
          format: double
      additionalProperties: false
      x-schema-id: DependentRatePricingParameters
    DependentTaxRateStrategy:
      title: DependentTaxRateStrategy
      type: object
      properties:
        Value:
          type: number
          format: double
        BaseTaxationCodes:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
      x-schema-id: DependentTaxRateStrategy
    Device:
      title: Device
      type: object
      properties:
        Id:
          type: string
          format: uuid
        Type:
          type: string
          nullable: true
        Name:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: Device
    DeviceCommand:
      title: DeviceCommand
      type: object
      properties:
        Id:
          type: string
          format: uuid
        State:
          type: string
          nullable: true
        CreatedUtc:
          type: string
          nullable: true
        Creator:
          $ref: '#/components/schemas/User'
        Device:
          $ref: '#/components/schemas/Device'
        Data:
          $ref: '#/components/schemas/DeviceCommandData'
      additionalProperties: false
      x-schema-id: DeviceCommand
    DeviceCommandAddResult:
      title: DeviceCommandAddResult
      type: object
      properties:
        CommandId:
          type: string
          format: uuid
      additionalProperties: false
      x-schema-id: DeviceCommandAddResult
    DeviceCommandData:
      type: object
      oneOf:
        - title: PaymentTerminalCommandData
          type: object
          oneOf:
            - $ref: '#/components/schemas/PaymentTerminalCommandData'
            - title: PrinterCommandData
              type: object
              oneOf:
                - $ref: '#/components/schemas/PaymentTerminalCommandData'
                - $ref: '#/components/schemas/PrinterCommandData'
                - title: KeyCutterCommandData
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/PaymentTerminalCommandData'
                    - $ref: '#/components/schemas/PrinterCommandData'
                    - $ref: '#/components/schemas/KeyCutterCommandData'
                    - title: FiscalMachineCommandData
                      type: object
                      oneOf:
                        - $ref: '#/components/schemas/PaymentTerminalCommandData'
                        - $ref: '#/components/schemas/PrinterCommandData'
                        - $ref: '#/components/schemas/KeyCutterCommandData'
                        - $ref: '#/components/schemas/FiscalMachineCommandData'
                        - title: PassportScannerCommandData
                          type: object
                          oneOf:
                            - $ref: '#/components/schemas/PaymentTerminalCommandData'
                            - $ref: '#/components/schemas/PrinterCommandData'
                            - $ref: '#/components/schemas/KeyCutterCommandData'
                            - $ref: '#/components/schemas/FiscalMachineCommandData'
                            - $ref: '#/components/schemas/PassportScannerCommandData'
                          properties:
                            PassportScannerId:
                              type: string
                              nullable: true
                            ReservationId:
                              type: string
                              format: uuid
                              nullable: true
                            CustomerId:
                              type: string
                              format: uuid
                              nullable: true
                          additionalProperties: false
                          x-schema-id: PassportScannerCommandData
                      properties:
                        FiscalMachineId:
                          type: string
                          nullable: true
                        ApiUrl:
                          type: string
                          nullable: true
                        FiscalMachineData:
                          type: string
                          nullable: true
                        Bill:
                          $ref: '#/components/schemas/Bill'
                        TaxIdentifier:
                          type: string
                          nullable: true
                        BillFiscalMachineData:
                          title: BillFiscalMachineData
                          properties:
                            discriminator:
                              $ref: '#/components/schemas/BillFiscalMachineDataDiscriminator'
                            value:
                              oneOf:
                                - $ref: '#/components/schemas/ItalianFiscalMachineData'
                        PayloadData:
                          title: PayloadData
                          properties:
                            discriminator:
                              $ref: '#/components/schemas/FiscalMachinePayloadDataDiscriminator'
                            value:
                              oneOf:
                                - type: string
                      additionalProperties: false
                      x-schema-id: FiscalMachineCommandData
                    - title: PassportScannerCommandData
                      type: object
                      oneOf:
                        - $ref: '#/components/schemas/PaymentTerminalCommandData'
                        - $ref: '#/components/schemas/PrinterCommandData'
                        - $ref: '#/components/schemas/KeyCutterCommandData'
                        - $ref: '#/components/schemas/FiscalMachineCommandData'
                        - $ref: '#/components/schemas/PassportScannerCommandData'
                      properties:
                        PassportScannerId:
                          type: string
                          nullable: true
                        ReservationId:
                          type: string
                          format: uuid
                          nullable: true
                        CustomerId:
                          type: string
                          format: uuid
                          nullable: true
                      additionalProperties: false
                      x-schema-id: PassportScannerCommandData
                  properties:
                    KeyCutterId:
                      type: string
                      nullable: true
                    ApiUrl:
                      type: string
                      nullable: true
                    UserName:
                      type: string
                      nullable: true
                    Password:
                      type: string
                      nullable: true
                    KeyCutterData:
                      type: string
                      nullable: true
                    KeyCount:
                      type: integer
                      format: int32
                    LockIds:
                      type: array
                      items:
                        type: string
                      nullable: true
                    StartUtc:
                      type: string
                      nullable: true
                    EndUtc:
                      type: string
                      nullable: true
                    FirstName:
                      type: string
                      nullable: true
                    LastName:
                      type: string
                      nullable: true
                    Telephone:
                      type: string
                      nullable: true
                    Email:
                      type: string
                      nullable: true
                    ReservationId:
                      type: string
                      format: uuid
                      nullable: true
                    ReservationNumber:
                      type: string
                      nullable: true
                    KeyMode:
                      type: string
                      nullable: true
                    ExternalRequestIdentifier:
                      type: string
                      nullable: true
                  additionalProperties: false
                  x-schema-id: KeyCutterCommandData
                - title: FiscalMachineCommandData
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/PaymentTerminalCommandData'
                    - $ref: '#/components/schemas/PrinterCommandData'
                    - $ref: '#/components/schemas/KeyCutterCommandData'
                    - $ref: '#/components/schemas/FiscalMachineCommandData'
                    - title: PassportScannerCommandData
                      type: object
                      oneOf:
                        - $ref: '#/components/schemas/PaymentTerminalCommandData'
                        - $ref: '#/components/schemas/PrinterCommandData'
                        - $ref: '#/components/schemas/KeyCutterCommandData'
                        - $ref: '#/components/schemas/FiscalMachineCommandData'
                        - $ref: '#/components/schemas/PassportScannerCommandData'
                      properties:
                        PassportScannerId:
                          type: string
                          nullable: true
                        ReservationId:
                          type: string
                          format: uuid
                          nullable: true
                        CustomerId:
                          type: string
                          format: uuid
                          nullable: true
                      additionalProperties: false
                      x-schema-id: PassportScannerCommandData
                  properties:
                    FiscalMachineId:
                      type: string
                      nullable: true
                    ApiUrl:
                      type: string
                      nullable: true
                    FiscalMachineData:
                      type: string
                      nullable: true
                    Bill:
                      $ref: '#/components/schemas/Bill'
                    TaxIdentifier:
                      type: string
                      nullable: true
                    BillFiscalMachineData:
                      title: BillFiscalMachineData
                      properties:
                        discriminator:
                          $ref: '#/components/schemas/BillFiscalMachineDataDiscriminator'
                        value:
                          oneOf:
                            - $ref: '#/components/schemas/ItalianFiscalMachineData'
                    PayloadData:
                      title: PayloadData
                      properties:
                        discriminator:
                          $ref: '#/components/schemas/FiscalMachinePayloadDataDiscriminator'
                        value:
                          oneOf:
                            - type: string
                  additionalProperties: false
                  x-schema-id: FiscalMachineCommandData
                - title: PassportScannerCommandData
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/PaymentTerminalCommandData'
                    - $ref: '#/components/schemas/PrinterCommandData'
                    - $ref: '#/components/schemas/KeyCutterCommandData'
                    - $ref: '#/components/schemas/FiscalMachineCommandData'
                    - $ref: '#/components/schemas/PassportScannerCommandData'
                  properties:
                    PassportScannerId:
                      type: string
                      nullable: true
                    ReservationId:
                      type: string
                      format: uuid
                      nullable: true
                    CustomerId:
                      type: string
                      format: uuid
                      nullable: true
                  additionalProperties: false
                  x-schema-id: PassportScannerCommandData
              properties:
                CopyCount:
                  type: integer
                  format: int32
                FileType:
                  type: string
                  nullable: true
                FileData:
                  type: string
                  nullable: true
                PrinterName:
                  type: string
                  nullable: true
                PrinterDriverName:
                  type: string
                  nullable: true
                PrinterPortName:
                  type: string
                  nullable: true
              additionalProperties: false
              x-schema-id: PrinterCommandData
            - title: KeyCutterCommandData
              type: object
              oneOf:
                - $ref: '#/components/schemas/PaymentTerminalCommandData'
                - $ref: '#/components/schemas/PrinterCommandData'
                - $ref: '#/components/schemas/KeyCutterCommandData'
                - title: FiscalMachineCommandData
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/PaymentTerminalCommandData'
                    - $ref: '#/components/schemas/PrinterCommandData'
                    - $ref: '#/components/schemas/KeyCutterCommandData'
                    - $ref: '#/components/schemas/FiscalMachineCommandData'
                    - title: PassportScannerCommandData
                      type: object
                      oneOf:
                        - $ref: '#/components/schemas/PaymentTerminalCommandData'
                        - $ref: '#/components/schemas/PrinterCommandData'
                        - $ref: '#/components/schemas/KeyCutterCommandData'
                        - $ref: '#/components/schemas/FiscalMachineCommandData'
                        - $ref: '#/components/schemas/PassportScannerCommandData'
                      properties:
                        PassportScannerId:
                          type: string
                          nullable: true
                        ReservationId:
                          type: string
                          format: uuid
                          nullable: true
                        CustomerId:
                          type: string
                          format: uuid
                          nullable: true
                      additionalProperties: false
                      x-schema-id: PassportScannerCommandData
                  properties:
                    FiscalMachineId:
                      type: string
                      nullable: true
                    ApiUrl:
                      type: string
                      nullable: true
                    FiscalMachineData:
                      type: string
                      nullable: true
                    Bill:
                      $ref: '#/components/schemas/Bill'
                    TaxIdentifier:
                      type: string
                      nullable: true
                    BillFiscalMachineData:
                      title: BillFiscalMachineData
                      properties:
                        discriminator:
                          $ref: '#/components/schemas/BillFiscalMachineDataDiscriminator'
                        value:
                          oneOf:
                            - $ref: '#/components/schemas/ItalianFiscalMachineData'
                    PayloadData:
                      title: PayloadData
                      properties:
                        discriminator:
                          $ref: '#/components/schemas/FiscalMachinePayloadDataDiscriminator'
                        value:
                          oneOf:
                            - type: string
                  additionalProperties: false
                  x-schema-id: FiscalMachineCommandData
                - title: PassportScannerCommandData
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/PaymentTerminalCommandData'
                    - $ref: '#/components/schemas/PrinterCommandData'
                    - $ref: '#/components/schemas/KeyCutterCommandData'
                    - $ref: '#/components/schemas/FiscalMachineCommandData'
                    - $ref: '#/components/schemas/PassportScannerCommandData'
                  properties:
                    PassportScannerId:
                      type: string
                      nullable: true
                    ReservationId:
                      type: string
                      format: uuid
                      nullable: true
                    CustomerId:
                      type: string
                      format: uuid
                      nullable: true
                  additionalProperties: false
                  x-schema-id: PassportScannerCommandData
              properties:
                KeyCutterId:
                  type: string
                  nullable: true
                ApiUrl:
                  type: string
                  nullable: true
                UserName:
                  type: string
                  nullable: true
                Password:
                  type: string
                  nullable: true
                KeyCutterData:
                  type: string
                  nullable: true
                KeyCount:
                  type: integer
                  format: int32
                LockIds:
                  type: array
                  items:
                    type: string
                  nullable: true
                StartUtc:
                  type: string
                  nullable: true
                EndUtc:
                  type: string
                  nullable: true
                FirstName:
                  type: string
                  nullable: true
                LastName:
                  type: string
                  nullable: true
                Telephone:
                  type: string
                  nullable: true
                Email:
                  type: string
                  nullable: true
                ReservationId:
                  type: string
                  format: uuid
                  nullable: true
                ReservationNumber:
                  type: string
                  nullable: true
                KeyMode:
                  type: string
                  nullable: true
                ExternalRequestIdentifier:
                  type: string
                  nullable: true
              additionalProperties: false
              x-schema-id: KeyCutterCommandData
            - title: FiscalMachineCommandData
              type: object
              oneOf:
                - $ref: '#/components/schemas/PaymentTerminalCommandData'
                - $ref: '#/components/schemas/PrinterCommandData'
                - $ref: '#/components/schemas/KeyCutterCommandData'
                - $ref: '#/components/schemas/FiscalMachineCommandData'
                - title: PassportScannerCommandData
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/PaymentTerminalCommandData'
                    - $ref: '#/components/schemas/PrinterCommandData'
                    - $ref: '#/components/schemas/KeyCutterCommandData'
                    - $ref: '#/components/schemas/FiscalMachineCommandData'
                    - $ref: '#/components/schemas/PassportScannerCommandData'
                  properties:
                    PassportScannerId:
                      type: string
                      nullable: true
                    ReservationId:
                      type: string
                      format: uuid
                      nullable: true
                    CustomerId:
                      type: string
                      format: uuid
                      nullable: true
                  additionalProperties: false
                  x-schema-id: PassportScannerCommandData
              properties:
                FiscalMachineId:
                  type: string
                  nullable: true
                ApiUrl:
                  type: string
                  nullable: true
                FiscalMachineData:
                  type: string
                  nullable: true
                Bill:
                  $ref: '#/components/schemas/Bill'
                TaxIdentifier:
                  type: string
                  nullable: true
                BillFiscalMachineData:
                  title: BillFiscalMachineData
                  properties:
                    discriminator:
                      $ref: '#/components/schemas/BillFiscalMachineDataDiscriminator'
                    value:
                      oneOf:
                        - $ref: '#/components/schemas/ItalianFiscalMachineData'
                PayloadData:
                  title: PayloadData
                  properties:
                    discriminator:
                      $ref: '#/components/schemas/FiscalMachinePayloadDataDiscriminator'
                    value:
                      oneOf:
                        - type: string
              additionalProperties: false
              x-schema-id: FiscalMachineCommandData
            - title: PassportScannerCommandData
              type: object
              oneOf:
                - $ref: '#/components/schemas/PaymentTerminalCommandData'
                - $ref: '#/components/schemas/PrinterCommandData'
                - $ref: '#/components/schemas/KeyCutterCommandData'
                - $ref: '#/components/schemas/FiscalMachineCommandData'
                - $ref: '#/components/schemas/PassportScannerCommandData'
              properties:
                PassportScannerId:
                  type: string
                  nullable: true
                ReservationId:
                  type: string
                  format: uuid
                  nullable: true
                CustomerId:
                  type: string
                  format: uuid
                  nullable: true
              additionalProperties: false
              x-schema-id: PassportScannerCommandData
          properties:
            PaymentTerminalId:
              type: string
              nullable: true
            CustomerId:
              type: string
              format: uuid
            FullName:
              type: string
              nullable: true
            BillId:
              type: string
              format: uuid
              nullable: true
            PaymentId:
              type: string
              format: uuid
              nullable: true
            PreauthorizationId:
              type: string
              format: uuid
              nullable: true
            Amount:
              $ref: '#/components/schemas/ExtendedAmount'
            Fee:
              $ref: '#/components/schemas/ExtendedAmount'
            PaymentTerminalData:
              type: string
              nullable: true
            PayworksData:
              $ref: '#/components/schemas/PayworksData'
          additionalProperties: false
          x-schema-id: PaymentTerminalCommandData
        - title: PrinterCommandData
          type: object
          oneOf:
            - $ref: '#/components/schemas/PaymentTerminalCommandData'
            - $ref: '#/components/schemas/PrinterCommandData'
            - title: KeyCutterCommandData
              type: object
              oneOf:
                - $ref: '#/components/schemas/PaymentTerminalCommandData'
                - $ref: '#/components/schemas/PrinterCommandData'
                - $ref: '#/components/schemas/KeyCutterCommandData'
                - title: FiscalMachineCommandData
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/PaymentTerminalCommandData'
                    - $ref: '#/components/schemas/PrinterCommandData'
                    - $ref: '#/components/schemas/KeyCutterCommandData'
                    - $ref: '#/components/schemas/FiscalMachineCommandData'
                    - title: PassportScannerCommandData
                      type: object
                      oneOf:
                        - $ref: '#/components/schemas/PaymentTerminalCommandData'
                        - $ref: '#/components/schemas/PrinterCommandData'
                        - $ref: '#/components/schemas/KeyCutterCommandData'
                        - $ref: '#/components/schemas/FiscalMachineCommandData'
                        - $ref: '#/components/schemas/PassportScannerCommandData'
                      properties:
                        PassportScannerId:
                          type: string
                          nullable: true
                        ReservationId:
                          type: string
                          format: uuid
                          nullable: true
                        CustomerId:
                          type: string
                          format: uuid
                          nullable: true
                      additionalProperties: false
                      x-schema-id: PassportScannerCommandData
                  properties:
                    FiscalMachineId:
                      type: string
                      nullable: true
                    ApiUrl:
                      type: string
                      nullable: true
                    FiscalMachineData:
                      type: string
                      nullable: true
                    Bill:
                      $ref: '#/components/schemas/Bill'
                    TaxIdentifier:
                      type: string
                      nullable: true
                    BillFiscalMachineData:
                      title: BillFiscalMachineData
                      properties:
                        discriminator:
                          $ref: '#/components/schemas/BillFiscalMachineDataDiscriminator'
                        value:
                          oneOf:
                            - $ref: '#/components/schemas/ItalianFiscalMachineData'
                    PayloadData:
                      title: PayloadData
                      properties:
                        discriminator:
                          $ref: '#/components/schemas/FiscalMachinePayloadDataDiscriminator'
                        value:
                          oneOf:
                            - type: string
                  additionalProperties: false
                  x-schema-id: FiscalMachineCommandData
                - title: PassportScannerCommandData
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/PaymentTerminalCommandData'
                    - $ref: '#/components/schemas/PrinterCommandData'
                    - $ref: '#/components/schemas/KeyCutterCommandData'
                    - $ref: '#/components/schemas/FiscalMachineCommandData'
                    - $ref: '#/components/schemas/PassportScannerCommandData'
                  properties:
                    PassportScannerId:
                      type: string
                      nullable: true
                    ReservationId:
                      type: string
                      format: uuid
                      nullable: true
                    CustomerId:
                      type: string
                      format: uuid
                      nullable: true
                  additionalProperties: false
                  x-schema-id: PassportScannerCommandData
              properties:
                KeyCutterId:
                  type: string
                  nullable: true
                ApiUrl:
                  type: string
                  nullable: true
                UserName:
                  type: string
                  nullable: true
                Password:
                  type: string
                  nullable: true
                KeyCutterData:
                  type: string
                  nullable: true
                KeyCount:
                  type: integer
                  format: int32
                LockIds:
                  type: array
                  items:
                    type: string
                  nullable: true
                StartUtc:
                  type: string
                  nullable: true
                EndUtc:
                  type: string
                  nullable: true
                FirstName:
                  type: string
                  nullable: true
                LastName:
                  type: string
                  nullable: true
                Telephone:
                  type: string
                  nullable: true
                Email:
                  type: string
                  nullable: true
                ReservationId:
                  type: string
                  format: uuid
                  nullable: true
                ReservationNumber:
                  type: string
                  nullable: true
                KeyMode:
                  type: string
                  nullable: true
                ExternalRequestIdentifier:
                  type: string
                  nullable: true
              additionalProperties: false
              x-schema-id: KeyCutterCommandData
            - title: FiscalMachineCommandData
              type: object
              oneOf:
                - $ref: '#/components/schemas/PaymentTerminalCommandData'
                - $ref: '#/components/schemas/PrinterCommandData'
                - $ref: '#/components/schemas/KeyCutterCommandData'
                - $ref: '#/components/schemas/FiscalMachineCommandData'
                - title: PassportScannerCommandData
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/PaymentTerminalCommandData'
                    - $ref: '#/components/schemas/PrinterCommandData'
                    - $ref: '#/components/schemas/KeyCutterCommandData'
                    - $ref: '#/components/schemas/FiscalMachineCommandData'
                    - $ref: '#/components/schemas/PassportScannerCommandData'
                  properties:
                    PassportScannerId:
                      type: string
                      nullable: true
                    ReservationId:
                      type: string
                      format: uuid
                      nullable: true
                    CustomerId:
                      type: string
                      format: uuid
                      nullable: true
                  additionalProperties: false
                  x-schema-id: PassportScannerCommandData
              properties:
                FiscalMachineId:
                  type: string
                  nullable: true
                ApiUrl:
                  type: string
                  nullable: true
                FiscalMachineData:
                  type: string
                  nullable: true
                Bill:
                  $ref: '#/components/schemas/Bill'
                TaxIdentifier:
                  type: string
                  nullable: true
                BillFiscalMachineData:
                  title: BillFiscalMachineData
                  properties:
                    discriminator:
                      $ref: '#/components/schemas/BillFiscalMachineDataDiscriminator'
                    value:
                      oneOf:
                        - $ref: '#/components/schemas/ItalianFiscalMachineData'
                PayloadData:
                  title: PayloadData
                  properties:
                    discriminator:
                      $ref: '#/components/schemas/FiscalMachinePayloadDataDiscriminator'
                    value:
                      oneOf:
                        - type: string
              additionalProperties: false
              x-schema-id: FiscalMachineCommandData
            - title: PassportScannerCommandData
              type: object
              oneOf:
                - $ref: '#/components/schemas/PaymentTerminalCommandData'
                - $ref: '#/components/schemas/PrinterCommandData'
                - $ref: '#/components/schemas/KeyCutterCommandData'
                - $ref: '#/components/schemas/FiscalMachineCommandData'
                - $ref: '#/components/schemas/PassportScannerCommandData'
              properties:
                PassportScannerId:
                  type: string
                  nullable: true
                ReservationId:
                  type: string
                  format: uuid
                  nullable: true
                CustomerId:
                  type: string
                  format: uuid
                  nullable: true
              additionalProperties: false
              x-schema-id: PassportScannerCommandData
          properties:
            CopyCount:
              type: integer
              format: int32
            FileType:
              type: string
              nullable: true
            FileData:
              type: string
              nullable: true
            PrinterName:
              type: string
              nullable: true
            PrinterDriverName:
              type: string
              nullable: true
            PrinterPortName:
              type: string
              nullable: true
          additionalProperties: false
          x-schema-id: PrinterCommandData
        - title: KeyCutterCommandData
          type: object
          oneOf:
            - $ref: '#/components/schemas/PaymentTerminalCommandData'
            - $ref: '#/components/schemas/PrinterCommandData'
            - $ref: '#/components/schemas/KeyCutterCommandData'
            - title: FiscalMachineCommandData
              type: object
              oneOf:
                - $ref: '#/components/schemas/PaymentTerminalCommandData'
                - $ref: '#/components/schemas/PrinterCommandData'
                - $ref: '#/components/schemas/KeyCutterCommandData'
                - $ref: '#/components/schemas/FiscalMachineCommandData'
                - title: PassportScannerCommandData
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/PaymentTerminalCommandData'
                    - $ref: '#/components/schemas/PrinterCommandData'
                    - $ref: '#/components/schemas/KeyCutterCommandData'
                    - $ref: '#/components/schemas/FiscalMachineCommandData'
                    - $ref: '#/components/schemas/PassportScannerCommandData'
                  properties:
                    PassportScannerId:
                      type: string
                      nullable: true
                    ReservationId:
                      type: string
                      format: uuid
                      nullable: true
                    CustomerId:
                      type: string
                      format: uuid
                      nullable: true
                  additionalProperties: false
                  x-schema-id: PassportScannerCommandData
              properties:
                FiscalMachineId:
                  type: string
                  nullable: true
                ApiUrl:
                  type: string
                  nullable: true
                FiscalMachineData:
                  type: string
                  nullable: true
                Bill:
                  $ref: '#/components/schemas/Bill'
                TaxIdentifier:
                  type: string
                  nullable: true
                BillFiscalMachineData:
                  title: BillFiscalMachineData
                  properties:
                    discriminator:
                      $ref: '#/components/schemas/BillFiscalMachineDataDiscriminator'
                    value:
                      oneOf:
                        - $ref: '#/components/schemas/ItalianFiscalMachineData'
                PayloadData:
                  title: PayloadData
                  properties:
                    discriminator:
                      $ref: '#/components/schemas/FiscalMachinePayloadDataDiscriminator'
                    value:
                      oneOf:
                        - type: string
              additionalProperties: false
              x-schema-id: FiscalMachineCommandData
            - title: PassportScannerCommandData
              type: object
              oneOf:
                - $ref: '#/components/schemas/PaymentTerminalCommandData'
                - $ref: '#/components/schemas/PrinterCommandData'
                - $ref: '#/components/schemas/KeyCutterCommandData'
                - $ref: '#/components/schemas/FiscalMachineCommandData'
                - $ref: '#/components/schemas/PassportScannerCommandData'
              properties:
                PassportScannerId:
                  type: string
                  nullable: true
                ReservationId:
                  type: string
                  format: uuid
                  nullable: true
                CustomerId:
                  type: string
                  format: uuid
                  nullable: true
              additionalProperties: false
              x-schema-id: PassportScannerCommandData
          properties:
            KeyCutterId:
              type: string
              nullable: true
            ApiUrl:
              type: string
              nullable: true
            UserName:
              type: string
              nullable: true
            Password:
              type: string
              nullable: true
            KeyCutterData:
              type: string
              nullable: true
            KeyCount:
              type: integer
              format: int32
            LockIds:
              type: array
              items:
                type: string
              nullable: true
            StartUtc:
              type: string
              nullable: true
            EndUtc:
              type: string
              nullable: true
            FirstName:
              type: string
              nullable: true
            LastName:
              type: string
              nullable: true
            Telephone:
              type: string
              nullable: true
            Email:
              type: string
              nullable: true
            ReservationId:
              type: string
              format: uuid
              nullable: true
            ReservationNumber:
              type: string
              nullable: true
            KeyMode:
              type: string
              nullable: true
            ExternalRequestIdentifier:
              type: string
              nullable: true
          additionalProperties: false
          x-schema-id: KeyCutterCommandData
        - title: FiscalMachineCommandData
          type: object
          oneOf:
            - $ref: '#/components/schemas/PaymentTerminalCommandData'
            - $ref: '#/components/schemas/PrinterCommandData'
            - $ref: '#/components/schemas/KeyCutterCommandData'
            - $ref: '#/components/schemas/FiscalMachineCommandData'
            - title: PassportScannerCommandData
              type: object
              oneOf:
                - $ref: '#/components/schemas/PaymentTerminalCommandData'
                - $ref: '#/components/schemas/PrinterCommandData'
                - $ref: '#/components/schemas/KeyCutterCommandData'
                - $ref: '#/components/schemas/FiscalMachineCommandData'
                - $ref: '#/components/schemas/PassportScannerCommandData'
              properties:
                PassportScannerId:
                  type: string
                  nullable: true
                ReservationId:
                  type: string
                  format: uuid
                  nullable: true
                CustomerId:
                  type: string
                  format: uuid
                  nullable: true
              additionalProperties: false
              x-schema-id: PassportScannerCommandData
          properties:
            FiscalMachineId:
              type: string
              nullable: true
            ApiUrl:
              type: string
              nullable: true
            FiscalMachineData:
              type: string
              nullable: true
            Bill:
              $ref: '#/components/schemas/Bill'
            TaxIdentifier:
              type: string
              nullable: true
            BillFiscalMachineData:
              title: BillFiscalMachineData
              properties:
                discriminator:
                  $ref: '#/components/schemas/BillFiscalMachineDataDiscriminator'
                value:
                  oneOf:
                    - $ref: '#/components/schemas/ItalianFiscalMachineData'
            PayloadData:
              title: PayloadData
              properties:
                discriminator:
                  $ref: '#/components/schemas/FiscalMachinePayloadDataDiscriminator'
                value:
                  oneOf:
                    - type: string
          additionalProperties: false
          x-schema-id: FiscalMachineCommandData
        - title: PassportScannerCommandData
          type: object
          oneOf:
            - $ref: '#/components/schemas/PaymentTerminalCommandData'
            - $ref: '#/components/schemas/PrinterCommandData'
            - $ref: '#/components/schemas/KeyCutterCommandData'
            - $ref: '#/components/schemas/FiscalMachineCommandData'
            - $ref: '#/components/schemas/PassportScannerCommandData'
          properties:
            PassportScannerId:
              type: string
              nullable: true
            ReservationId:
              type: string
              format: uuid
              nullable: true
            CustomerId:
              type: string
              format: uuid
              nullable: true
          additionalProperties: false
          x-schema-id: PassportScannerCommandData
      additionalProperties: false
    DeviceCommandFilterParameters:
      title: DeviceCommandFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - CommandIds
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        CommandIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
        Limitation:
          $ref: '#/components/schemas/Limitation'
      additionalProperties: false
      x-schema-id: DeviceCommandFilterParameters
    DeviceCommandResult:
      title: DeviceCommandResult
      type: object
      properties:
        Commands:
          type: array
          items:
            $ref: '#/components/schemas/DeviceCommand'
          nullable: true
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: DeviceCommandResult
    DeviceCommandResultDiscriminator:
      enum:
        - ItalianFiscalMachine
      type: string
    DeviceCommandState:
      enum:
        - Pending
        - Received
        - Processing
        - Processed
        - Cancelled
        - Error
      type: string
    DeviceCommandUpdateParameters:
      title: DeviceCommandUpdateParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - CommandId
        - State
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        CommandId:
          type: string
          format: uuid
        State:
          $ref: '#/components/schemas/DeviceCommandState'
        Progress:
          type: number
          format: double
          nullable: true
        Notes:
          type: string
          nullable: true
        ExternalRequestIdentifier:
          $ref: '#/components/schemas/StringUpdateValue'
      additionalProperties: false
      x-schema-id: DeviceCommandUpdateParameters
    DeviceResult:
      title: DeviceResult
      type: object
      properties:
        Devices:
          type: array
          items:
            $ref: '#/components/schemas/Device'
          nullable: true
      additionalProperties: false
      x-schema-id: DeviceResult
    Document:
      title: Document
      type: object
      properties:
        Id:
          type: string
          format: uuid
        CustomerId:
          type: string
          format: uuid
        Type:
          type: string
          nullable: true
        Number:
          type: string
          nullable: true
        Expiration:
          type: string
          nullable: true
        Issuance:
          type: string
          nullable: true
        IssuingCountryCode:
          type: string
          nullable: true
        IssuingCity:
          type: string
          nullable: true
        ExpirationUtc:
          type: string
          nullable: true
          deprecated: true
        IssuanceUtc:
          type: string
          nullable: true
          deprecated: true
      additionalProperties: false
      x-schema-id: Document
    DocumentParameters:
      title: DocumentParameters
      type: object
      properties:
        Number:
          type: string
          nullable: true
        Expiration:
          type: string
          nullable: true
        Issuance:
          type: string
          nullable: true
        IssuingCountryCode:
          type: string
          nullable: true
        IssuingCity:
          type: string
          nullable: true
        ExpirationUtc:
          type: string
          nullable: true
          deprecated: true
        IssuanceUtc:
          type: string
          nullable: true
          deprecated: true
      additionalProperties: false
      x-schema-id: DocumentParameters
    EarlinessRestriction:
      title: EarlinessRestriction
      type: object
      properties:
        Id:
          type: string
          format: uuid
        RateId:
          type: string
          format: uuid
        IsInherited:
          type: boolean
        StartUtc:
          type: string
          nullable: true
        EndUtc:
          type: string
          nullable: true
        Days:
          type: array
          items:
            type: string
          nullable: true
        ExternalIdentifier:
          type: string
          nullable: true
        MinAdvance:
          type: string
          nullable: true
        MaxAdvance:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: EarlinessRestriction
    Enterprise:
      title: Enterprise
      required:
        - AddressId
        - ChainId
        - CreatedUtc
        - Currencies
        - DefaultLanguageCode
        - EditableHistoryInterval
        - Id
        - LegalEnvironmentCode
        - Name
        - Pricing
        - TimeZoneIdentifier
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          format: uuid
        ExternalIdentifier:
          maxLength: 255
          type: string
          nullable: true
        ChainId:
          type: string
          format: uuid
        CreatedUtc:
          minLength: 1
          type: string
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          format: date-time
        Name:
          minLength: 1
          type: string
        TimeZoneIdentifier:
          minLength: 1
          type: string
        LegalEnvironmentCode:
          minLength: 1
          type: string
        AccommodationEnvironmentCode:
          type: string
          nullable: true
        AccountingEnvironmentCode:
          type: string
          nullable: true
        TaxEnvironmentCode:
          type: string
          nullable: true
        DefaultLanguageCode:
          minLength: 1
          type: string
        EditableHistoryInterval:
          minLength: 1
          type: string
        WebsiteUrl:
          type: string
          format: uri
          nullable: true
        Email:
          type: string
          format: email
          nullable: true
        Phone:
          type: string
          format: tel
          nullable: true
        LogoImageId:
          type: string
          format: uuid
          nullable: true
        CoverImageId:
          type: string
          format: uuid
          nullable: true
        Pricing:
          $ref: '#/components/schemas/PricingMode'
        TaxPrecision:
          type: integer
          format: int32
          nullable: true
        AddressId:
          type: string
          format: uuid
        Address:
          $ref: '#/components/schemas/OldAddress'
        Currencies:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyAcceptance'
        AccountingConfiguration:
          $ref: '#/components/schemas/AccountingConfiguration'
        IsPortfolio:
          type: boolean
      additionalProperties: false
      x-schema-id: Enterprise
    EnterpriseBase:
      title: EnterpriseBase
      required:
        - AddressId
        - ChainId
        - CreatedUtc
        - DefaultLanguageCode
        - EditableHistoryInterval
        - Id
        - LegalEnvironmentCode
        - Name
        - Pricing
        - TimeZoneIdentifier
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          format: uuid
        ExternalIdentifier:
          maxLength: 255
          type: string
          nullable: true
        ChainId:
          type: string
          format: uuid
        CreatedUtc:
          minLength: 1
          type: string
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          format: date-time
        Name:
          minLength: 1
          type: string
        TimeZoneIdentifier:
          minLength: 1
          type: string
        LegalEnvironmentCode:
          minLength: 1
          type: string
        AccommodationEnvironmentCode:
          type: string
          nullable: true
        AccountingEnvironmentCode:
          type: string
          nullable: true
        TaxEnvironmentCode:
          type: string
          nullable: true
        DefaultLanguageCode:
          minLength: 1
          type: string
        EditableHistoryInterval:
          minLength: 1
          type: string
        WebsiteUrl:
          type: string
          format: uri
          nullable: true
        Email:
          type: string
          format: email
          nullable: true
        Phone:
          type: string
          format: tel
          nullable: true
        LogoImageId:
          type: string
          format: uuid
          nullable: true
        CoverImageId:
          type: string
          format: uuid
          nullable: true
        Pricing:
          $ref: '#/components/schemas/PricingMode'
        TaxPrecision:
          type: integer
          format: int32
          nullable: true
        AddressId:
          type: string
          format: uuid
      additionalProperties: false
      x-schema-id: EnterpriseBase
    EnterpriseFilterParameters:
      title: EnterpriseFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        EnterpriseIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ExternalIdentifiers:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
          nullable: true
        LinkedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        Limitation:
          $ref: '#/components/schemas/Limitation'
      additionalProperties: false
      x-schema-id: EnterpriseFilterParameters
    EnterpriseProfileData:
      title: EnterpriseProfileData
      type: object
      properties:
        ProfileId:
          type: string
          format: uuid
      additionalProperties: false
      x-schema-id: EnterpriseProfileData
    EnterpriseResult:
      title: EnterpriseResult
      required:
        - Enterprises
      type: object
      properties:
        Enterprises:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseBase'
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: EnterpriseResult
    EnterpriseScopeCounterDiscriminator:
      enum:
        - Counter
        - AccountingCounter
        - AvailabilityBlockCounter
        - BillCounter
        - BillPreviewCounter
        - FiscalCounter
        - ProformaCounter
        - RegistrationCardCounter
        - ServiceOrderCounter
      type: string
    ExchangeRate:
      title: ExchangeRate
      required:
        - SourceCurrency
        - TargetCurrency
        - Value
      type: object
      properties:
        Id:
          type: string
          format: uuid
        EnterpriseId:
          type: string
          format: uuid
        SourceCurrency:
          minLength: 1
          type: string
          format: currency
        TargetCurrency:
          minLength: 1
          type: string
          format: currency
        Value:
          type: number
          format: double
      additionalProperties: false
      x-schema-id: ExchangeRate
    ExchangeRateResult:
      title: ExchangeRateResult
      required:
        - ExchangeRates
      type: object
      properties:
        ExchangeRates:
          type: array
          items:
            $ref: '#/components/schemas/ExchangeRate'
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ExchangeRateResult
    Export:
      title: Export
      required:
        - EntityType
        - Files
        - Id
        - Status
      type: object
      properties:
        Id:
          type: string
          format: uuid
        Status:
          $ref: '#/components/schemas/ExportStatus'
        EntityType:
          $ref: '#/components/schemas/ExportEntityType'
        Files:
          type: array
          items:
            $ref: '#/components/schemas/ExportFileEntry'
        ExpiresUtc:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
      x-schema-id: Export
    ExportAddParameters:
      title: ExportAddParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - EntityType
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        EntityType:
          $ref: '#/components/schemas/ExportEntityType'
      additionalProperties: false
      x-schema-id: ExportAddParameters
    ExportAddResult:
      title: ExportAddResult
      type: object
      properties:
        Export:
          $ref: '#/components/schemas/Export'
      additionalProperties: false
      x-schema-id: ExportAddResult
    ExportEntityType:
      enum:
        - OrderItem
      type: string
    ExportFileEntry:
      title: ExportFileEntry
      required:
        - SizeInBytes
        - Url
      type: object
      properties:
        Url:
          minLength: 1
          type: string
          format: uri
        SizeInBytes:
          type: integer
          format: int64
      additionalProperties: false
      x-schema-id: ExportFileEntry
    ExportFilterParameters:
      title: ExportFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - ExportIds
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        ExportIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
      additionalProperties: false
      x-schema-id: ExportFilterParameters
    ExportResult:
      type: object
      additionalProperties: false
    ExportStatus:
      enum:
        - Pending
        - Processing
        - Success
        - Failed
        - Expired
      type: string
    ExtendedAmount:
      title: ExtendedAmount
      type: object
      properties:
        Currency:
          type: string
          nullable: true
        NetValue:
          type: number
          format: double
        GrossValue:
          type: number
          format: double
        TaxValues:
          type: array
          items:
            $ref: '#/components/schemas/TaxValue'
          nullable: true
        Breakdown:
          $ref: '#/components/schemas/TaxBreakdown'
        Value:
          type: number
          format: double
          nullable: true
        Net:
          type: number
          format: double
          nullable: true
        Tax:
          type: number
          format: double
          nullable: true
        TaxRate:
          type: number
          format: double
          nullable: true
      additionalProperties: false
      x-schema-id: ExtendedAmount
    ExtendedAmountParameters:
      title: ExtendedAmountParameters
      required:
        - Currency
      type: object
      properties:
        Currency:
          minLength: 1
          type: string
          format: currency
        NetValue:
          type: number
          format: double
          nullable: true
        GrossValue:
          type: number
          format: double
          nullable: true
        TaxCodes:
          type: array
          items:
            type: string
          nullable: true
        Value:
          type: number
          format: double
          nullable: true
          deprecated: true
        Net:
          type: number
          format: double
          nullable: true
          deprecated: true
        Tax:
          type: number
          format: double
          nullable: true
          deprecated: true
        TaxRate:
          type: number
          format: double
          nullable: true
          deprecated: true
      additionalProperties: false
      x-schema-id: ExtendedAmountParameters
    ExternalPaymentParameters:
      title: ExternalPaymentParameters
      required:
        - AccessToken
        - Amount
        - Client
        - ClientToken
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        EnterpriseId:
          type: string
          format: uuid
          nullable: true
        BillId:
          type: string
          format: uuid
          nullable: true
        AccountingCategoryId:
          type: string
          format: uuid
          nullable: true
        Amount:
          $ref: '#/components/schemas/ExtendedAmountParameters'
        Category:
          $ref: '#/components/schemas/AccountingCategoryParameters'
        Notes:
          type: string
          nullable: true
        AccountId:
          type: string
          format: uuid
          nullable: true
        CustomerId:
          type: string
          format: uuid
          nullable: true
          deprecated: true
        Type:
          anyOf:
            - $ref: '#/components/schemas/ExternalPaymentTypeOld'
          nullable: true
        ExternalIdentifier:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: ExternalPaymentParameters
    ExternalPaymentType:
      enum:
        - Unspecified
        - BadDebts
        - Bacs
        - WireTransfer
        - Invoice
        - ExchangeRateDifference
        - Complimentary
        - Reseller
        - ExchangeRoundingDifference
        - Barter
        - Commission
        - BankCharges
        - CrossSettlement
        - Cash
        - CreditCard
        - Prepayment
        - Cheque
        - Bancontact
        - IDeal
        - PayPal
        - GiftCard
        - LoyaltyPoints
        - ChequeVacances
        - OnlinePayment
        - CardCheck
        - PaymentHubRedirection
        - Voucher
        - MasterCard
        - Visa
        - Amex
        - Discover
        - DinersClub
        - Jcb
        - UnionPay
        - Twint
        - Reka
        - LoyaltyCard
        - PosDiningAndSpaReward
        - DirectDebit
        - DepositCheck
        - DepositCash
        - DepositCreditCard
        - DepositWireTransfer
      type: string
    ExternalPaymentTypeOld:
      enum:
        - Bacs
        - WireTransfer
        - Invoice
        - Reseller
        - CrossSettlement
        - Cash
        - CreditCard
        - DepositWireTransfer
      type: string
    FiscalMachineCommandData:
      title: FiscalMachineCommandData
      type: object
      oneOf:
        - $ref: '#/components/schemas/PaymentTerminalCommandData'
        - $ref: '#/components/schemas/PrinterCommandData'
        - $ref: '#/components/schemas/KeyCutterCommandData'
        - $ref: '#/components/schemas/FiscalMachineCommandData'
        - title: PassportScannerCommandData
          type: object
          oneOf:
            - $ref: '#/components/schemas/PaymentTerminalCommandData'
            - $ref: '#/components/schemas/PrinterCommandData'
            - $ref: '#/components/schemas/KeyCutterCommandData'
            - $ref: '#/components/schemas/FiscalMachineCommandData'
            - $ref: '#/components/schemas/PassportScannerCommandData'
          properties:
            PassportScannerId:
              type: string
              nullable: true
            ReservationId:
              type: string
              format: uuid
              nullable: true
            CustomerId:
              type: string
              format: uuid
              nullable: true
          additionalProperties: false
          x-schema-id: PassportScannerCommandData
      properties:
        FiscalMachineId:
          type: string
          nullable: true
        ApiUrl:
          type: string
          nullable: true
        FiscalMachineData:
          type: string
          nullable: true
        Bill:
          $ref: '#/components/schemas/Bill'
        TaxIdentifier:
          type: string
          nullable: true
        BillFiscalMachineData:
          title: BillFiscalMachineData
          properties:
            discriminator:
              $ref: '#/components/schemas/BillFiscalMachineDataDiscriminator'
            value:
              oneOf:
                - $ref: '#/components/schemas/ItalianFiscalMachineData'
        PayloadData:
          title: PayloadData
          properties:
            discriminator:
              $ref: '#/components/schemas/FiscalMachinePayloadDataDiscriminator'
            value:
              oneOf:
                - type: string
      additionalProperties: false
      x-schema-id: FiscalMachineCommandData
    FiscalMachinePayloadDataDiscriminator:
      enum:
        - ItalianFiscalMachine
      type: string
    FlatTaxRateStrategy:
      title: FlatTaxRateStrategy
      type: object
      properties:
        CurrencyCode:
          type: string
          nullable: true
        Value:
          type: number
          format: double
      additionalProperties: false
      x-schema-id: FlatTaxRateStrategy
    GetAllActiveCommandsParameters:
      title: GetAllActiveCommandsParameters
      required:
        - AccessToken
        - Client
        - ClientToken
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
      x-schema-id: GetAllActiveCommandsParameters
    GuidIEnumerableUpdateValue:
      title: UpdateValue`1
      type: object
      properties:
        Value:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: UpdateValue`1
    GuidNullableUpdateValue:
      title: UpdateValue`1
      type: object
      properties:
        Value:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: UpdateValue`1
    GuidUpdateValue:
      title: UpdateValue`1
      type: object
      properties:
        Value:
          type: string
          format: uuid
      additionalProperties: false
      x-schema-id: UpdateValue`1
    Hours:
      title: Hours
      required:
        - Eight
        - Eighteen
        - Eleven
        - Fifteen
        - Five
        - Four
        - Fourteen
        - Nine
        - Nineteen
        - One
        - Seven
        - Seventeen
        - Six
        - Sixteen
        - Ten
        - Thirteen
        - Three
        - Twelve
        - Twenty
        - TwentyOne
        - TwentyThree
        - TwentyTwo
        - Two
        - Zero
      type: object
      properties:
        Zero:
          type: boolean
        One:
          type: boolean
        Two:
          type: boolean
        Three:
          type: boolean
        Four:
          type: boolean
        Five:
          type: boolean
        Six:
          type: boolean
        Seven:
          type: boolean
        Eight:
          type: boolean
        Nine:
          type: boolean
        Ten:
          type: boolean
        Eleven:
          type: boolean
        Twelve:
          type: boolean
        Thirteen:
          type: boolean
        Fourteen:
          type: boolean
        Fifteen:
          type: boolean
        Sixteen:
          type: boolean
        Seventeen:
          type: boolean
        Eighteen:
          type: boolean
        Nineteen:
          type: boolean
        Twenty:
          type: boolean
        TwentyOne:
          type: boolean
        TwentyTwo:
          type: boolean
        TwentyThree:
          type: boolean
      additionalProperties: false
      x-schema-id: Hours
    HoursParameters:
      title: HoursParameters
      required:
        - Eight
        - Eighteen
        - Eleven
        - Fifteen
        - Five
        - Four
        - Fourteen
        - Nine
        - Nineteen
        - One
        - Seven
        - Seventeen
        - Six
        - Sixteen
        - Ten
        - Thirteen
        - Three
        - Twelve
        - Twenty
        - TwentyOne
        - TwentyThree
        - TwentyTwo
        - Two
        - Zero
      type: object
      properties:
        Zero:
          type: boolean
        One:
          type: boolean
        Two:
          type: boolean
        Three:
          type: boolean
        Four:
          type: boolean
        Five:
          type: boolean
        Six:
          type: boolean
        Seven:
          type: boolean
        Eight:
          type: boolean
        Nine:
          type: boolean
        Ten:
          type: boolean
        Eleven:
          type: boolean
        Twelve:
          type: boolean
        Thirteen:
          type: boolean
        Fourteen:
          type: boolean
        Fifteen:
          type: boolean
        Sixteen:
          type: boolean
        Seventeen:
          type: boolean
        Eighteen:
          type: boolean
        Nineteen:
          type: boolean
        Twenty:
          type: boolean
        TwentyOne:
          type: boolean
        TwentyTwo:
          type: boolean
        TwentyThree:
          type: boolean
      additionalProperties: false
      x-schema-id: HoursParameters
    ImageResizeMode:
      enum:
        - Cover
        - CoverExact
        - Fit
        - FitExact
      type: string
    ImageSizeParameters:
      title: ImageSizeParameters
      required:
        - ImageId
      type: object
      properties:
        ImageId:
          type: string
          format: uuid
        Width:
          type: integer
          format: int32
          nullable: true
        Height:
          type: integer
          format: int32
          nullable: true
        ResizeMode:
          anyOf:
            - $ref: '#/components/schemas/ImageResizeMode'
          nullable: true
      additionalProperties: false
      x-schema-id: ImageSizeParameters
    ImageUrl:
      title: ImageUrl
      type: object
      properties:
        ImageId:
          type: string
          format: uuid
        Url:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: ImageUrl
    ImageUrlParameters:
      title: ImageUrlParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Images
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Images:
          type: array
          items:
            $ref: '#/components/schemas/ImageSizeParameters'
      additionalProperties: false
      x-schema-id: ImageUrlParameters
    ImageUrlResult:
      title: ImageUrlResult
      type: object
      properties:
        ImageUrls:
          type: array
          items:
            $ref: '#/components/schemas/ImageUrl'
          nullable: true
      additionalProperties: false
      x-schema-id: ImageUrlResult
    Int32NullableUpdateValue:
      title: UpdateValue`1
      type: object
      properties:
        Value:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
      x-schema-id: UpdateValue`1
    Int32UpdateValue:
      title: UpdateValue`1
      type: object
      properties:
        Value:
          type: integer
          format: int32
      additionalProperties: false
      x-schema-id: UpdateValue`1
    InvoicePaymentData:
      title: InvoicePaymentData
      type: object
      properties:
        InvoiceId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: InvoicePaymentData
    ItalianFiscalMachineData:
      title: ItalianFiscalMachineData
      type: object
      properties:
        IsRefund:
          type: boolean
        RebatedReceiptNumber:
          type: string
          nullable: true
        RebatedReceiptSequence:
          type: string
          nullable: true
        RebatedReceiptDateTimeUtc:
          type: string
          nullable: true
        PrinterSerialNumber:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: ItalianFiscalMachineData
    ItalianFiscalMachineResultData:
      title: ItalianFiscalMachineResultData
      type: object
      properties:
        SerialNumber:
          type: string
          nullable: true
        Base64Data:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: ItalianFiscalMachineResultData
    JToken:
      type: array
      items:
        $ref: '#/components/schemas/JToken'
    KeyCutterCommandData:
      title: KeyCutterCommandData
      type: object
      oneOf:
        - $ref: '#/components/schemas/PaymentTerminalCommandData'
        - $ref: '#/components/schemas/PrinterCommandData'
        - $ref: '#/components/schemas/KeyCutterCommandData'
        - title: FiscalMachineCommandData
          type: object
          oneOf:
            - $ref: '#/components/schemas/PaymentTerminalCommandData'
            - $ref: '#/components/schemas/PrinterCommandData'
            - $ref: '#/components/schemas/KeyCutterCommandData'
            - $ref: '#/components/schemas/FiscalMachineCommandData'
            - title: PassportScannerCommandData
              type: object
              oneOf:
                - $ref: '#/components/schemas/PaymentTerminalCommandData'
                - $ref: '#/components/schemas/PrinterCommandData'
                - $ref: '#/components/schemas/KeyCutterCommandData'
                - $ref: '#/components/schemas/FiscalMachineCommandData'
                - $ref: '#/components/schemas/PassportScannerCommandData'
              properties:
                PassportScannerId:
                  type: string
                  nullable: true
                ReservationId:
                  type: string
                  format: uuid
                  nullable: true
                CustomerId:
                  type: string
                  format: uuid
                  nullable: true
              additionalProperties: false
              x-schema-id: PassportScannerCommandData
          properties:
            FiscalMachineId:
              type: string
              nullable: true
            ApiUrl:
              type: string
              nullable: true
            FiscalMachineData:
              type: string
              nullable: true
            Bill:
              $ref: '#/components/schemas/Bill'
            TaxIdentifier:
              type: string
              nullable: true
            BillFiscalMachineData:
              title: BillFiscalMachineData
              properties:
                discriminator:
                  $ref: '#/components/schemas/BillFiscalMachineDataDiscriminator'
                value:
                  oneOf:
                    - $ref: '#/components/schemas/ItalianFiscalMachineData'
            PayloadData:
              title: PayloadData
              properties:
                discriminator:
                  $ref: '#/components/schemas/FiscalMachinePayloadDataDiscriminator'
                value:
                  oneOf:
                    - type: string
          additionalProperties: false
          x-schema-id: FiscalMachineCommandData
        - title: PassportScannerCommandData
          type: object
          oneOf:
            - $ref: '#/components/schemas/PaymentTerminalCommandData'
            - $ref: '#/components/schemas/PrinterCommandData'
            - $ref: '#/components/schemas/KeyCutterCommandData'
            - $ref: '#/components/schemas/FiscalMachineCommandData'
            - $ref: '#/components/schemas/PassportScannerCommandData'
          properties:
            PassportScannerId:
              type: string
              nullable: true
            ReservationId:
              type: string
              format: uuid
              nullable: true
            CustomerId:
              type: string
              format: uuid
              nullable: true
          additionalProperties: false
          x-schema-id: PassportScannerCommandData
      properties:
        KeyCutterId:
          type: string
          nullable: true
        ApiUrl:
          type: string
          nullable: true
        UserName:
          type: string
          nullable: true
        Password:
          type: string
          nullable: true
        KeyCutterData:
          type: string
          nullable: true
        KeyCount:
          type: integer
          format: int32
        LockIds:
          type: array
          items:
            type: string
          nullable: true
        StartUtc:
          type: string
          nullable: true
        EndUtc:
          type: string
          nullable: true
        FirstName:
          type: string
          nullable: true
        LastName:
          type: string
          nullable: true
        Telephone:
          type: string
          nullable: true
        Email:
          type: string
          nullable: true
        ReservationId:
          type: string
          format: uuid
          nullable: true
        ReservationNumber:
          type: string
          nullable: true
        KeyMode:
          type: string
          nullable: true
        ExternalRequestIdentifier:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: KeyCutterCommandData
    KeyCutterCommandParameters:
      title: KeyCutterCommandParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - KeyCount
        - KeyCutterId
        - ReservationId
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        EnterpriseId:
          type: string
          format: uuid
          nullable: true
        KeyCutterId:
          type: string
          format: uuid
        ReservationId:
          type: string
          format: uuid
        KeyCount:
          type: integer
          format: int32
      additionalProperties: false
      x-schema-id: KeyCutterCommandParameters
    Language:
      title: Language
      type: object
      properties:
        Code:
          type: string
          nullable: true
        FallbackLanguageCode:
          type: string
          nullable: true
        EnglishName:
          type: string
          nullable: true
        LocalName:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: Language
    LanguageResult:
      title: LanguageResult
      type: object
      properties:
        Languages:
          type: array
          items:
            $ref: '#/components/schemas/Language'
          nullable: true
      additionalProperties: false
      x-schema-id: LanguageResult
    LanguageTextParameters:
      title: LanguageTextParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - LanguageCodes
        - Scope
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        LanguageCodes:
          type: array
          items:
            type: string
        Scope:
          minLength: 1
          type: string
      additionalProperties: false
      x-schema-id: LanguageTextParameters
    LanguageTextResult:
      title: LanguageTextResult
      type: object
      properties:
        LanguageTexts:
          type: array
          items:
            $ref: '#/components/schemas/LanguageTexts'
          nullable: true
      additionalProperties: false
      x-schema-id: LanguageTextResult
    LanguageTexts:
      title: LanguageTexts
      type: object
      properties:
        LanguageCode:
          type: string
          nullable: true
        Texts:
          type: object
          additionalProperties:
            type: string
            nullable: true
          nullable: true
      additionalProperties: false
      x-schema-id: LanguageTexts
    LengthRestriction:
      title: LengthRestriction
      type: object
      properties:
        Id:
          type: string
          format: uuid
        RateId:
          type: string
          format: uuid
        IsInherited:
          type: boolean
        StartUtc:
          type: string
          nullable: true
        EndUtc:
          type: string
          nullable: true
        Days:
          type: array
          items:
            type: string
          nullable: true
        ExternalIdentifier:
          type: string
          nullable: true
        MinLength:
          type: string
          nullable: true
        MaxLength:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: LengthRestriction
    Limitation:
      title: Limitation
      required:
        - Count
      type: object
      properties:
        Count:
          type: integer
          format: int32
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: Limitation
    LoyaltyMembership:
      title: LoyaltyMembership
      required:
        - AccountId
        - ChainId
        - Id
        - IsPrimary
        - LoyaltyProgramId
        - State
      type: object
      properties:
        Id:
          type: string
          format: uuid
        ChainId:
          type: string
          format: uuid
        AccountId:
          type: string
          format: uuid
        LoyaltyProgramId:
          type: string
          format: uuid
        State:
          $ref: '#/components/schemas/LoyaltyMembershipState'
        IsPrimary:
          type: boolean
        Code:
          type: string
          nullable: true
        Points:
          type: integer
          format: int32
          nullable: true
        ExpirationDate:
          type: string
          format: date-time
          nullable: true
        Url:
          type: string
          nullable: true
        LoyaltyTierId:
          type: string
          format: uuid
          nullable: true
        CreatorProfile:
          $ref: '#/components/schemas/ProfileData'
        UpdaterProfile:
          $ref: '#/components/schemas/ProfileData'
      additionalProperties: false
      x-schema-id: LoyaltyMembership
    LoyaltyMembershipAddParameters:
      title: LoyaltyMembershipAddParameters
      required:
        - AccountId
        - IsPrimary
        - LoyaltyProgramId
      type: object
      properties:
        AccountId:
          type: string
          format: uuid
        LoyaltyProgramId:
          type: string
          format: uuid
        IsPrimary:
          type: boolean
        State:
          anyOf:
            - $ref: '#/components/schemas/LoyaltyMembershipState'
          nullable: true
        Code:
          maxLength: 255
          type: string
          nullable: true
        Points:
          type: integer
          format: int32
          nullable: true
        ExpirationDate:
          type: string
          format: date
          nullable: true
        Url:
          type: string
          format: uri
          nullable: true
        LoyaltyTierId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: LoyaltyMembershipAddParameters
    LoyaltyMembershipDeleteParameters:
      title: LoyaltyMembershipDeleteParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - LoyaltyMembershipIds
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        LoyaltyMembershipIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
      additionalProperties: false
      x-schema-id: LoyaltyMembershipDeleteParameters
    LoyaltyMembershipFilterParameters:
      title: LoyaltyMembershipFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        CreatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        ChainIds:
          maxItems: 100
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        LoyaltyMembershipIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        AccountIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        LoyaltyProgramIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        MembershipStates:
          type: array
          items:
            $ref: '#/components/schemas/LoyaltyMembershipState'
          nullable: true
        ActivityStates:
          type: array
          items:
            $ref: '#/components/schemas/ActivityStates'
          nullable: true
        Codes:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
          nullable: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
      additionalProperties: false
      x-schema-id: LoyaltyMembershipFilterParameters
    LoyaltyMembershipResult:
      title: LoyaltyMembershipResult
      required:
        - LoyaltyMemberships
      type: object
      properties:
        LoyaltyMemberships:
          type: array
          items:
            $ref: '#/components/schemas/LoyaltyMembership'
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: LoyaltyMembershipResult
    LoyaltyMembershipState:
      enum:
        - New
        - Pending
        - Enrolled
        - Canceled
        - Declined
      type: string
    LoyaltyMembershipUpdateParameters:
      title: LoyaltyMembershipUpdateParameters
      required:
        - LoyaltyMembershipId
      type: object
      properties:
        LoyaltyMembershipId:
          type: string
          format: uuid
        LoyaltyProgramId:
          $ref: '#/components/schemas/GuidUpdateValue'
        State:
          anyOf:
            - $ref: '#/components/schemas/LoyaltyMembershipState'
          nullable: true
        IsPrimary:
          $ref: '#/components/schemas/BooleanUpdateValue'
        Code:
          $ref: '#/components/schemas/StringUpdateValue'
        Points:
          $ref: '#/components/schemas/Int32NullableUpdateValue'
        ExpirationDate:
          $ref: '#/components/schemas/StringUpdateValue'
        Url:
          $ref: '#/components/schemas/StringUpdateValue'
        LoyaltyTierId:
          $ref: '#/components/schemas/GuidNullableUpdateValue'
      additionalProperties: false
      x-schema-id: LoyaltyMembershipUpdateParameters
    LoyaltyProgram:
      title: LoyaltyProgram
      required:
        - ChainId
        - Code
        - Id
        - Name
      type: object
      properties:
        Id:
          type: string
          format: uuid
        ChainId:
          type: string
          format: uuid
        Name:
          minLength: 1
          type: string
        Code:
          minLength: 1
          type: string
        Type:
          anyOf:
            - $ref: '#/components/schemas/LoyaltyProgramType'
          nullable: true
        Subscription:
          anyOf:
            - $ref: '#/components/schemas/LoyaltyProgramSubscription'
          nullable: true
      additionalProperties: false
      x-schema-id: LoyaltyProgram
    LoyaltyProgramAddParameters:
      title: LoyaltyProgramAddParameters
      required:
        - Code
        - Name
      type: object
      properties:
        DataClusterId:
          type: string
          format: uuid
          deprecated: true
        Name:
          maxLength: 100
          minLength: 1
          type: string
        Code:
          maxLength: 50
          minLength: 1
          type: string
        Type:
          anyOf:
            - $ref: '#/components/schemas/LoyaltyProgramType'
          nullable: true
        Subscription:
          anyOf:
            - $ref: '#/components/schemas/LoyaltyProgramSubscription'
          nullable: true
      additionalProperties: false
      x-schema-id: LoyaltyProgramAddParameters
    LoyaltyProgramDeleteParameters:
      title: LoyaltyProgramDeleteParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - LoyaltyProgramIds
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        LoyaltyProgramIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
      additionalProperties: false
      x-schema-id: LoyaltyProgramDeleteParameters
    LoyaltyProgramFilterParameters:
      title: LoyaltyProgramFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        CreatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        ChainIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        LoyaltyProgramIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ActivityStates:
          type: array
          items:
            $ref: '#/components/schemas/ActivityStates'
          nullable: true
        Codes:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
          nullable: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
      additionalProperties: false
      x-schema-id: LoyaltyProgramFilterParameters
    LoyaltyProgramResult:
      title: LoyaltyProgramResult
      required:
        - LoyaltyPrograms
      type: object
      properties:
        LoyaltyPrograms:
          type: array
          items:
            $ref: '#/components/schemas/LoyaltyProgram'
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: LoyaltyProgramResult
    LoyaltyProgramSubscription:
      enum:
        - Free
        - Paid
      type: string
    LoyaltyProgramType:
      enum:
        - Hotel
        - ExternalPartner
        - SoftBrand
        - Unknown
      type: string
    LoyaltyProgramUpdateParameters:
      title: LoyaltyProgramUpdateParameters
      required:
        - LoyaltyProgramId
      type: object
      properties:
        LoyaltyProgramId:
          type: string
          format: uuid
        Name:
          $ref: '#/components/schemas/StringUpdateValue'
        Type:
          anyOf:
            - $ref: '#/components/schemas/LoyaltyProgramType'
          nullable: true
        Subscription:
          anyOf:
            - $ref: '#/components/schemas/LoyaltyProgramSubscription'
          nullable: true
      additionalProperties: false
      x-schema-id: LoyaltyProgramUpdateParameters
    LoyaltyTier:
      title: LoyaltyTier
      required:
        - Code
        - Id
        - LoyaltyProgramId
        - Name
        - Ordering
      type: object
      properties:
        Id:
          type: string
          format: uuid
        LoyaltyProgramId:
          type: string
          format: uuid
        Name:
          minLength: 1
          type: string
        Code:
          minLength: 1
          type: string
        Ordering:
          type: integer
          format: int32
      additionalProperties: false
      x-schema-id: LoyaltyTier
    LoyaltyTierAddParameters:
      title: LoyaltyTierAddParameters
      required:
        - Code
        - LoyaltyProgramId
        - Name
        - Ordering
      type: object
      properties:
        LoyaltyProgramId:
          type: string
          format: uuid
        Name:
          maxLength: 50
          minLength: 1
          type: string
        Code:
          maxLength: 50
          minLength: 1
          type: string
        Ordering:
          type: integer
          format: int32
      additionalProperties: false
      x-schema-id: LoyaltyTierAddParameters
    LoyaltyTierDeleteParameters:
      title: LoyaltyTierDeleteParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - LoyaltyTierIds
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        LoyaltyTierIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
      additionalProperties: false
      x-schema-id: LoyaltyTierDeleteParameters
    LoyaltyTierFilterParameters:
      title: LoyaltyTierFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - LoyaltyProgramIds
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        ChainIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        LoyaltyProgramIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
        LoyaltyTierIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ActivityStates:
          type: array
          items:
            $ref: '#/components/schemas/ActivityStates'
          nullable: true
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        Limitation:
          $ref: '#/components/schemas/Limitation'
      additionalProperties: false
      x-schema-id: LoyaltyTierFilterParameters
    LoyaltyTierResult:
      title: LoyaltyTierResult
      required:
        - LoyaltyTiers
      type: object
      properties:
        LoyaltyTiers:
          type: array
          items:
            $ref: '#/components/schemas/LoyaltyTier'
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: LoyaltyTierResult
    LoyaltyTierUpdateParameters:
      title: LoyaltyTierUpdateParameters
      required:
        - LoyaltyTierId
      type: object
      properties:
        LoyaltyTierId:
          type: string
          format: uuid
        Name:
          $ref: '#/components/schemas/StringUpdateValue'
        Code:
          $ref: '#/components/schemas/StringUpdateValue'
        Ordering:
          $ref: '#/components/schemas/Int32UpdateValue'
      additionalProperties: false
      x-schema-id: LoyaltyTierUpdateParameters
    MergeAccountType:
      enum:
        - Customer
        - Company
      type: string
    Message:
      title: Message
      required:
        - CreatedUtc
        - Id
        - MessageThreadId
        - Sender
        - Text
      type: object
      properties:
        Id:
          type: string
          format: uuid
        MessageThreadId:
          type: string
          format: uuid
        Text:
          minLength: 1
          type: string
        Sender:
          $ref: '#/components/schemas/SenderDiscriminator'
        CreatedUtc:
          minLength: 1
          type: string
          format: date-time
      additionalProperties: false
      x-schema-id: Message
    MessageAddParameters:
      title: MessageAddParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - MessageThreadId
        - Text
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        MessageThreadId:
          type: string
          format: uuid
        Text:
          minLength: 1
          type: string
        Identifier:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: MessageAddParameters
    MessageFilterParameters:
      title: MessageFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
        - MessageThreadIds
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        MessageThreadIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
        CreatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
      additionalProperties: false
      x-schema-id: MessageFilterParameters
    MessageResult:
      title: MessageResult
      required:
        - Messages
      type: object
      properties:
        Messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: MessageResult
    MessageThread:
      title: MessageThread
      required:
        - CreatedUtc
        - Id
        - OriginalSender
        - Subject
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          format: uuid
        OriginalSender:
          minLength: 1
          type: string
        Subject:
          minLength: 1
          type: string
        CreatedUtc:
          minLength: 1
          type: string
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          format: date-time
        IsResolved:
          type: boolean
      additionalProperties: false
      x-schema-id: MessageThread
    MessageThreadAddParameters:
      title: MessageThreadAddParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - OriginalSender
        - Subject
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        OriginalSender:
          minLength: 1
          type: string
        Subject:
          minLength: 1
          type: string
      additionalProperties: false
      x-schema-id: MessageThreadAddParameters
    MessageThreadFilterParameters:
      title: MessageThreadFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        MessageThreadIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        CreatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
      additionalProperties: false
      x-schema-id: MessageThreadFilterParameters
    MessageThreadResult:
      title: MessageThreadResult
      required:
        - MessageThreads
      type: object
      properties:
        MessageThreads:
          type: array
          items:
            $ref: '#/components/schemas/MessageThread'
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: MessageThreadResult
    MultipleAccountMergeParameters:
      title: MultipleAccountMergeParameters
      required:
        - AccessToken
        - AccountMergeParameters
        - Client
        - ClientToken
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        AccountMergeParameters:
          maxItems: 10
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/AccountMergeParameter'
      additionalProperties: false
      x-schema-id: MultipleAccountMergeParameters
    MultipleAccountNoteAddParameters:
      title: MultipleAccountNoteAddParameters
      required:
        - AccessToken
        - AccountNotes
        - Client
        - ClientToken
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        ChainId:
          type: string
          format: uuid
          nullable: true
        AccountNotes:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/AccountNoteAddParameters'
      additionalProperties: false
      x-schema-id: MultipleAccountNoteAddParameters
    MultipleAccountNoteDeleteParameters:
      title: MultipleAccountNoteDeleteParameters
      required:
        - AccessToken
        - AccountNoteIds
        - Client
        - ClientToken
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        ChainId:
          type: string
          format: uuid
          nullable: true
        AccountNoteIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
      additionalProperties: false
      x-schema-id: MultipleAccountNoteDeleteParameters
    MultipleAccountNoteUpdateParameters:
      title: MultipleAccountNoteUpdateParameters
      required:
        - AccessToken
        - AccountNoteUpdates
        - Client
        - ClientToken
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        ChainId:
          type: string
          format: uuid
          nullable: true
        AccountNoteUpdates:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/AccountNoteUpdateParameters'
      additionalProperties: false
      x-schema-id: MultipleAccountNoteUpdateParameters
    MultipleAccountingItemsUpdateParameters:
      title: MultipleAccountingItemsUpdateParameters
      required:
        - AccessToken
        - AccountingItemUpdates
        - Client
        - ClientToken
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        EnterpriseId:
          type: string
          format: uuid
          nullable: true
        AccountingItemUpdates:
          type: array
          items:
            $ref: '#/components/schemas/AccountingItemUpdateParameters'
      additionalProperties: false
      x-schema-id: MultipleAccountingItemsUpdateParameters
    MultipleAddressAddParameters:
      title: MultipleAddressAddParameters
      required:
        - AccessToken
        - Addresses
        - Client
        - ClientToken
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        ChainId:
          type: string
          format: uuid
          nullable: true
        Addresses:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/AddressAddParameters'
      additionalProperties: false
      x-schema-id: MultipleAddressAddParameters
    MultipleAddressUpdateParameters:
      title: MultipleAddressUpdateParameters
      required:
        - AccessToken
        - AddressUpdates
        - Client
        - ClientToken
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        ChainId:
          type: string
          format: uuid
          nullable: true
        AddressUpdates:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/AddressUpdateParameters'
      additionalProperties: false
      x-schema-id: MultipleAddressUpdateParameters
    MultipleAvailabilityBlockAddParameters:
      title: MultipleAvailabilityBlockAddParameters
      required:
        - AccessToken
        - AvailabilityBlocks
        - Client
        - ClientToken
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        EnterpriseId:
          type: string
          format: uuid
          nullable: true
        AvailabilityBlocks:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/AvailabilityBlockAddParameters'
      additionalProperties: false
      x-schema-id: MultipleAvailabilityBlockAddParameters
    MultipleAvailabilityBlockDeleteParameters:
      title: MultipleAvailabilityBlockDeleteParameters
      required:
        - AccessToken
        - AvailabilityBlockIds
        - Client
        - ClientToken
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        EnterpriseId:
          type: string
          format: uuid
          nullable: true
        AvailabilityBlockIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
      additionalProperties: false
      x-schema-id: MultipleAvailabilityBlockDeleteParameters
    MultipleAvailabilityBlockUpdateParameters:
      title: MultipleAvailabilityBlockUpdateParameters
      required:
        - AccessToken
        - Client
        - ClientToken
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        EnterpriseId:
          type: string
          format: uuid
          nullable: true
        AvailabilityBlocks:
          type: array
          items:
            $ref: '#/components/schemas/AvailabilityBlockUpdateParameters'
          nullable: true
      additionalProperties: false
      x-schema-id: MultipleAvailabilityBlockUpdateParameters
    MultipleBillAddParameters:
      title: MultipleBillAddParameters
      required:
        - AccessToken
        - Bills
        - Client
        - ClientToken
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        EnterpriseId:
          type: string
          format: uuid
          nullable: true
        Bills:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/BillAddParameters'
      additionalProperties: false
      x-schema-id: MultipleBillAddParameters
    MultipleCompanyContractAddParameters:
      title: MultipleCompanyContractAddParameters
      required:
        - AccessToken
        - Client
        - ClientToken
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        TravelAgencyContracts:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/TravelAgencyContractAddParameters'
          nullable: true
      additionalProperties: false
      x-schema-id: MultipleCompanyContractAddParameters
    MultipleCompanyContractDeleteParameters:
      title: MultipleCompanyContractDeleteParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - ServiceIds
        - TravelAgencyContractIds
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        ServiceIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
        ServiceId:
          type: string
          format: uuid
          nullable: true
          deprecated: true
        TravelAgencyContractIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
      additionalProperties: false
      x-schema-id: MultipleCompanyContractDeleteParameters
    MultipleCompanyContractUpdateParameters:
      title: MultipleCompanyContractUpdateParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - TravelAgencyContractUpdates
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        TravelAgencyContractUpdates:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/TravelAgencyContractUpdateParameters'
      additionalProperties: false
      x-schema-id: MultipleCompanyContractUpdateParameters
    MultipleCreditCardParameters:
      title: MultipleCreditCardParameters
      required:
        - AccessToken
        - Client
        - ClientToken
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        CreditCardIds:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: MultipleCreditCardParameters
    MultipleCustomerParameters:
      title: MultipleCustomerParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - CustomerIds
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        CustomerIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
      additionalProperties: false
      x-schema-id: MultipleCustomerParameters
    MultipleLoyaltyMembershipAddParameters:
      title: MultipleLoyaltyMembershipAddParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - LoyaltyMemberships
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        ChainId:
          type: string
          format: uuid
          nullable: true
        LoyaltyMemberships:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/LoyaltyMembershipAddParameters'
      additionalProperties: false
      x-schema-id: MultipleLoyaltyMembershipAddParameters
    MultipleLoyaltyMembershipUpdateParameters:
      title: MultipleLoyaltyMembershipUpdateParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - LoyaltyMembershipUpdates
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        ChainId:
          type: string
          format: uuid
          nullable: true
        LoyaltyMembershipUpdates:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/LoyaltyMembershipUpdateParameters'
      additionalProperties: false
      x-schema-id: MultipleLoyaltyMembershipUpdateParameters
    MultipleLoyaltyProgramAddParameters:
      title: MultipleLoyaltyProgramAddParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - LoyaltyPrograms
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        ChainId:
          type: string
          format: uuid
          nullable: true
        LoyaltyPrograms:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/LoyaltyProgramAddParameters'
      additionalProperties: false
      x-schema-id: MultipleLoyaltyProgramAddParameters
    MultipleLoyaltyProgramUpdateParameters:
      title: MultipleLoyaltyProgramUpdateParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - LoyaltyProgramUpdates
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        ChainId:
          type: string
          format: uuid
          nullable: true
        LoyaltyProgramUpdates:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/LoyaltyProgramUpdateParameters'
      additionalProperties: false
      x-schema-id: MultipleLoyaltyProgramUpdateParameters
    MultipleLoyaltyTierAddParameters:
      title: MultipleLoyaltyTierAddParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - LoyaltyTiers
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        ChainId:
          type: string
          format: uuid
          nullable: true
        LoyaltyTiers:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/LoyaltyTierAddParameters'
      additionalProperties: false
      x-schema-id: MultipleLoyaltyTierAddParameters
    MultipleLoyaltyTierUpdateParameters:
      title: MultipleLoyaltyTierUpdateParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - LoyaltyTierUpdates
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        LoyaltyTierUpdates:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/LoyaltyTierUpdateParameters'
      additionalProperties: false
      x-schema-id: MultipleLoyaltyTierUpdateParameters
    MultipleMessageAddParameters:
      title: MultipleMessageAddParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Messages
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Messages:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/MessageAddParameters'
      additionalProperties: false
      x-schema-id: MultipleMessageAddParameters
    MultiplePaymentRequestAddParameters:
      title: MultiplePaymentRequestAddParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - PaymentRequests
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        EnterpriseId:
          type: string
          format: uuid
          nullable: true
        PaymentRequests:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/PaymentRequestAddParameters'
      additionalProperties: false
      x-schema-id: MultiplePaymentRequestAddParameters
    MultiplePaymentRequestCancelParameters:
      title: MultiplePaymentRequestCancelParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - PaymentRequestIds
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        PaymentRequestIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
      additionalProperties: false
      x-schema-id: MultiplePaymentRequestCancelParameters
    MultipleReservationParameters:
      title: MultipleReservationParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - ReservationIds
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        ReservationIds:
          type: array
          items:
            type: string
            format: uuid
        ReservationId:
          type: string
          format: uuid
          deprecated: true
        Extent:
          $ref: '#/components/schemas/ReservationExtent'
      additionalProperties: false
      x-schema-id: MultipleReservationParameters
    MultipleReservationResult:
      title: MultipleReservationResult
      type: object
      properties:
        ReservationIds:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: MultipleReservationResult
    MultipleReservationUpdateParameters:
      title: MultipleReservationUpdateParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - ReservationId
        - ReservationUpdates
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        EnterpriseId:
          type: string
          format: uuid
          nullable: true
        ReservationId:
          type: string
          format: uuid
        ChannelNumber:
          $ref: '#/components/schemas/StringUpdateValue'
        StartUtc:
          $ref: '#/components/schemas/StringUpdateValue'
        EndUtc:
          $ref: '#/components/schemas/StringUpdateValue'
        ReleasedUtc:
          $ref: '#/components/schemas/StringUpdateValue'
        AdultCount:
          $ref: '#/components/schemas/Int32UpdateValue'
        ChildCount:
          $ref: '#/components/schemas/Int32UpdateValue'
        PersonCounts:
          $ref: '#/components/schemas/PersonCountParametersIEnumerableUpdateValue'
        AssignedResourceId:
          $ref: '#/components/schemas/GuidUpdateValue'
        RequestedCategoryId:
          $ref: '#/components/schemas/GuidUpdateValue'
        TraveAgencyId:
          $ref: '#/components/schemas/GuidNullableUpdateValue'
        TravelAgencyId:
          $ref: '#/components/schemas/GuidNullableUpdateValue'
        CompanyId:
          $ref: '#/components/schemas/GuidNullableUpdateValue'
        BusinessSegmentId:
          $ref: '#/components/schemas/GuidNullableUpdateValue'
        Purpose:
          $ref: '#/components/schemas/StringUpdateValue'
        RateId:
          $ref: '#/components/schemas/GuidUpdateValue'
        CreditCardId:
          $ref: '#/components/schemas/GuidNullableUpdateValue'
        TimeUnitPrices:
          $ref: '#/components/schemas/PerUnitPriceParametersIEnumerableUpdateValue'
        BookerId:
          $ref: '#/components/schemas/GuidNullableUpdateValue'
        AssignedResourceLocked:
          $ref: '#/components/schemas/BooleanUpdateValue'
        AvailabilityBlockId:
          $ref: '#/components/schemas/GuidNullableUpdateValue'
        ReservationUpdates:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/ReservationUpdateParameters'
        CheckOverbooking:
          type: boolean
          nullable: true
        CheckRateApplicability:
          type: boolean
          nullable: true
        Reprice:
          type: boolean
          nullable: true
        ApplyCancelationFee:
          type: boolean
          nullable: true
          deprecated: true
        ApplyCancellationFee:
          type: boolean
          nullable: true
        Reason:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: MultipleReservationUpdateParameters
    MultipleResourceAccessTokenParameters:
      title: MultipleResourceAccessTokenParameters
      required:
        - AccessToken
        - Client
        - ClientToken
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        ResourceAccessTokenParameters:
          type: array
          items:
            $ref: '#/components/schemas/ResourceAccessTokenParameters'
          nullable: true
      additionalProperties: false
      x-schema-id: MultipleResourceAccessTokenParameters
    MultipleResourceAccessTokenUpdateParameters:
      title: MultipleResourceAccessTokenUpdateParameters
      required:
        - AccessToken
        - Client
        - ClientToken
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        ResourceAccessTokenUpdates:
          type: array
          items:
            $ref: '#/components/schemas/ResourceAccessTokenUpdateParameters'
          nullable: true
      additionalProperties: false
      x-schema-id: MultipleResourceAccessTokenUpdateParameters
    MultipleResourceAddParameters:
      title: MultipleResourceAddParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Resources
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Resources:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/ResourceAddParameters'
      additionalProperties: false
      x-schema-id: MultipleResourceAddParameters
    MultipleResourceBlockAddParameters:
      title: MultipleResourceBlockAddParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - ResourceBlocks
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        ResourceBlocks:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/ResourceBlockAddParameters'
      additionalProperties: false
      x-schema-id: MultipleResourceBlockAddParameters
    MultipleResourceUpdateParameters:
      title: MultipleResourceUpdateParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - ResourceUpdates
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        ResourceUpdates:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/ResourceUpdateParameters'
      additionalProperties: false
      x-schema-id: MultipleResourceUpdateParameters
    MultipleRoutingRuleAddParameters:
      title: MultipleRoutingRuleAddParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - RoutingRules
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        RoutingRules:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/RoutingRuleAddParameter'
      additionalProperties: false
      x-schema-id: MultipleRoutingRuleAddParameters
    MultipleRoutingRuleUpdateParameters:
      title: MultipleRoutingRuleUpdateParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - RoutingRuleUpdates
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        RoutingRuleUpdates:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/RoutingRuleUpdateParameters'
      additionalProperties: false
      x-schema-id: MultipleRoutingRuleUpdateParameters
    MultipleServiceOrderNoteAddParameters:
      title: MultipleServiceOrderNoteAddParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - ServiceOrderNotes
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        ServiceOrderNotes:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ServiceOrderNoteAddParameters'
      additionalProperties: false
      x-schema-id: MultipleServiceOrderNoteAddParameters
    MultipleServiceOrderNoteUpdateParameters:
      title: MultipleServiceOrderNoteUpdateParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - ServiceOrderNoteUpdates
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        ServiceOrderNoteUpdates:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ServiceOrderNoteUpdateParameters'
      additionalProperties: false
      x-schema-id: MultipleServiceOrderNoteUpdateParameters
    MultipleVoucherAddParameters:
      title: MultipleVoucherAddParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - VoucherParameters
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        EnterpriseId:
          type: string
          format: uuid
          nullable: true
        VoucherParameters:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/VoucherAddParameters'
      additionalProperties: false
      x-schema-id: MultipleVoucherAddParameters
    MultipleVoucherCodeAddParameters:
      title: MultipleVoucherCodeAddParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - VoucherCodeParameters
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        EnterpriseId:
          type: string
          format: uuid
          nullable: true
        VoucherCodeParameters:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/VoucherCodeAddParameters'
      additionalProperties: false
      x-schema-id: MultipleVoucherCodeAddParameters
    MultipleVoucherCodeDeleteParameters:
      title: MultipleVoucherCodeDeleteParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - VoucherCodeIds
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        EnterpriseId:
          type: string
          format: uuid
          nullable: true
        VoucherCodeIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
      additionalProperties: false
      x-schema-id: MultipleVoucherCodeDeleteParameters
    MultipleVoucherDeleteParameters:
      title: MultipleVoucherDeleteParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - VoucherIds
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        EnterpriseId:
          type: string
          format: uuid
          nullable: true
        VoucherIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
      additionalProperties: false
      x-schema-id: MultipleVoucherDeleteParameters
    MultipleVoucherUpdateParameters:
      title: MultipleVoucherUpdateParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - VoucherUpdates
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        EnterpriseId:
          type: string
          format: uuid
          nullable: true
        VoucherUpdates:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/VoucherUpdateParameters'
      additionalProperties: false
      x-schema-id: MultipleVoucherUpdateParameters
    NextAction:
      title: NextAction
      type: object
      properties:
        Type:
          type: string
          nullable: true
        Url:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: NextAction
    NextActionType:
      enum:
        - RedirectToUrl
      type: string
    ObjectData:
      type: object
      additionalProperties: false
    OldAddress:
      title: OldAddress
      type: object
      properties:
        Id:
          type: string
          format: uuid
        Line1:
          type: string
          nullable: true
        Line2:
          type: string
          nullable: true
        City:
          type: string
          nullable: true
        PostalCode:
          type: string
          nullable: true
        CountryCode:
          type: string
          nullable: true
        CountrySubdivisionCode:
          type: string
          nullable: true
        Latitude:
          type: number
          format: double
          nullable: true
        Longitude:
          type: number
          format: double
          nullable: true
      additionalProperties: false
      x-schema-id: OldAddress
    OldTaxation:
      title: OldTaxation
      type: object
      properties:
        Code:
          type: string
          nullable: true
        TaxEnvironmentCode:
          type: string
          nullable: true
          deprecated: true
        Name:
          type: string
          nullable: true
        LocalName:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: OldTaxation
    OrderAdditionOptions:
      title: OrderAdditionOptions
      type: object
      properties:
        DisableItemGrouping:
          type: boolean
      additionalProperties: false
      x-schema-id: OrderAdditionOptions
    OrderAdditionParameters:
      title: OrderAdditionParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - ServiceId
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        EnterpriseId:
          type: string
          format: uuid
          nullable: true
        ServiceId:
          type: string
          format: uuid
        AccountId:
          type: string
          format: uuid
          nullable: true
        CustomerId:
          type: string
          format: uuid
          nullable: true
          deprecated: true
        Options:
          $ref: '#/components/schemas/OrderAdditionOptions'
        ProductOrders:
          type: array
          items:
            $ref: '#/components/schemas/ProductOrderAdditionData'
          nullable: true
        Items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemAdditionData'
          nullable: true
        ConsumptionUtc:
          type: string
          format: date-time
          nullable: true
        Notes:
          type: string
          nullable: true
        BusinessSegmentId:
          type: string
          format: uuid
          nullable: true
        BillId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: OrderAdditionParameters
    OrderAdditionResult:
      title: OrderAdditionResult
      type: object
      properties:
        OrderId:
          type: string
          format: uuid
        ChargeId:
          type: string
          format: uuid
      additionalProperties: false
      x-schema-id: OrderAdditionResult
    OrderItem:
      title: OrderItem
      required:
        - AccountingState
        - ConsumedUtc
        - CreatedUtc
        - CreatorProfileId
        - Data
        - EnterpriseId
        - Id
        - ServiceId
        - ServiceOrderId
        - Type
        - UpdatedUtc
        - UpdaterProfileId
      type: object
      properties:
        Id:
          type: string
          format: uuid
        EnterpriseId:
          type: string
          format: uuid
        AccountId:
          type: string
          format: uuid
          nullable: true
        AccountType:
          anyOf:
            - $ref: '#/components/schemas/AccountType'
          nullable: true
        ServiceId:
          type: string
          format: uuid
        ServiceOrderId:
          type: string
          format: uuid
        BillId:
          type: string
          format: uuid
          nullable: true
        AccountingCategoryId:
          type: string
          format: uuid
          nullable: true
        UnitCount:
          type: integer
          format: int32
        UnitAmount:
          $ref: '#/components/schemas/Amount'
        Amount:
          $ref: '#/components/schemas/Amount'
        OriginalAmount:
          $ref: '#/components/schemas/Amount'
        RevenueType:
          anyOf:
            - $ref: '#/components/schemas/RevenueType'
          nullable: true
        CreatorProfileId:
          type: string
          format: uuid
        UpdaterProfileId:
          type: string
          format: uuid
        CreatedUtc:
          minLength: 1
          type: string
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          format: date-time
        ConsumedUtc:
          minLength: 1
          type: string
          format: date-time
        CanceledUtc:
          type: string
          format: date-time
          nullable: true
        ClosedUtc:
          type: string
          format: date-time
          nullable: true
        StartUtc:
          type: string
          format: date-time
          nullable: true
        ClaimedUtc:
          type: string
          format: date-time
          nullable: true
        AccountingState:
          $ref: '#/components/schemas/AccountingState'
        Type:
          $ref: '#/components/schemas/OrderItemType'
        Data:
          $ref: '#/components/schemas/OrderItemData'
      additionalProperties: false
      x-schema-id: OrderItem
    OrderItemAdditionData:
      title: OrderItemAdditionData
      required:
        - Name
        - UnitAmount
        - UnitCount
      type: object
      properties:
        Name:
          minLength: 1
          type: string
        UnitCount:
          type: integer
          format: int32
        UnitAmount:
          $ref: '#/components/schemas/AmountParameters'
        AccountingCategoryId:
          type: string
          format: uuid
          nullable: true
        Category:
          $ref: '#/components/schemas/AccountingCategoryParameters'
        UnitCost:
          $ref: '#/components/schemas/CostParameters'
      additionalProperties: false
      x-schema-id: OrderItemAdditionData
    OrderItemData:
      title: OrderItemData
      type: object
      properties:
        Discriminator:
          anyOf:
            - $ref: '#/components/schemas/OrderItemDataDiscriminator'
          nullable: true
        Rebate:
          $ref: '#/components/schemas/OrderItemRebateData'
        Product:
          $ref: '#/components/schemas/OrderItemProductData'
      additionalProperties: false
      x-schema-id: OrderItemData
    OrderItemDataDiscriminator:
      enum:
        - Rebate
        - Product
      type: string
    OrderItemFilterParameters:
      title: OrderItemFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        OrderItemIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ServiceOrderIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ServiceIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        BillIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        CreatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        ConsumedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        CanceledUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        ClosedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        Currency:
          type: string
          format: currency
          nullable: true
        AccountingStates:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/AccountingState'
          nullable: true
        Types:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/OrderItemType'
          nullable: true
      additionalProperties: false
      x-schema-id: OrderItemFilterParameters
    OrderItemOld:
      title: OrderItemOld
      type: object
      properties:
        Id:
          type: string
          format: uuid
        AccountId:
          type: string
          format: uuid
        OrderId:
          type: string
          format: uuid
        BillId:
          type: string
          format: uuid
          nullable: true
        AccountingCategoryId:
          type: string
          format: uuid
          nullable: true
        UnitCount:
          type: integer
          format: int32
        UnitAmount:
          $ref: '#/components/schemas/Amount'
        Amount:
          $ref: '#/components/schemas/ExtendedAmount'
        OriginalAmount:
          $ref: '#/components/schemas/ExtendedAmount'
        RevenueType:
          type: string
          nullable: true
        CreatorProfileId:
          type: string
          format: uuid
        UpdaterProfileId:
          type: string
          format: uuid
        CreatedUtc:
          type: string
          format: date
          nullable: true
        UpdatedUtc:
          type: string
          format: date
          nullable: true
        ConsumedUtc:
          type: string
          format: date
          nullable: true
        CanceledUtc:
          type: string
          format: date
          nullable: true
        ClosedUtc:
          type: string
          format: date
          nullable: true
        StartUtc:
          type: string
          format: date
          nullable: true
        AccountingState:
          type: string
          nullable: true
        Data:
          title: Data
          properties:
            discriminator:
              $ref: '#/components/schemas/OrderItemTypeOld'
            value:
              oneOf:
                - $ref: '#/components/schemas/RebateOrderItemData'
                - $ref: '#/components/schemas/ProductOrderItemData'
      additionalProperties: false
      x-schema-id: OrderItemOld
    OrderItemProductData:
      title: OrderItemProductData
      type: object
      properties:
        ProductId:
          type: string
          format: uuid
          nullable: true
        AgeCategoryId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: OrderItemProductData
    OrderItemRebateData:
      title: OrderItemRebateData
      type: object
      properties:
        RebatedItemId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: OrderItemRebateData
    OrderItemResult:
      title: OrderItemResult
      required:
        - OrderItems
      type: object
      properties:
        OrderItems:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: OrderItemResult
    OrderItemType:
      enum:
        - CancellationFee
        - NightRebate
        - ProductOrderRebate
        - AdditionalExpenseRebate
        - Deposit
        - ExchangeRateDifference
        - CustomItem
        - ServiceCharge
        - CityTax
        - CityTaxDiscount
        - SpaceOrder
        - ProductOrder
        - Surcharge
      type: string
    OrderItemTypeOld:
      enum:
        - CancellationFee
        - Rebate
        - Deposit
        - ExchangeRateDifference
        - CustomItem
        - Surcharge
        - SurchargeDiscount
        - SpaceOrder
        - ProductOrder
        - Other
      type: string
    OrderNote:
      title: OrderNote
      type: object
      properties:
        Id:
          type: string
          format: uuid
        OrderId:
          type: string
          format: uuid
        Text:
          type: string
          nullable: true
        Type:
          anyOf:
            - $ref: '#/components/schemas/OrderNoteType'
          nullable: true
        CreatedUtc:
          type: string
          format: date-time
          nullable: true
        UpdatedUtc:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
      x-schema-id: OrderNote
    OrderNoteType:
      enum:
        - General
        - ChannelManager
      type: string
    Outlet:
      title: Outlet
      required:
        - CreatedUtc
        - EnterpriseId
        - Id
        - IsActive
        - Name
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          format: uuid
        IsActive:
          type: boolean
        Name:
          minLength: 1
          type: string
        EnterpriseId:
          type: string
          format: uuid
        CreatedUtc:
          minLength: 1
          type: string
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          format: date-time
      additionalProperties: false
      x-schema-id: Outlet
    OutletBill:
      title: OutletBill
      required:
        - ClosedUtc
        - EnterpriseId
        - Id
        - OutletId
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          format: uuid
        EnterpriseId:
          type: string
          format: uuid
        OutletId:
          type: string
          format: uuid
        Number:
          type: string
          nullable: true
        ClosedUtc:
          minLength: 1
          type: string
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          format: date-time
        Notes:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: OutletBill
    OutletBillParameters:
      title: OutletBillParameters
      required:
        - ClosedUtc
        - Items
        - Number
        - OutletId
      type: object
      properties:
        OutletId:
          type: string
          format: uuid
        Number:
          minLength: 1
          type: string
        ClosedUtc:
          minLength: 1
          type: string
        Items:
          type: array
          items:
            $ref: '#/components/schemas/OutletItemParameters'
        AccountId:
          type: string
          format: uuid
          nullable: true
        Notes:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: OutletBillParameters
    OutletFilterParameters:
      title: OutletFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        OutletIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
      additionalProperties: false
      x-schema-id: OutletFilterParameters
    OutletItem:
      title: OutletItem
      required:
        - BillId
        - ConsumedUtc
        - CreatedUtc
        - EnterpriseId
        - Id
        - Type
        - UnitCount
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          format: uuid
        EnterpriseId:
          type: string
          format: uuid
        BillId:
          type: string
          format: uuid
        AccountingCategoryId:
          type: string
          format: uuid
          nullable: true
        Type:
          minLength: 1
          type: string
        Name:
          type: string
          nullable: true
        UnitCount:
          type: integer
          format: int32
        UnitAmount:
          $ref: '#/components/schemas/Amount'
        CreatedUtc:
          minLength: 1
          type: string
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          format: date-time
        ConsumedUtc:
          minLength: 1
          type: string
          format: date-time
        ExternalIdentifier:
          type: string
          nullable: true
        Notes:
          type: string
          nullable: true
        UnitCost:
          $ref: '#/components/schemas/CurrencyValueOld'
      additionalProperties: false
      x-schema-id: OutletItem
    OutletItemParameters:
      title: OutletItemParameters
      required:
        - ConsumedUtc
        - Name
        - UnitAmount
        - UnitCount
      type: object
      properties:
        Name:
          minLength: 1
          type: string
        UnitCount:
          type: integer
          format: int32
        UnitAmount:
          $ref: '#/components/schemas/AmountParameters'
        ConsumedUtc:
          minLength: 1
          type: string
          format: date-time
        Type:
          type: string
          nullable: true
        ExternalIdentifier:
          maxLength: 255
          type: string
          nullable: true
        Notes:
          type: string
          nullable: true
        AccountingCategoryId:
          type: string
          format: uuid
          nullable: true
        AccountingCategory:
          $ref: '#/components/schemas/AccountingCategoryParameters'
        UnitCost:
          $ref: '#/components/schemas/CostParameters'
      additionalProperties: false
      x-schema-id: OutletItemParameters
    OutletItemResult:
      title: OutletItemResult
      type: object
      properties:
        OutletItems:
          type: array
          items:
            $ref: '#/components/schemas/OutletItem'
          nullable: true
        OutletBills:
          type: array
          items:
            $ref: '#/components/schemas/OutletBill'
          nullable: true
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: OutletItemResult
    OutletItemsFilterParameters:
      title: OutletItemsFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        Ids:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        StartUtc:
          type: string
          nullable: true
          deprecated: true
        EndUtc:
          type: string
          nullable: true
          deprecated: true
        TimeFilter:
          type: string
          nullable: true
          deprecated: true
        ConsumedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        ClosedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        Currency:
          type: string
          format: currency
          nullable: true
      additionalProperties: false
      x-schema-id: OutletItemsFilterParameters
    OutletResult:
      title: OutletResult
      required:
        - Outlets
      type: object
      properties:
        Outlets:
          type: array
          items:
            $ref: '#/components/schemas/Outlet'
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: OutletResult
    Parameters:
      title: Parameters
      required:
        - AccessToken
        - Client
        - ClientToken
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
      x-schema-id: Parameters
    ParentProductCategory:
      title: ParentProductCategory
      required:
        - Id
        - Names
      type: object
      properties:
        Id:
          type: string
          format: uuid
        Names:
          type: object
          additionalProperties:
            type: string
      additionalProperties: false
      x-schema-id: ParentProductCategory
    PassportScannerCommandData:
      title: PassportScannerCommandData
      type: object
      oneOf:
        - $ref: '#/components/schemas/PaymentTerminalCommandData'
        - $ref: '#/components/schemas/PrinterCommandData'
        - $ref: '#/components/schemas/KeyCutterCommandData'
        - $ref: '#/components/schemas/FiscalMachineCommandData'
        - $ref: '#/components/schemas/PassportScannerCommandData'
      properties:
        PassportScannerId:
          type: string
          nullable: true
        ReservationId:
          type: string
          format: uuid
          nullable: true
        CustomerId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: PassportScannerCommandData
    Payment:
      title: Payment
      required:
        - AccountingState
        - EnterpriseId
        - Id
        - State
      type: object
      properties:
        Id:
          type: string
          format: uuid
        EnterpriseId:
          type: string
          format: uuid
        AccountId:
          type: string
          format: uuid
          nullable: true
        AccountType:
          anyOf:
            - $ref: '#/components/schemas/AccountType'
          nullable: true
        BillId:
          type: string
          format: uuid
          nullable: true
        AccountingCategoryId:
          type: string
          format: uuid
          nullable: true
        Amount:
          $ref: '#/components/schemas/Amount'
        OriginalAmount:
          $ref: '#/components/schemas/Amount'
        Notes:
          type: string
          nullable: true
        SettlementId:
          type: string
          nullable: true
        ConsumedUtc:
          type: string
          format: date-time
          nullable: true
        ClosedUtc:
          type: string
          format: date-time
          nullable: true
        ChargedUtc:
          type: string
          format: date-time
          nullable: true
        CreatedUtc:
          type: string
          format: date-time
          nullable: true
        UpdatedUtc:
          type: string
          format: date-time
          nullable: true
        SettlementUtc:
          type: string
          format: date-time
          nullable: true
        AccountingState:
          $ref: '#/components/schemas/AccountingState'
        State:
          $ref: '#/components/schemas/PaymentState'
        Identifier:
          type: string
          nullable: true
        Kind:
          anyOf:
            - $ref: '#/components/schemas/PaymentKind'
          nullable: true
        Type:
          anyOf:
            - $ref: '#/components/schemas/PaymentDiscriminator'
          nullable: true
        Data:
          $ref: '#/components/schemas/PaymentData'
      additionalProperties: false
      x-schema-id: Payment
    PaymentCardPaymentData:
      title: PaymentCardPaymentData
      type: object
      properties:
        PaymentCardId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: PaymentCardPaymentData
    PaymentCardStorage:
      title: PaymentCardStorage
      type: object
      properties:
        PublicKey:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: PaymentCardStorage
    PaymentCreditCardData:
      title: PaymentCreditCardData
      type: object
      properties:
        CreditCardId:
          type: string
          format: uuid
          nullable: true
        Transaction:
          $ref: '#/components/schemas/CreditCardTransaction'
      additionalProperties: false
      x-schema-id: PaymentCreditCardData
    PaymentData:
      title: PaymentData
      type: object
      properties:
        Discriminator:
          anyOf:
            - $ref: '#/components/schemas/PaymentDataDiscriminator'
          nullable: true
          readOnly: true
        CreditCard:
          $ref: '#/components/schemas/PaymentCreditCardData'
        Invoice:
          $ref: '#/components/schemas/PaymentInvoiceData'
        External:
          $ref: '#/components/schemas/PaymentExternalData'
      additionalProperties: false
      x-schema-id: PaymentData
    PaymentDataDiscriminator:
      enum:
        - CreditCard
        - Invoice
        - External
      type: string
    PaymentDiscriminator:
      enum:
        - Payment
        - CreditCardPayment
        - AlternativePayment
        - CashPayment
        - InvoicePayment
        - ExternalPayment
      type: string
    PaymentExternalData:
      title: PaymentExternalData
      required:
        - Type
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/ExternalPaymentType'
        ExternalIdentifier:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: PaymentExternalData
    PaymentFilterParameters:
      title: PaymentFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        PaymentIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        BillIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        CreatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        ChargedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        ClosedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        SettlementUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        Currency:
          type: string
          format: currency
          nullable: true
        AccountingStates:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/AccountingState'
          nullable: true
        States:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/PaymentState'
          nullable: true
        Type:
          anyOf:
            - $ref: '#/components/schemas/PaymentDiscriminator'
          nullable: true
      additionalProperties: false
      x-schema-id: PaymentFilterParameters
    PaymentInvoiceData:
      title: PaymentInvoiceData
      type: object
      properties:
        InvoiceId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: PaymentInvoiceData
    PaymentItemOld:
      title: PaymentItemOld
      type: object
      properties:
        Id:
          type: string
          format: uuid
        AccountId:
          type: string
          format: uuid
        BillId:
          type: string
          format: uuid
          nullable: true
        AccountingCategoryId:
          type: string
          format: uuid
          nullable: true
        Amount:
          $ref: '#/components/schemas/ExtendedAmount'
        OriginalAmount:
          $ref: '#/components/schemas/ExtendedAmount'
        AmountDefault:
          $ref: '#/components/schemas/ExtendedAmount'
        Notes:
          type: string
          nullable: true
        SettlementId:
          type: string
          nullable: true
        ConsumedUtc:
          type: string
          nullable: true
        ClosedUtc:
          type: string
          nullable: true
        AccountingState:
          type: string
          nullable: true
        State:
          type: string
          nullable: true
        Identifier:
          type: string
          nullable: true
        Data:
          title: Data
          properties:
            discriminator:
              $ref: '#/components/schemas/PaymentType'
            value:
              oneOf:
                - $ref: '#/components/schemas/PaymentCardPaymentData'
                - $ref: '#/components/schemas/InvoicePaymentData'
      additionalProperties: false
      x-schema-id: PaymentItemOld
    PaymentKind:
      enum:
        - Payment
        - Chargeback
        - ChargebackReversal
        - Refund
      type: string
    PaymentRefundParameters:
      title: PaymentRefundParameters
      required:
        - AccessToken
        - AccountId
        - Client
        - ClientToken
        - PaymentId
        - Reason
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        EnterpriseId:
          type: string
          format: uuid
          nullable: true
        PaymentId:
          type: string
          format: uuid
        AccountId:
          type: string
          format: uuid
        Reason:
          minLength: 1
          type: string
        ValueToRefund:
          type: number
          format: double
          nullable: true
      additionalProperties: false
      x-schema-id: PaymentRefundParameters
    PaymentRefundResult:
      title: PaymentRefundResult
      required:
        - PaymentId
        - RefundId
        - Type
      type: object
      properties:
        PaymentId:
          type: string
          format: uuid
        RefundId:
          type: string
          format: uuid
        Type:
          $ref: '#/components/schemas/RefundType'
        Amount:
          $ref: '#/components/schemas/CurrencyValue'
      additionalProperties: false
      x-schema-id: PaymentRefundResult
    PaymentRequest:
      title: PaymentRequest
      required:
        - AccountId
        - Amount
        - CreatedUtc
        - Description
        - EnterpriseId
        - ExpirationUtc
        - Id
        - Reason
        - State
        - Type
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          format: uuid
        EnterpriseId:
          type: string
          format: uuid
        AccountId:
          type: string
          format: uuid
        CustomerId:
          type: string
          format: uuid
          nullable: true
          deprecated: true
        ReservationGroupId:
          type: string
          format: uuid
          nullable: true
        State:
          $ref: '#/components/schemas/PaymentRequestState'
        Amount:
          $ref: '#/components/schemas/Amount'
        Type:
          $ref: '#/components/schemas/PaymentRequestType'
        Reason:
          $ref: '#/components/schemas/PaymentRequestReason'
        ExpirationUtc:
          minLength: 1
          type: string
          format: date-time
        Description:
          minLength: 1
          type: string
        Notes:
          type: string
          nullable: true
        CreatedUtc:
          minLength: 1
          type: string
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          format: date-time
      additionalProperties: false
      x-schema-id: PaymentRequest
    PaymentRequestAddParameters:
      title: PaymentRequestAddParameters
      required:
        - AccountId
        - Amount
        - Description
        - ExpirationUtc
        - Reason
        - Type
      type: object
      properties:
        AccountId:
          type: string
          format: uuid
        Amount:
          $ref: '#/components/schemas/CurrencyValue'
        Type:
          $ref: '#/components/schemas/PaymentRequestType'
        Reason:
          $ref: '#/components/schemas/PaymentRequestReason'
        ExpirationUtc:
          minLength: 1
          type: string
          format: date-time
        Description:
          maxLength: 1000
          minLength: 1
          type: string
        Notes:
          maxLength: 1000
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: PaymentRequestAddParameters
    PaymentRequestFilterParameters:
      title: PaymentRequestFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        PaymentRequestIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        AccountIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        States:
          type: array
          items:
            $ref: '#/components/schemas/PaymentRequestState'
          nullable: true
      additionalProperties: false
      x-schema-id: PaymentRequestFilterParameters
    PaymentRequestReason:
      enum:
        - Other
        - PaymentCardMissing
        - PaymentCardDeclined
        - Deposit
        - Prepayment
        - Fee
      type: string
    PaymentRequestResult:
      title: PaymentRequestResult
      required:
        - PaymentRequests
      type: object
      properties:
        PaymentRequests:
          type: array
          items:
            $ref: '#/components/schemas/PaymentRequest'
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: PaymentRequestResult
    PaymentRequestState:
      enum:
        - Pending
        - Completed
        - Canceled
        - Expired
      type: string
    PaymentRequestType:
      enum:
        - Payment
        - Preauthorization
      type: string
    PaymentResult:
      title: PaymentResult
      required:
        - Payments
      type: object
      properties:
        Payments:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/Payment'
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: PaymentResult
    PaymentState:
      enum:
        - Charged
        - Canceled
        - Pending
        - Failed
        - Verifying
      type: string
    PaymentTerminalCommandData:
      title: PaymentTerminalCommandData
      type: object
      oneOf:
        - $ref: '#/components/schemas/PaymentTerminalCommandData'
        - title: PrinterCommandData
          type: object
          oneOf:
            - $ref: '#/components/schemas/PaymentTerminalCommandData'
            - $ref: '#/components/schemas/PrinterCommandData'
            - title: KeyCutterCommandData
              type: object
              oneOf:
                - $ref: '#/components/schemas/PaymentTerminalCommandData'
                - $ref: '#/components/schemas/PrinterCommandData'
                - $ref: '#/components/schemas/KeyCutterCommandData'
                - title: FiscalMachineCommandData
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/PaymentTerminalCommandData'
                    - $ref: '#/components/schemas/PrinterCommandData'
                    - $ref: '#/components/schemas/KeyCutterCommandData'
                    - $ref: '#/components/schemas/FiscalMachineCommandData'
                    - title: PassportScannerCommandData
                      type: object
                      oneOf:
                        - $ref: '#/components/schemas/PaymentTerminalCommandData'
                        - $ref: '#/components/schemas/PrinterCommandData'
                        - $ref: '#/components/schemas/KeyCutterCommandData'
                        - $ref: '#/components/schemas/FiscalMachineCommandData'
                        - $ref: '#/components/schemas/PassportScannerCommandData'
                      properties:
                        PassportScannerId:
                          type: string
                          nullable: true
                        ReservationId:
                          type: string
                          format: uuid
                          nullable: true
                        CustomerId:
                          type: string
                          format: uuid
                          nullable: true
                      additionalProperties: false
                      x-schema-id: PassportScannerCommandData
                  properties:
                    FiscalMachineId:
                      type: string
                      nullable: true
                    ApiUrl:
                      type: string
                      nullable: true
                    FiscalMachineData:
                      type: string
                      nullable: true
                    Bill:
                      $ref: '#/components/schemas/Bill'
                    TaxIdentifier:
                      type: string
                      nullable: true
                    BillFiscalMachineData:
                      title: BillFiscalMachineData
                      properties:
                        discriminator:
                          $ref: '#/components/schemas/BillFiscalMachineDataDiscriminator'
                        value:
                          oneOf:
                            - $ref: '#/components/schemas/ItalianFiscalMachineData'
                    PayloadData:
                      title: PayloadData
                      properties:
                        discriminator:
                          $ref: '#/components/schemas/FiscalMachinePayloadDataDiscriminator'
                        value:
                          oneOf:
                            - type: string
                  additionalProperties: false
                  x-schema-id: FiscalMachineCommandData
                - title: PassportScannerCommandData
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/PaymentTerminalCommandData'
                    - $ref: '#/components/schemas/PrinterCommandData'
                    - $ref: '#/components/schemas/KeyCutterCommandData'
                    - $ref: '#/components/schemas/FiscalMachineCommandData'
                    - $ref: '#/components/schemas/PassportScannerCommandData'
                  properties:
                    PassportScannerId:
                      type: string
                      nullable: true
                    ReservationId:
                      type: string
                      format: uuid
                      nullable: true
                    CustomerId:
                      type: string
                      format: uuid
                      nullable: true
                  additionalProperties: false
                  x-schema-id: PassportScannerCommandData
              properties:
                KeyCutterId:
                  type: string
                  nullable: true
                ApiUrl:
                  type: string
                  nullable: true
                UserName:
                  type: string
                  nullable: true
                Password:
                  type: string
                  nullable: true
                KeyCutterData:
                  type: string
                  nullable: true
                KeyCount:
                  type: integer
                  format: int32
                LockIds:
                  type: array
                  items:
                    type: string
                  nullable: true
                StartUtc:
                  type: string
                  nullable: true
                EndUtc:
                  type: string
                  nullable: true
                FirstName:
                  type: string
                  nullable: true
                LastName:
                  type: string
                  nullable: true
                Telephone:
                  type: string
                  nullable: true
                Email:
                  type: string
                  nullable: true
                ReservationId:
                  type: string
                  format: uuid
                  nullable: true
                ReservationNumber:
                  type: string
                  nullable: true
                KeyMode:
                  type: string
                  nullable: true
                ExternalRequestIdentifier:
                  type: string
                  nullable: true
              additionalProperties: false
              x-schema-id: KeyCutterCommandData
            - title: FiscalMachineCommandData
              type: object
              oneOf:
                - $ref: '#/components/schemas/PaymentTerminalCommandData'
                - $ref: '#/components/schemas/PrinterCommandData'
                - $ref: '#/components/schemas/KeyCutterCommandData'
                - $ref: '#/components/schemas/FiscalMachineCommandData'
                - title: PassportScannerCommandData
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/PaymentTerminalCommandData'
                    - $ref: '#/components/schemas/PrinterCommandData'
                    - $ref: '#/components/schemas/KeyCutterCommandData'
                    - $ref: '#/components/schemas/FiscalMachineCommandData'
                    - $ref: '#/components/schemas/PassportScannerCommandData'
                  properties:
                    PassportScannerId:
                      type: string
                      nullable: true
                    ReservationId:
                      type: string
                      format: uuid
                      nullable: true
                    CustomerId:
                      type: string
                      format: uuid
                      nullable: true
                  additionalProperties: false
                  x-schema-id: PassportScannerCommandData
              properties:
                FiscalMachineId:
                  type: string
                  nullable: true
                ApiUrl:
                  type: string
                  nullable: true
                FiscalMachineData:
                  type: string
                  nullable: true
                Bill:
                  $ref: '#/components/schemas/Bill'
                TaxIdentifier:
                  type: string
                  nullable: true
                BillFiscalMachineData:
                  title: BillFiscalMachineData
                  properties:
                    discriminator:
                      $ref: '#/components/schemas/BillFiscalMachineDataDiscriminator'
                    value:
                      oneOf:
                        - $ref: '#/components/schemas/ItalianFiscalMachineData'
                PayloadData:
                  title: PayloadData
                  properties:
                    discriminator:
                      $ref: '#/components/schemas/FiscalMachinePayloadDataDiscriminator'
                    value:
                      oneOf:
                        - type: string
              additionalProperties: false
              x-schema-id: FiscalMachineCommandData
            - title: PassportScannerCommandData
              type: object
              oneOf:
                - $ref: '#/components/schemas/PaymentTerminalCommandData'
                - $ref: '#/components/schemas/PrinterCommandData'
                - $ref: '#/components/schemas/KeyCutterCommandData'
                - $ref: '#/components/schemas/FiscalMachineCommandData'
                - $ref: '#/components/schemas/PassportScannerCommandData'
              properties:
                PassportScannerId:
                  type: string
                  nullable: true
                ReservationId:
                  type: string
                  format: uuid
                  nullable: true
                CustomerId:
                  type: string
                  format: uuid
                  nullable: true
              additionalProperties: false
              x-schema-id: PassportScannerCommandData
          properties:
            CopyCount:
              type: integer
              format: int32
            FileType:
              type: string
              nullable: true
            FileData:
              type: string
              nullable: true
            PrinterName:
              type: string
              nullable: true
            PrinterDriverName:
              type: string
              nullable: true
            PrinterPortName:
              type: string
              nullable: true
          additionalProperties: false
          x-schema-id: PrinterCommandData
        - title: KeyCutterCommandData
          type: object
          oneOf:
            - $ref: '#/components/schemas/PaymentTerminalCommandData'
            - $ref: '#/components/schemas/PrinterCommandData'
            - $ref: '#/components/schemas/KeyCutterCommandData'
            - title: FiscalMachineCommandData
              type: object
              oneOf:
                - $ref: '#/components/schemas/PaymentTerminalCommandData'
                - $ref: '#/components/schemas/PrinterCommandData'
                - $ref: '#/components/schemas/KeyCutterCommandData'
                - $ref: '#/components/schemas/FiscalMachineCommandData'
                - title: PassportScannerCommandData
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/PaymentTerminalCommandData'
                    - $ref: '#/components/schemas/PrinterCommandData'
                    - $ref: '#/components/schemas/KeyCutterCommandData'
                    - $ref: '#/components/schemas/FiscalMachineCommandData'
                    - $ref: '#/components/schemas/PassportScannerCommandData'
                  properties:
                    PassportScannerId:
                      type: string
                      nullable: true
                    ReservationId:
                      type: string
                      format: uuid
                      nullable: true
                    CustomerId:
                      type: string
                      format: uuid
                      nullable: true
                  additionalProperties: false
                  x-schema-id: PassportScannerCommandData
              properties:
                FiscalMachineId:
                  type: string
                  nullable: true
                ApiUrl:
                  type: string
                  nullable: true
                FiscalMachineData:
                  type: string
                  nullable: true
                Bill:
                  $ref: '#/components/schemas/Bill'
                TaxIdentifier:
                  type: string
                  nullable: true
                BillFiscalMachineData:
                  title: BillFiscalMachineData
                  properties:
                    discriminator:
                      $ref: '#/components/schemas/BillFiscalMachineDataDiscriminator'
                    value:
                      oneOf:
                        - $ref: '#/components/schemas/ItalianFiscalMachineData'
                PayloadData:
                  title: PayloadData
                  properties:
                    discriminator:
                      $ref: '#/components/schemas/FiscalMachinePayloadDataDiscriminator'
                    value:
                      oneOf:
                        - type: string
              additionalProperties: false
              x-schema-id: FiscalMachineCommandData
            - title: PassportScannerCommandData
              type: object
              oneOf:
                - $ref: '#/components/schemas/PaymentTerminalCommandData'
                - $ref: '#/components/schemas/PrinterCommandData'
                - $ref: '#/components/schemas/KeyCutterCommandData'
                - $ref: '#/components/schemas/FiscalMachineCommandData'
                - $ref: '#/components/schemas/PassportScannerCommandData'
              properties:
                PassportScannerId:
                  type: string
                  nullable: true
                ReservationId:
                  type: string
                  format: uuid
                  nullable: true
                CustomerId:
                  type: string
                  format: uuid
                  nullable: true
              additionalProperties: false
              x-schema-id: PassportScannerCommandData
          properties:
            KeyCutterId:
              type: string
              nullable: true
            ApiUrl:
              type: string
              nullable: true
            UserName:
              type: string
              nullable: true
            Password:
              type: string
              nullable: true
            KeyCutterData:
              type: string
              nullable: true
            KeyCount:
              type: integer
              format: int32
            LockIds:
              type: array
              items:
                type: string
              nullable: true
            StartUtc:
              type: string
              nullable: true
            EndUtc:
              type: string
              nullable: true
            FirstName:
              type: string
              nullable: true
            LastName:
              type: string
              nullable: true
            Telephone:
              type: string
              nullable: true
            Email:
              type: string
              nullable: true
            ReservationId:
              type: string
              format: uuid
              nullable: true
            ReservationNumber:
              type: string
              nullable: true
            KeyMode:
              type: string
              nullable: true
            ExternalRequestIdentifier:
              type: string
              nullable: true
          additionalProperties: false
          x-schema-id: KeyCutterCommandData
        - title: FiscalMachineCommandData
          type: object
          oneOf:
            - $ref: '#/components/schemas/PaymentTerminalCommandData'
            - $ref: '#/components/schemas/PrinterCommandData'
            - $ref: '#/components/schemas/KeyCutterCommandData'
            - $ref: '#/components/schemas/FiscalMachineCommandData'
            - title: PassportScannerCommandData
              type: object
              oneOf:
                - $ref: '#/components/schemas/PaymentTerminalCommandData'
                - $ref: '#/components/schemas/PrinterCommandData'
                - $ref: '#/components/schemas/KeyCutterCommandData'
                - $ref: '#/components/schemas/FiscalMachineCommandData'
                - $ref: '#/components/schemas/PassportScannerCommandData'
              properties:
                PassportScannerId:
                  type: string
                  nullable: true
                ReservationId:
                  type: string
                  format: uuid
                  nullable: true
                CustomerId:
                  type: string
                  format: uuid
                  nullable: true
              additionalProperties: false
              x-schema-id: PassportScannerCommandData
          properties:
            FiscalMachineId:
              type: string
              nullable: true
            ApiUrl:
              type: string
              nullable: true
            FiscalMachineData:
              type: string
              nullable: true
            Bill:
              $ref: '#/components/schemas/Bill'
            TaxIdentifier:
              type: string
              nullable: true
            BillFiscalMachineData:
              title: BillFiscalMachineData
              properties:
                discriminator:
                  $ref: '#/components/schemas/BillFiscalMachineDataDiscriminator'
                value:
                  oneOf:
                    - $ref: '#/components/schemas/ItalianFiscalMachineData'
            PayloadData:
              title: PayloadData
              properties:
                discriminator:
                  $ref: '#/components/schemas/FiscalMachinePayloadDataDiscriminator'
                value:
                  oneOf:
                    - type: string
          additionalProperties: false
          x-schema-id: FiscalMachineCommandData
        - title: PassportScannerCommandData
          type: object
          oneOf:
            - $ref: '#/components/schemas/PaymentTerminalCommandData'
            - $ref: '#/components/schemas/PrinterCommandData'
            - $ref: '#/components/schemas/KeyCutterCommandData'
            - $ref: '#/components/schemas/FiscalMachineCommandData'
            - $ref: '#/components/schemas/PassportScannerCommandData'
          properties:
            PassportScannerId:
              type: string
              nullable: true
            ReservationId:
              type: string
              format: uuid
              nullable: true
            CustomerId:
              type: string
              format: uuid
              nullable: true
          additionalProperties: false
          x-schema-id: PassportScannerCommandData
      properties:
        PaymentTerminalId:
          type: string
          nullable: true
        CustomerId:
          type: string
          format: uuid
        FullName:
          type: string
          nullable: true
        BillId:
          type: string
          format: uuid
          nullable: true
        PaymentId:
          type: string
          format: uuid
          nullable: true
        PreauthorizationId:
          type: string
          format: uuid
          nullable: true
        Amount:
          $ref: '#/components/schemas/ExtendedAmount'
        Fee:
          $ref: '#/components/schemas/ExtendedAmount'
        PaymentTerminalData:
          type: string
          nullable: true
        PayworksData:
          $ref: '#/components/schemas/PayworksData'
      additionalProperties: false
      x-schema-id: PaymentTerminalCommandData
    PaymentType:
      enum:
        - CreditCard
        - Invoice
        - Cash
        - Unspecified
        - BadDebts
        - WireTransfer
        - ExchangeRateDifference
        - ExchangeRoundingDifference
        - BankCharges
        - Cheque
        - Other
      type: string
    PayworksData:
      title: PayworksData
      type: object
      properties:
        MerchantIdentifier:
          type: string
          nullable: true
        MerchantSecretKey:
          type: string
          nullable: true
        ApiUrl:
          type: string
          nullable: true
        Descriptor:
          type: string
          nullable: true
        AcceptedCreditCardTypes:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
      x-schema-id: PayworksData
    PerUnitPriceParameters:
      title: PerUnitPriceParameters
      type: object
      properties:
        Index:
          type: integer
          format: int32
        Amount:
          $ref: '#/components/schemas/AmountParameters'
      additionalProperties: false
      x-schema-id: PerUnitPriceParameters
    PerUnitPriceParametersIEnumerableUpdateValue:
      title: UpdateValue`1
      type: object
      properties:
        Value:
          type: array
          items:
            $ref: '#/components/schemas/PerUnitPriceParameters'
          nullable: true
      additionalProperties: false
      x-schema-id: UpdateValue`1
    PersonCount:
      title: PersonCount
      type: object
      properties:
        AgeCategoryId:
          type: string
          format: uuid
        Count:
          type: integer
          format: int32
      additionalProperties: false
      x-schema-id: PersonCount
    PersonCountParameters:
      title: PersonCountParameters
      type: object
      properties:
        AgeCategoryId:
          type: string
          format: uuid
        Count:
          type: integer
          format: int32
      additionalProperties: false
      x-schema-id: PersonCountParameters
    PersonCountParametersIEnumerableUpdateValue:
      title: UpdateValue`1
      type: object
      properties:
        Value:
          type: array
          items:
            $ref: '#/components/schemas/PersonCountParameters'
          nullable: true
      additionalProperties: false
      x-schema-id: UpdateValue`1
    PersonData:
      type: object
      additionalProperties: false
    PickupDistribution:
      enum:
        - AllInOneGroup
        - IndividualGroups
      type: string
    Preauthorization:
      title: Preauthorization
      type: object
      properties:
        Id:
          type: string
          format: uuid
        CustomerId:
          type: string
          format: uuid
        CreditCardId:
          type: string
          format: uuid
          nullable: true
        Amount:
          $ref: '#/components/schemas/Amount'
        State:
          type: string
          nullable: true
        Code:
          type: string
          nullable: true
        IsActive:
          type: boolean
      additionalProperties: false
      x-schema-id: Preauthorization
    PreauthorizationResult:
      title: PreauthorizationResult
      type: object
      properties:
        Preauthorizations:
          type: array
          items:
            $ref: '#/components/schemas/Preauthorization'
          nullable: true
      additionalProperties: false
      x-schema-id: PreauthorizationResult
    PricingMode:
      enum:
        - Gross
        - Net
      type: string
    PrinterCommandData:
      title: PrinterCommandData
      type: object
      oneOf:
        - $ref: '#/components/schemas/PaymentTerminalCommandData'
        - $ref: '#/components/schemas/PrinterCommandData'
        - title: KeyCutterCommandData
          type: object
          oneOf:
            - $ref: '#/components/schemas/PaymentTerminalCommandData'
            - $ref: '#/components/schemas/PrinterCommandData'
            - $ref: '#/components/schemas/KeyCutterCommandData'
            - title: FiscalMachineCommandData
              type: object
              oneOf:
                - $ref: '#/components/schemas/PaymentTerminalCommandData'
                - $ref: '#/components/schemas/PrinterCommandData'
                - $ref: '#/components/schemas/KeyCutterCommandData'
                - $ref: '#/components/schemas/FiscalMachineCommandData'
                - title: PassportScannerCommandData
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/PaymentTerminalCommandData'
                    - $ref: '#/components/schemas/PrinterCommandData'
                    - $ref: '#/components/schemas/KeyCutterCommandData'
                    - $ref: '#/components/schemas/FiscalMachineCommandData'
                    - $ref: '#/components/schemas/PassportScannerCommandData'
                  properties:
                    PassportScannerId:
                      type: string
                      nullable: true
                    ReservationId:
                      type: string
                      format: uuid
                      nullable: true
                    CustomerId:
                      type: string
                      format: uuid
                      nullable: true
                  additionalProperties: false
                  x-schema-id: PassportScannerCommandData
              properties:
                FiscalMachineId:
                  type: string
                  nullable: true
                ApiUrl:
                  type: string
                  nullable: true
                FiscalMachineData:
                  type: string
                  nullable: true
                Bill:
                  $ref: '#/components/schemas/Bill'
                TaxIdentifier:
                  type: string
                  nullable: true
                BillFiscalMachineData:
                  title: BillFiscalMachineData
                  properties:
                    discriminator:
                      $ref: '#/components/schemas/BillFiscalMachineDataDiscriminator'
                    value:
                      oneOf:
                        - $ref: '#/components/schemas/ItalianFiscalMachineData'
                PayloadData:
                  title: PayloadData
                  properties:
                    discriminator:
                      $ref: '#/components/schemas/FiscalMachinePayloadDataDiscriminator'
                    value:
                      oneOf:
                        - type: string
              additionalProperties: false
              x-schema-id: FiscalMachineCommandData
            - title: PassportScannerCommandData
              type: object
              oneOf:
                - $ref: '#/components/schemas/PaymentTerminalCommandData'
                - $ref: '#/components/schemas/PrinterCommandData'
                - $ref: '#/components/schemas/KeyCutterCommandData'
                - $ref: '#/components/schemas/FiscalMachineCommandData'
                - $ref: '#/components/schemas/PassportScannerCommandData'
              properties:
                PassportScannerId:
                  type: string
                  nullable: true
                ReservationId:
                  type: string
                  format: uuid
                  nullable: true
                CustomerId:
                  type: string
                  format: uuid
                  nullable: true
              additionalProperties: false
              x-schema-id: PassportScannerCommandData
          properties:
            KeyCutterId:
              type: string
              nullable: true
            ApiUrl:
              type: string
              nullable: true
            UserName:
              type: string
              nullable: true
            Password:
              type: string
              nullable: true
            KeyCutterData:
              type: string
              nullable: true
            KeyCount:
              type: integer
              format: int32
            LockIds:
              type: array
              items:
                type: string
              nullable: true
            StartUtc:
              type: string
              nullable: true
            EndUtc:
              type: string
              nullable: true
            FirstName:
              type: string
              nullable: true
            LastName:
              type: string
              nullable: true
            Telephone:
              type: string
              nullable: true
            Email:
              type: string
              nullable: true
            ReservationId:
              type: string
              format: uuid
              nullable: true
            ReservationNumber:
              type: string
              nullable: true
            KeyMode:
              type: string
              nullable: true
            ExternalRequestIdentifier:
              type: string
              nullable: true
          additionalProperties: false
          x-schema-id: KeyCutterCommandData
        - title: FiscalMachineCommandData
          type: object
          oneOf:
            - $ref: '#/components/schemas/PaymentTerminalCommandData'
            - $ref: '#/components/schemas/PrinterCommandData'
            - $ref: '#/components/schemas/KeyCutterCommandData'
            - $ref: '#/components/schemas/FiscalMachineCommandData'
            - title: PassportScannerCommandData
              type: object
              oneOf:
                - $ref: '#/components/schemas/PaymentTerminalCommandData'
                - $ref: '#/components/schemas/PrinterCommandData'
                - $ref: '#/components/schemas/KeyCutterCommandData'
                - $ref: '#/components/schemas/FiscalMachineCommandData'
                - $ref: '#/components/schemas/PassportScannerCommandData'
              properties:
                PassportScannerId:
                  type: string
                  nullable: true
                ReservationId:
                  type: string
                  format: uuid
                  nullable: true
                CustomerId:
                  type: string
                  format: uuid
                  nullable: true
              additionalProperties: false
              x-schema-id: PassportScannerCommandData
          properties:
            FiscalMachineId:
              type: string
              nullable: true
            ApiUrl:
              type: string
              nullable: true
            FiscalMachineData:
              type: string
              nullable: true
            Bill:
              $ref: '#/components/schemas/Bill'
            TaxIdentifier:
              type: string
              nullable: true
            BillFiscalMachineData:
              title: BillFiscalMachineData
              properties:
                discriminator:
                  $ref: '#/components/schemas/BillFiscalMachineDataDiscriminator'
                value:
                  oneOf:
                    - $ref: '#/components/schemas/ItalianFiscalMachineData'
            PayloadData:
              title: PayloadData
              properties:
                discriminator:
                  $ref: '#/components/schemas/FiscalMachinePayloadDataDiscriminator'
                value:
                  oneOf:
                    - type: string
          additionalProperties: false
          x-schema-id: FiscalMachineCommandData
        - title: PassportScannerCommandData
          type: object
          oneOf:
            - $ref: '#/components/schemas/PaymentTerminalCommandData'
            - $ref: '#/components/schemas/PrinterCommandData'
            - $ref: '#/components/schemas/KeyCutterCommandData'
            - $ref: '#/components/schemas/FiscalMachineCommandData'
            - $ref: '#/components/schemas/PassportScannerCommandData'
          properties:
            PassportScannerId:
              type: string
              nullable: true
            ReservationId:
              type: string
              format: uuid
              nullable: true
            CustomerId:
              type: string
              format: uuid
              nullable: true
          additionalProperties: false
          x-schema-id: PassportScannerCommandData
      properties:
        CopyCount:
          type: integer
          format: int32
        FileType:
          type: string
          nullable: true
        FileData:
          type: string
          nullable: true
        PrinterName:
          type: string
          nullable: true
        PrinterDriverName:
          type: string
          nullable: true
        PrinterPortName:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: PrinterCommandData
    PrinterCommandParameters:
      title: PrinterCommandParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - CopyCount
        - Data
        - PrinterId
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        EnterpriseId:
          type: string
          format: uuid
          nullable: true
        PrinterId:
          type: string
          format: uuid
        Data:
          minLength: 1
          type: string
        CopyCount:
          type: integer
          format: int32
      additionalProperties: false
      x-schema-id: PrinterCommandParameters
    Product:
      title: Product
      required:
        - CreatedUtc
        - Id
        - IsActive
        - ServiceId
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          format: uuid
        ServiceId:
          type: string
          format: uuid
        CategoryId:
          type: string
          format: uuid
          nullable: true
        AccountingCategoryId:
          type: string
          format: uuid
          nullable: true
        IsActive:
          type: boolean
        IsDefault:
          type: boolean
        Name:
          type: string
          nullable: true
        ExternalName:
          type: string
          nullable: true
        ShortName:
          type: string
          nullable: true
        Description:
          type: string
          nullable: true
        Charging:
          type: string
          nullable: true
          deprecated: true
        ChargingMode:
          type: string
          nullable: true
        Posting:
          type: string
          nullable: true
          deprecated: true
        PostingMode:
          type: string
          nullable: true
        Options:
          $ref: '#/components/schemas/ProductOptions'
        Promotions:
          $ref: '#/components/schemas/Promotions'
        Classifications:
          $ref: '#/components/schemas/ProductClassifications'
        Price:
          $ref: '#/components/schemas/ExtendedAmount'
        Pricing:
          title: Pricing
          properties:
            discriminator:
              $ref: '#/components/schemas/ProductPricing'
            value:
              oneOf:
                - $ref: '#/components/schemas/ExtendedAmount'
                - $ref: '#/components/schemas/RelativeProductPrice'
        ImageIds:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        Ordering:
          type: integer
          format: int32
        ExternalIdentifier:
          maxLength: 255
          type: string
          nullable: true
        CreatedUtc:
          minLength: 1
          type: string
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          format: date-time
      additionalProperties: false
      x-schema-id: Product
    ProductCategory:
      title: ProductCategory
      required:
        - CreatedUtc
        - Id
        - Names
        - Ordering
        - ServiceId
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          format: uuid
        ServiceId:
          type: string
          format: uuid
        Names:
          type: object
          additionalProperties:
            type: string
        ShortNames:
          type: object
          additionalProperties:
            type: string
          nullable: true
        Descriptions:
          type: object
          additionalProperties:
            type: string
          nullable: true
        ParentProductCategory:
          $ref: '#/components/schemas/ParentProductCategory'
        UpdatedUtc:
          minLength: 1
          type: string
          format: date-time
        CreatedUtc:
          minLength: 1
          type: string
          format: date-time
        Ordering:
          type: integer
          format: int32
      additionalProperties: false
      x-schema-id: ProductCategory
    ProductCategoryFilterParameters:
      title: ProductCategoryFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ProductCategoryIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ServiceIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
      additionalProperties: false
      x-schema-id: ProductCategoryFilterParameters
    ProductCategoryResult:
      title: ProductCategoryResult
      required:
        - ProductCategories
      type: object
      properties:
        ProductCategories:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/ProductCategory'
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ProductCategoryResult
    ProductClassifications:
      title: ProductClassifications
      type: object
      properties:
        Food:
          type: boolean
        Beverage:
          type: boolean
        Wellness:
          type: boolean
        CityTax:
          type: boolean
      additionalProperties: false
      x-schema-id: ProductClassifications
    ProductDeleteParameters:
      title: ProductDeleteParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - ProductIds
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        EnterpriseId:
          type: string
          format: uuid
          nullable: true
        ProductIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
      additionalProperties: false
      x-schema-id: ProductDeleteParameters
    ProductFilterParameters:
      title: ProductFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
        - ServiceIds
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ProductIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ServiceIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
        ServiceId:
          type: string
          format: uuid
          nullable: true
          deprecated: true
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
      additionalProperties: false
      x-schema-id: ProductFilterParameters
    ProductOptions:
      title: ProductOptions
      type: object
      properties:
        BillAsPackage:
          type: boolean
      additionalProperties: false
      x-schema-id: ProductOptions
    ProductOrderAdditionData:
      title: ProductOrderAdditionData
      required:
        - ProductId
      type: object
      properties:
        ProductId:
          type: string
          format: uuid
        Count:
          type: integer
          format: int32
          nullable: true
        UnitAmount:
          $ref: '#/components/schemas/AmountParameters'
        StartUtc:
          type: string
          format: date-time
          nullable: true
        EndUtc:
          type: string
          format: date-time
          nullable: true
        UnitCost:
          $ref: '#/components/schemas/CostParameters'
      additionalProperties: false
      x-schema-id: ProductOrderAdditionData
    ProductOrderItemData:
      title: ProductOrderItemData
      type: object
      properties:
        ProductId:
          type: string
          format: uuid
          nullable: true
        AgeCategoryId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ProductOrderItemData
    ProductPricing:
      enum:
        - Absolute
        - Relative
      type: string
    ProductResult:
      title: ProductResult
      type: object
      properties:
        Products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
          nullable: true
        CustomerProducts:
          type: array
          items:
            $ref: '#/components/schemas/Product'
          nullable: true
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ProductResult
    ProductServiceOrderFilterParameters:
      title: ProductServiceOrderFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
        - ServiceIds
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ProductServiceOrderIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ServiceIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
        AccountIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        States:
          type: array
          items:
            $ref: '#/components/schemas/ServiceOrderState'
          nullable: true
      additionalProperties: false
      x-schema-id: ProductServiceOrderFilterParameters
    ProductServiceOrderResult:
      title: ProductServiceOrderResult
      required:
        - ProductServiceOrders
      type: object
      properties:
        ProductServiceOrders:
          type: array
          items:
            $ref: '#/components/schemas/ServiceOrder'
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ProductServiceOrderResult
    ProfileData:
      title: ProfileData
      type: object
      properties:
        Discriminator:
          anyOf:
            - $ref: '#/components/schemas/ProfileDataDiscriminator'
          nullable: true
        EnterpriseProfile:
          $ref: '#/components/schemas/EnterpriseProfileData'
      additionalProperties: false
      x-schema-id: ProfileData
    ProfileDataDiscriminator:
      enum:
        - Personal
        - Enterprise
        - Platform
        - Static
        - Integration
      type: string
    Promotions:
      title: Promotions
      type: object
      properties:
        BeforeCheckIn:
          type: boolean
        AfterCheckIn:
          type: boolean
        DuringStay:
          type: boolean
        BeforeCheckOut:
          type: boolean
        AfterCheckOut:
          type: boolean
        DuringCheckOut:
          type: boolean
      additionalProperties: false
      x-schema-id: Promotions
    Rate:
      title: Rate
      type: object
      properties:
        Id:
          type: string
          format: uuid
        GroupId:
          type: string
          format: uuid
        ServiceId:
          type: string
          format: uuid
        BaseRateId:
          type: string
          format: uuid
          nullable: true
        BusinessSegmentId:
          type: string
          format: uuid
          nullable: true
        IsActive:
          type: boolean
        IsEnabled:
          type: boolean
        IsPublic:
          type: boolean
        Type:
          anyOf:
            - $ref: '#/components/schemas/RateType'
          nullable: true
        Name:
          type: string
          nullable: true
        ShortName:
          type: string
          nullable: true
        ExternalNames:
          type: object
          additionalProperties:
            type: string
          nullable: true
        Description:
          type: object
          additionalProperties:
            type: string
          nullable: true
        ExternalIdentifier:
          maxLength: 255
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: Rate
    RateAddData:
      title: RateAddData
      required:
        - RateGroupId
        - ServiceId
      type: object
      properties:
        ServiceId:
          type: string
          format: uuid
        RateGroupId:
          type: string
          format: uuid
        IsEnabled:
          type: boolean
        Type:
          anyOf:
            - $ref: '#/components/schemas/RateType'
          nullable: true
        AccountingCategoryId:
          type: string
          format: uuid
          nullable: true
        BusinessSegmentId:
          type: string
          format: uuid
          nullable: true
        Names:
          type: object
          additionalProperties:
            type: string
          nullable: true
        ShortNames:
          type: object
          additionalProperties:
            type: string
          nullable: true
        ExternalNames:
          type: object
          additionalProperties:
            type: string
          nullable: true
        Descriptions:
          type: object
          additionalProperties:
            type: string
          nullable: true
        PricingType:
          anyOf:
            - $ref: '#/components/schemas/RatePricingDiscriminator'
          nullable: true
        ExternalIdentifier:
          maxLength: 255
          type: string
          nullable: true
        Pricing:
          $ref: '#/components/schemas/RatePricingDataParameters'
      additionalProperties: false
      x-schema-id: RateAddData
    RateAddOptions:
      title: RateAddOptions
      type: object
      properties:
        HidePriceFromGuest:
          type: boolean
        IsBonusPointsEligible:
          type: boolean
      additionalProperties: false
      x-schema-id: RateAddOptions
    RateAddParameters:
      title: RateAddParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Rates
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Rates:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/RateAddData'
        EnterpriseId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: RateAddParameters
    RateAddResult:
      title: RateAddResult
      type: object
      properties:
        Rates:
          type: array
          items:
            $ref: '#/components/schemas/Rate'
          nullable: true
      additionalProperties: false
      x-schema-id: RateAddResult
    RateExtent:
      title: RateExtent
      type: object
      properties:
        Rates:
          type: boolean
        RateGroups:
          type: boolean
        RateRestrictions:
          type: boolean
          deprecated: true
      additionalProperties: false
      x-schema-id: RateExtent
    RateFilterParameters:
      title: RateFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Extent
        - Limitation
        - ServiceIds
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        Extent:
          $ref: '#/components/schemas/RateExtent'
        RateIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        ServiceIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
      additionalProperties: false
      x-schema-id: RateFilterParameters
    RateGroup:
      title: RateGroup
      type: object
      properties:
        Id:
          type: string
          format: uuid
        ServiceId:
          type: string
          format: uuid
        IsActive:
          type: boolean
        Name:
          type: string
          nullable: true
        ExternalIdentifier:
          maxLength: 255
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: RateGroup
    RateOptions:
      title: RateOptions
      required:
        - HidePriceFromGuest
        - IsBonusPointsEligible
      type: object
      properties:
        HidePriceFromGuest:
          type: boolean
        IsBonusPointsEligible:
          type: boolean
      additionalProperties: false
      x-schema-id: RateOptions
    RatePriceUpdate:
      title: RatePriceUpdate
      required:
        - AccessToken
        - Client
        - ClientToken
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        FirstTimeUnitStartUtc:
          type: string
          format: date-time
          nullable: true
        LastTimeUnitStartUtc:
          type: string
          format: date-time
          nullable: true
        StartUtc:
          type: string
          format: date-time
          nullable: true
          deprecated: true
        EndUtc:
          type: string
          format: date-time
          nullable: true
          deprecated: true
        CategoryId:
          type: string
          format: uuid
          nullable: true
        Value:
          type: number
          format: double
          nullable: true
      additionalProperties: false
      x-schema-id: RatePriceUpdate
    RatePriceUpdateParameters:
      title: RatePriceUpdateParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - PriceUpdates
        - RateId
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        FirstTimeUnitStartUtc:
          type: string
          format: date-time
          nullable: true
        LastTimeUnitStartUtc:
          type: string
          format: date-time
          nullable: true
        StartUtc:
          type: string
          format: date-time
          nullable: true
          deprecated: true
        EndUtc:
          type: string
          format: date-time
          nullable: true
          deprecated: true
        RateId:
          type: string
          format: uuid
        ProductId:
          type: string
          format: uuid
          nullable: true
        PriceUpdates:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/RatePriceUpdate'
      additionalProperties: false
      x-schema-id: RatePriceUpdateParameters
    RatePricing:
      title: RatePricing
      type: object
      properties:
        Currency:
          type: string
          nullable: true
        DatesUtc:
          type: array
          items:
            type: string
          nullable: true
          deprecated: true
        TimeUnitStartsUtc:
          type: array
          items:
            type: string
          nullable: true
        BasePrices:
          type: array
          items:
            type: number
            format: double
          nullable: true
          deprecated: true
        BaseAmountPrices:
          type: array
          items:
            $ref: '#/components/schemas/Amount'
          nullable: true
        CategoryPrices:
          type: array
          items:
            $ref: '#/components/schemas/CategoryPricing'
          nullable: true
        CategoryAdjustments:
          type: array
          items:
            $ref: '#/components/schemas/CategoryAdjustment'
          nullable: true
        AgeCategoryAdjustments:
          type: array
          items:
            $ref: '#/components/schemas/AgeCategoryAdjustment'
          nullable: true
        RelativeAdjustment:
          type: number
          format: double
        AbsoluteAdjustment:
          type: number
          format: double
        EmptyUnitAdjustment:
          type: number
          format: double
        ExtraUnitAdjustment:
          type: number
          format: double
      additionalProperties: false
      x-schema-id: RatePricing
    RatePricingDataParameters:
      title: RatePricingDataParameters
      type: object
      properties:
        BaseRatePricing:
          $ref: '#/components/schemas/BaseRatePricingParameters'
        DependentRatePricing:
          $ref: '#/components/schemas/DependentRatePricingParameters'
      additionalProperties: false
      x-schema-id: RatePricingDataParameters
    RatePricingDiscriminator:
      enum:
        - BaseRatePricing
        - DependentRatePricing
      type: string
    RatePricingParameters:
      title: RatePricingParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - RateId
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        FirstTimeUnitStartUtc:
          type: string
          format: date-time
          nullable: true
        LastTimeUnitStartUtc:
          type: string
          format: date-time
          nullable: true
        StartUtc:
          type: string
          format: date-time
          nullable: true
          deprecated: true
        EndUtc:
          type: string
          format: date-time
          nullable: true
          deprecated: true
        RateId:
          type: string
          format: uuid
        ProductId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: RatePricingParameters
    RateRestrictionResult:
      title: RateRestrictionResult
      type: object
      properties:
        DateRestrictions:
          type: array
          items:
            $ref: '#/components/schemas/DateRestriction'
          nullable: true
        EarlinessRestrictions:
          type: array
          items:
            $ref: '#/components/schemas/EarlinessRestriction'
          nullable: true
        LengthRestrictions:
          type: array
          items:
            $ref: '#/components/schemas/LengthRestriction'
          nullable: true
      additionalProperties: false
      x-schema-id: RateRestrictionResult
    RateResult:
      title: RateResult
      type: object
      properties:
        Rates:
          type: array
          items:
            $ref: '#/components/schemas/Rate'
          nullable: true
        RateGroups:
          type: array
          items:
            $ref: '#/components/schemas/RateGroup'
          nullable: true
        RateRestrictions:
          $ref: '#/components/schemas/RateRestrictionResult'
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: RateResult
    RateType:
      enum:
        - Public
        - Private
        - AvailabilityBlock
      type: string
    RebateOrderItemData:
      title: RebateOrderItemData
      type: object
      properties:
        RebatedItemId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: RebateOrderItemData
    RefundType:
      enum:
        - CreditCardPayment
        - AlternativePayment
      type: string
    RelativeProductPrice:
      title: RelativeProductPrice
      type: object
      properties:
        Multiplier:
          type: number
          format: double
        Target:
          type: string
          nullable: true
        TaxRateCodes:
          type: array
          items:
            type: string
          nullable: true
        ProductIds:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: RelativeProductPrice
    RelativeTaxRateStrategy:
      title: RelativeTaxRateStrategy
      type: object
      properties:
        Value:
          type: number
          format: double
      additionalProperties: false
      x-schema-id: RelativeTaxRateStrategy
    Reservation:
      title: Reservation
      required:
        - AccountId
        - CreatedUtc
        - CreatorProfileId
        - Id
        - Options
        - Origin
        - RateId
        - ServiceId
        - State
        - UpdatedUtc
        - UpdaterProfileId
      type: object
      properties:
        Id:
          type: string
          format: uuid
        ServiceId:
          type: string
          format: uuid
        AccountId:
          type: string
          format: uuid
        AccountType:
          anyOf:
            - $ref: '#/components/schemas/AccountType'
          nullable: true
        CreatorProfileId:
          type: string
          format: uuid
        UpdaterProfileId:
          type: string
          format: uuid
        BookerId:
          type: string
          format: uuid
          nullable: true
        Number:
          type: string
          nullable: true
        State:
          $ref: '#/components/schemas/ServiceOrderState'
        Origin:
          $ref: '#/components/schemas/ServiceOrderOrigin'
        CommanderOrigin:
          anyOf:
            - $ref: '#/components/schemas/ServiceOrderCommanderOrigin'
          nullable: true
        OriginDetails:
          type: string
          nullable: true
        CreatedUtc:
          minLength: 1
          type: string
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          format: date-time
        CancelledUtc:
          type: string
          format: date-time
          nullable: true
        VoucherId:
          type: string
          format: uuid
          nullable: true
        BusinessSegmentId:
          type: string
          format: uuid
          nullable: true
        Options:
          $ref: '#/components/schemas/ServiceOrderOptions'
        RateId:
          type: string
          format: uuid
        CreditCardId:
          type: string
          format: uuid
          nullable: true
        GroupId:
          type: string
          format: uuid
          nullable: true
        RequestedResourceCategoryId:
          type: string
          format: uuid
          nullable: true
        AssignedResourceId:
          type: string
          format: uuid
          nullable: true
        AvailabilityBlockId:
          type: string
          format: uuid
          nullable: true
        PartnerCompanyId:
          type: string
          format: uuid
          nullable: true
        TravelAgencyId:
          type: string
          format: uuid
          nullable: true
        AssignedResourceLocked:
          type: boolean
        ChannelNumber:
          type: string
          nullable: true
        ChannelManagerNumber:
          type: string
          nullable: true
        CancellationReason:
          anyOf:
            - $ref: '#/components/schemas/ServiceOrderCancellationReason'
          nullable: true
        ReleasedUtc:
          type: string
          format: date-time
          nullable: true
        StartUtc:
          type: string
          format: date-time
          nullable: true
          deprecated: true
        EndUtc:
          type: string
          format: date-time
          nullable: true
        ScheduledStartUtc:
          type: string
          format: date-time
          nullable: true
        ActualStartUtc:
          type: string
          format: date-time
          nullable: true
        Purpose:
          anyOf:
            - $ref: '#/components/schemas/ReservationPurpose'
          nullable: true
        QrCodeData:
          type: string
          nullable: true
        PersonCounts:
          type: array
          items:
            $ref: '#/components/schemas/ServiceOrderPersonCount'
          nullable: true
      additionalProperties: false
      x-schema-id: Reservation
    ReservationAdditionParameters:
      title: ReservationAdditionParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Reservations
        - ServiceId
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        EnterpriseId:
          type: string
          format: uuid
          nullable: true
        ServiceId:
          type: string
          format: uuid
        GroupId:
          type: string
          format: uuid
          nullable: true
        GroupName:
          type: string
          nullable: true
        Reservations:
          type: array
          items:
            $ref: '#/components/schemas/ReservationData'
        CheckRateApplicability:
          type: boolean
          nullable: true
        CheckOverbooking:
          type: boolean
          nullable: true
        SendConfirmationEmail:
          type: boolean
          nullable: true
      additionalProperties: false
      x-schema-id: ReservationAdditionParameters
    ReservationAdditionResult:
      title: ReservationAdditionResult
      type: object
      properties:
        Reservations:
          type: array
          items:
            $ref: '#/components/schemas/AddedReservation'
          nullable: true
      additionalProperties: false
      x-schema-id: ReservationAdditionResult
    ReservationCancellationParameters:
      title: ReservationCancellationParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - ReservationIds
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        EnterpriseId:
          type: string
          format: uuid
          nullable: true
        ReservationIds:
          type: array
          items:
            type: string
            format: uuid
        ReservationId:
          type: string
          format: uuid
          deprecated: true
        PostCancellationFee:
          type: boolean
        Notes:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: ReservationCancellationParameters
    ReservationConfirmationNumberParameters:
      title: ReservationConfirmationNumberParameters
      required:
        - AccessToken
        - Client
        - ClientToken
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Numbers:
          type: array
          items:
            type: string
          nullable: true
        Extent:
          $ref: '#/components/schemas/ReservationExtent'
      additionalProperties: false
      x-schema-id: ReservationConfirmationNumberParameters
    ReservationCustomerParameters:
      title: ReservationCustomerParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - CustomerId
        - ReservationId
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        ReservationId:
          type: string
          format: uuid
        CustomerId:
          type: string
          format: uuid
      additionalProperties: false
      x-schema-id: ReservationCustomerParameters
    ReservationData:
      title: ReservationData
      required:
        - CustomerId
        - EndUtc
        - PersonCounts
        - RateId
        - RequestedCategoryId
        - StartUtc
      type: object
      properties:
        Identifier:
          type: string
          nullable: true
        ChannelNumber:
          type: string
          nullable: true
        State:
          anyOf:
            - $ref: '#/components/schemas/ServiceOrderState'
          nullable: true
        StartUtc:
          minLength: 1
          type: string
          format: date-time
        EndUtc:
          minLength: 1
          type: string
          format: date-time
        ReleasedUtc:
          type: string
          format: date-time
          nullable: true
        AdultCount:
          type: integer
          format: int32
          deprecated: true
        ChildCount:
          type: integer
          format: int32
          deprecated: true
        PersonCounts:
          type: array
          items:
            $ref: '#/components/schemas/PersonCountParameters'
        CustomerId:
          type: string
          format: uuid
        BookerId:
          type: string
          format: uuid
          nullable: true
        RequestedCategoryId:
          type: string
          format: uuid
        RateId:
          type: string
          format: uuid
        VoucherCode:
          type: string
          nullable: true
        CreditCardId:
          type: string
          format: uuid
          nullable: true
        TravelAgencyId:
          type: string
          format: uuid
          nullable: true
        CompanyId:
          type: string
          format: uuid
          nullable: true
        BusinessSegmentId:
          type: string
          format: uuid
          nullable: true
        Notes:
          type: string
          nullable: true
        TimeUnitAmount:
          $ref: '#/components/schemas/AmountParameters'
        TimeUnitPrices:
          type: array
          items:
            $ref: '#/components/schemas/PerUnitPriceParameters'
          nullable: true
        ProductOrders:
          type: array
          items:
            $ref: '#/components/schemas/ProductOrderAdditionData'
          nullable: true
        ResourceAccessTokens:
          type: array
          items:
            $ref: '#/components/schemas/ResourceAccessTokenParameters'
          nullable: true
        AvailabilityBlockId:
          type: string
          format: uuid
          nullable: true
        ReservationPurpose:
          anyOf:
            - $ref: '#/components/schemas/ReservationPurpose'
          nullable: true
        TimeUnitCost:
          $ref: '#/components/schemas/CostParameters'
      additionalProperties: false
      x-schema-id: ReservationData
    ReservationDataParameters:
      title: ReservationDataParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Reservations
        - ServiceId
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        ServiceId:
          type: string
          format: uuid
        GroupId:
          type: string
          format: uuid
          nullable: true
        GroupName:
          type: string
          nullable: true
        Reservations:
          type: array
          items:
            $ref: '#/components/schemas/ReservationData'
        CheckRateApplicability:
          type: boolean
          nullable: true
        CheckOverbooking:
          type: boolean
          nullable: true
        SendConfirmationEmail:
          type: boolean
          nullable: true
      additionalProperties: false
      x-schema-id: ReservationDataParameters
    ReservationExtent:
      title: ReservationExtent
      type: object
      properties:
        Reservations:
          type: boolean
        ReservationGroups:
          type: boolean
        Customers:
          type: boolean
        CustomerAdresses:
          type: boolean
          nullable: true
        CustomerIdentityDocuments:
          type: boolean
          nullable: true
        Services:
          type: boolean
        Products:
          type: boolean
        BusinessSegments:
          type: boolean
        Resources:
          type: boolean
        ResourceCategories:
          type: boolean
        ResourceCategoryAssignments:
          type: boolean
        Rates:
          type: boolean
        Items:
          type: boolean
        OrderItems:
          type: boolean
        Notes:
          type: boolean
        QrCodeData:
          type: boolean
        Companies:
          type: boolean
        AccountingStates:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
      x-schema-id: ReservationExtent
    ReservationFilterParameters:
      title: ReservationFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - EndUtc
        - Extent
        - ServiceIds
        - StartUtc
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        ServiceIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
        ServiceId:
          type: string
          format: uuid
          nullable: true
          deprecated: true
        StartUtc:
          minLength: 1
          type: string
          format: date-time
        EndUtc:
          minLength: 1
          type: string
          format: date-time
        GroupIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ReservationIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        CustomerIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        AssignedResourceIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        RateIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        BusinessSegmentIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ChannelNumbers:
          maxItems: 1000
          type: array
          items:
            type: string
          nullable: true
        Numbers:
          maxItems: 1000
          type: array
          items:
            type: string
          nullable: true
        TimeFilter:
          anyOf:
            - $ref: '#/components/schemas/ReservationTimeFilter'
          nullable: true
        Currency:
          type: string
          format: currency
          nullable: true
        States:
          type: array
          items:
            type: string
          nullable: true
        Extent:
          $ref: '#/components/schemas/ReservationExtent'
        Limitation:
          $ref: '#/components/schemas/Limitation'
      additionalProperties: false
      x-schema-id: ReservationFilterParameters
    ReservationGroup:
      title: ReservationGroup
      required:
        - EnterpriseId
        - Id
        - Name
      type: object
      properties:
        Id:
          type: string
          format: uuid
        Name:
          minLength: 1
          type: string
        ChannelManager:
          type: string
          nullable: true
        ChannelManagerGroupNumber:
          type: string
          nullable: true
        EnterpriseId:
          type: string
          format: uuid
      additionalProperties: false
      x-schema-id: ReservationGroup
    ReservationGroupFilterParameters:
      title: ReservationGroupFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ReservationGroupIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
      additionalProperties: false
      x-schema-id: ReservationGroupFilterParameters
    ReservationGroupOld:
      title: ReservationGroupOld
      type: object
      properties:
        Id:
          type: string
          format: uuid
        Name:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: ReservationGroupOld
    ReservationGroupResult:
      title: ReservationGroupResult
      required:
        - ReservationGroups
      type: object
      properties:
        ReservationGroups:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/ReservationGroup'
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ReservationGroupResult
    ReservationItemParameters:
      title: ReservationItemParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - ReservationIds
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        ReservationIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
        Currency:
          type: string
          format: currency
          nullable: true
        AccountingStates:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
      x-schema-id: ReservationItemParameters
    ReservationItemResult:
      title: ReservationItemResult
      type: object
      properties:
        Reservations:
          type: array
          items:
            $ref: '#/components/schemas/ReservationItems'
          nullable: true
      additionalProperties: false
      x-schema-id: ReservationItemResult
    ReservationItems:
      title: ReservationItems
      type: object
      properties:
        ReservationId:
          type: string
          format: uuid
        Items:
          type: array
          items:
            $ref: '#/components/schemas/AccountingItem'
          nullable: true
        OrderItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemOld'
          nullable: true
      additionalProperties: false
      x-schema-id: ReservationItems
    ReservationMultipleCustomerParameters:
      title: ReservationMultipleCustomerParameters
      required:
        - AccessToken
        - Client
        - ClientToken
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        CustomerIds:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        Extent:
          $ref: '#/components/schemas/ReservationExtent'
      additionalProperties: false
      x-schema-id: ReservationMultipleCustomerParameters
    ReservationOld:
      title: ReservationOld
      required:
        - Options
      type: object
      properties:
        Id:
          type: string
          format: uuid
        ServiceId:
          type: string
          format: uuid
        GroupId:
          type: string
          format: uuid
        Number:
          type: string
          nullable: true
        ChannelNumber:
          type: string
          nullable: true
        ChannelManagerNumber:
          type: string
          nullable: true
        ChannelManagerGroupNumber:
          type: string
          nullable: true
        ChannelManager:
          type: string
          nullable: true
        State:
          type: string
          nullable: true
        Origin:
          type: string
          nullable: true
        OriginDetails:
          type: string
          nullable: true
        Purpose:
          type: string
          nullable: true
        CreatedUtc:
          type: string
          nullable: true
        UpdatedUtc:
          type: string
          nullable: true
        CancelledUtc:
          type: string
          nullable: true
        StartUtc:
          type: string
          nullable: true
        EndUtc:
          type: string
          nullable: true
        ReleasedUtc:
          type: string
          nullable: true
        RequestedCategoryId:
          type: string
          format: uuid
        AssignedSpaceId:
          type: string
          format: uuid
          nullable: true
          deprecated: true
        AssignedResourceId:
          type: string
          format: uuid
          nullable: true
        AssignedSpaceLocked:
          type: boolean
          deprecated: true
        AssignedResourceLocked:
          type: boolean
        BusinessSegmentId:
          type: string
          format: uuid
          nullable: true
        CompanyId:
          type: string
          format: uuid
          nullable: true
        TravelAgencyId:
          type: string
          format: uuid
          nullable: true
        AvailabilityBlockId:
          type: string
          format: uuid
          nullable: true
        RateId:
          type: string
          format: uuid
        VoucherId:
          type: string
          format: uuid
          nullable: true
        CreditCardId:
          type: string
          format: uuid
          nullable: true
        CancellationReason:
          type: string
          nullable: true
        AdultCount:
          type: integer
          format: int32
          deprecated: true
        ChildCount:
          type: integer
          format: int32
          deprecated: true
        PersonCounts:
          type: array
          items:
            $ref: '#/components/schemas/PersonCount'
          nullable: true
        OwnerId:
          type: string
          format: uuid
        CustomerId:
          type: string
          format: uuid
          nullable: true
          deprecated: true
        BookerId:
          type: string
          format: uuid
          nullable: true
        CompanionIds:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
          deprecated: true
        ChannelManagerId:
          type: string
          nullable: true
          deprecated: true
        Options:
          $ref: '#/components/schemas/ReservationOptions'
      additionalProperties: false
      x-schema-id: ReservationOld
    ReservationOptions:
      title: ReservationOptions
      required:
        - AllCompanionsCheckedIn
        - AnyCompanionCheckedIn
        - OwnerCheckedIn
      type: object
      properties:
        OwnerCheckedIn:
          type: boolean
        AllCompanionsCheckedIn:
          type: boolean
        AnyCompanionCheckedIn:
          type: boolean
      additionalProperties: false
      x-schema-id: ReservationOptions
    ReservationPrice:
      title: ReservationPrice
      type: object
      properties:
        Identifier:
          type: string
          nullable: true
        TotalAmount:
          $ref: '#/components/schemas/Amount'
        Total:
          $ref: '#/components/schemas/CurrencyValueOld'
      additionalProperties: false
      x-schema-id: ReservationPrice
    ReservationPricingResult:
      title: ReservationPricingResult
      type: object
      properties:
        ReservationPrices:
          type: array
          items:
            $ref: '#/components/schemas/ReservationPrice'
          nullable: true
      additionalProperties: false
      x-schema-id: ReservationPricingResult
    ReservationProcessingParameters:
      title: ReservationProcessingParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - ReservationId
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        EnterpriseId:
          type: string
          format: uuid
          nullable: true
        ReservationId:
          type: string
          format: uuid
        CloseBills:
          type: boolean
        AllowOpenBalance:
          type: boolean
        Notes:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: ReservationProcessingParameters
    ReservationProductParameters:
      title: ReservationProductParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Count
        - ProductId
        - ReservationId
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        ReservationId:
          type: string
          format: uuid
        ProductId:
          type: string
          format: uuid
        Count:
          type: integer
          format: int32
        UnitAmount:
          $ref: '#/components/schemas/AmountParameters'
        StartUtc:
          type: string
          format: date-time
          nullable: true
        EndUtc:
          type: string
          format: date-time
          nullable: true
        UnitCost:
          $ref: '#/components/schemas/CostParameters'
      additionalProperties: false
      x-schema-id: ReservationProductParameters
    ReservationPurpose:
      enum:
        - Leisure
        - Business
        - Student
      type: string
    ReservationQrCodeData:
      title: ReservationQrCodeData
      type: object
      properties:
        ReservationId:
          type: string
          format: uuid
        Data:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: ReservationQrCodeData
    ReservationResult:
      title: ReservationResult
      type: object
      properties:
        Reservations:
          type: array
          items:
            $ref: '#/components/schemas/ReservationOld'
          nullable: true
        ReservationGroups:
          type: array
          items:
            $ref: '#/components/schemas/ReservationGroupOld'
          nullable: true
        Customers:
          type: array
          items:
            $ref: '#/components/schemas/Customer'
          nullable: true
        Services:
          type: array
          items:
            $ref: '#/components/schemas/Service'
          nullable: true
        Products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
          nullable: true
        Resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource'
          nullable: true
        ResourceCategories:
          type: array
          items:
            $ref: '#/components/schemas/ResourceCategory'
          nullable: true
        ResourceCategoryAssignments:
          type: array
          items:
            $ref: '#/components/schemas/ResourceCategoryAssignment'
          nullable: true
        BusinessSegments:
          type: array
          items:
            $ref: '#/components/schemas/BusinessSegment'
          nullable: true
        Rates:
          type: array
          items:
            $ref: '#/components/schemas/Rate'
          nullable: true
        RateGroups:
          type: array
          items:
            $ref: '#/components/schemas/RateGroup'
          nullable: true
        Items:
          type: array
          items:
            $ref: '#/components/schemas/AccountingItem'
          nullable: true
        OrderItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemOld'
          nullable: true
        Notes:
          type: array
          items:
            $ref: '#/components/schemas/OrderNote'
          nullable: true
        QrCodeData:
          type: array
          items:
            $ref: '#/components/schemas/ReservationQrCodeData'
          nullable: true
        Companies:
          type: array
          items:
            $ref: '#/components/schemas/Company'
          nullable: true
        ResourceAccessTokens:
          type: array
          items:
            $ref: '#/components/schemas/ResourceAccessToken'
          nullable: true
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ReservationResult
    ReservationServiceOrderFilterParameters:
      title: ReservationServiceOrderFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
        - ServiceIds
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ReservationIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ServiceIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
        ReservationGroupIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        AccountIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        CollidingUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        States:
          type: array
          items:
            $ref: '#/components/schemas/ServiceOrderState'
          nullable: true
      additionalProperties: false
      x-schema-id: ReservationServiceOrderFilterParameters
    ReservationServiceOrderResult:
      title: ReservationServiceOrderResult
      required:
        - Reservations
      type: object
      properties:
        Reservations:
          type: array
          items:
            $ref: '#/components/schemas/Reservation'
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ReservationServiceOrderResult
    ReservationStartParameters:
      title: ReservationStartParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - ReservationId
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        EnterpriseId:
          type: string
          format: uuid
          nullable: true
        ReservationId:
          type: string
          format: uuid
      additionalProperties: false
      x-schema-id: ReservationStartParameters
    ReservationTimeFilter:
      enum:
        - Colliding
        - Created
        - Updated
        - Start
        - End
        - Overlapping
        - Canceled
        - Cancelled
      type: string
    ReservationUpdateIntervalParameters:
      title: ReservationUpdateIntervalParameters
      required:
        - AccessToken
        - ChargeCancellationFee
        - Client
        - ClientToken
        - ReservationId
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        EnterpriseId:
          type: string
          format: uuid
          nullable: true
        ReservationId:
          type: string
          format: uuid
        StartUtc:
          type: string
          format: date-time
          nullable: true
        EndUtc:
          type: string
          format: date-time
          nullable: true
        ChargeCancellationFee:
          type: boolean
      additionalProperties: false
      x-schema-id: ReservationUpdateIntervalParameters
    ReservationUpdateParameters:
      title: ReservationUpdateParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - ReservationId
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        EnterpriseId:
          type: string
          format: uuid
          nullable: true
        ReservationId:
          type: string
          format: uuid
        ChannelNumber:
          $ref: '#/components/schemas/StringUpdateValue'
        StartUtc:
          $ref: '#/components/schemas/StringUpdateValue'
        EndUtc:
          $ref: '#/components/schemas/StringUpdateValue'
        ReleasedUtc:
          $ref: '#/components/schemas/StringUpdateValue'
        AdultCount:
          $ref: '#/components/schemas/Int32UpdateValue'
        ChildCount:
          $ref: '#/components/schemas/Int32UpdateValue'
        PersonCounts:
          $ref: '#/components/schemas/PersonCountParametersIEnumerableUpdateValue'
        AssignedResourceId:
          $ref: '#/components/schemas/GuidUpdateValue'
        RequestedCategoryId:
          $ref: '#/components/schemas/GuidUpdateValue'
        TraveAgencyId:
          $ref: '#/components/schemas/GuidNullableUpdateValue'
        TravelAgencyId:
          $ref: '#/components/schemas/GuidNullableUpdateValue'
        CompanyId:
          $ref: '#/components/schemas/GuidNullableUpdateValue'
        BusinessSegmentId:
          $ref: '#/components/schemas/GuidNullableUpdateValue'
        Purpose:
          $ref: '#/components/schemas/StringUpdateValue'
        RateId:
          $ref: '#/components/schemas/GuidUpdateValue'
        CreditCardId:
          $ref: '#/components/schemas/GuidNullableUpdateValue'
        TimeUnitPrices:
          $ref: '#/components/schemas/PerUnitPriceParametersIEnumerableUpdateValue'
        BookerId:
          $ref: '#/components/schemas/GuidNullableUpdateValue'
        AssignedResourceLocked:
          $ref: '#/components/schemas/BooleanUpdateValue'
        AvailabilityBlockId:
          $ref: '#/components/schemas/GuidNullableUpdateValue'
      additionalProperties: false
      x-schema-id: ReservationUpdateParameters
    ReservationsUpdateCustomerParameters:
      title: ReservationsUpdateCustomerParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - CustomerId
        - ReservationId
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        EnterpriseId:
          type: string
          format: uuid
          nullable: true
        ReservationId:
          type: string
          format: uuid
        CustomerId:
          type: string
          format: uuid
      additionalProperties: false
      x-schema-id: ReservationsUpdateCustomerParameters
    Resource:
      title: Resource
      type: object
      properties:
        Id:
          type: string
          format: uuid
        EnterpriseId:
          type: string
          format: uuid
        IsActive:
          type: boolean
        ParentResourceId:
          type: string
          format: uuid
          nullable: true
        Name:
          type: string
          nullable: true
        State:
          type: string
          nullable: true
        Descriptions:
          type: object
          additionalProperties:
            type: string
          nullable: true
        CreatedUtc:
          type: string
          nullable: true
        UpdatedUtc:
          type: string
          nullable: true
        Data:
          title: Data
          properties:
            discriminator:
              type: string
            value:
              oneOf:
                - $ref: '#/components/schemas/SpaceData'
                - type: object
                  additionalProperties: false
                - type: object
                  additionalProperties: false
      additionalProperties: false
      x-schema-id: Resource
    ResourceAccessToken:
      title: ResourceAccessToken
      required:
        - CreatedUtc
        - EnterpriseId
        - Id
        - ServiceOrderId
        - Type
        - UpdatedUtc
        - ValidityEndUtc
        - ValidityStartUtc
      type: object
      properties:
        Id:
          type: string
          format: uuid
        EnterpriseId:
          type: string
          format: uuid
        ServiceOrderId:
          type: string
          format: uuid
        CompanionshipId:
          type: string
          format: uuid
          nullable: true
        ResourceId:
          type: string
          format: uuid
          nullable: true
        Type:
          $ref: '#/components/schemas/ResourceAccessTokenType'
        Value:
          type: string
          nullable: true
        SerialNumber:
          type: string
          nullable: true
        ValidityStartUtc:
          minLength: 1
          type: string
          format: date-time
        ValidityEndUtc:
          minLength: 1
          type: string
          format: date-time
        Permissions:
          $ref: '#/components/schemas/ResourceAccessTokenPermissions'
        CreatedUtc:
          minLength: 1
          type: string
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          format: date-time
      additionalProperties: false
      x-schema-id: ResourceAccessToken
    ResourceAccessTokenDeleteParameters:
      title: ResourceAccessTokenDeleteParameters
      required:
        - AccessToken
        - Client
        - ClientToken
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Ids:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ResourceAccessTokenDeleteParameters
    ResourceAccessTokenFilterParameters:
      title: ResourceAccessTokenFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ResourceAccessTokenIds:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ServiceOrderIds:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        CollidingUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        ActivityStates:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
      x-schema-id: ResourceAccessTokenFilterParameters
    ResourceAccessTokenParameters:
      title: ResourceAccessTokenParameters
      type: object
      properties:
        ServiceOrderId:
          type: string
          format: uuid
        CompanionshipId:
          type: string
          format: uuid
          nullable: true
        ResourceId:
          type: string
          format: uuid
          nullable: true
        Value:
          type: string
          nullable: true
        Type:
          type: string
          nullable: true
        SerialNumber:
          type: string
          nullable: true
        ValidityStartUtc:
          type: string
          nullable: true
        ValidityEndUtc:
          type: string
          nullable: true
        Permissions:
          $ref: '#/components/schemas/ResourceAccessTokenPermissionsParameters'
      additionalProperties: false
      x-schema-id: ResourceAccessTokenParameters
    ResourceAccessTokenPermissions:
      title: ResourceAccessTokenPermissions
      type: object
      properties:
        Bed:
          type: boolean
        Room:
          type: boolean
        Floor:
          type: boolean
        Building:
          type: boolean
      additionalProperties: false
      x-schema-id: ResourceAccessTokenPermissions
    ResourceAccessTokenPermissionsParameters:
      title: ResourceAccessTokenPermissionsParameters
      type: object
      properties:
        Bed:
          $ref: '#/components/schemas/BooleanUpdateValue'
        Room:
          $ref: '#/components/schemas/BooleanUpdateValue'
        Floor:
          $ref: '#/components/schemas/BooleanUpdateValue'
        Building:
          $ref: '#/components/schemas/BooleanUpdateValue'
      additionalProperties: false
      x-schema-id: ResourceAccessTokenPermissionsParameters
    ResourceAccessTokenResult:
      title: ResourceAccessTokenResult
      type: object
      properties:
        ResourceAccessTokens:
          type: array
          items:
            $ref: '#/components/schemas/ResourceAccessToken'
          nullable: true
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ResourceAccessTokenResult
    ResourceAccessTokenType:
      enum:
        - PinCode
        - RfidTag
      type: string
    ResourceAccessTokenUpdateParameters:
      title: ResourceAccessTokenUpdateParameters
      type: object
      properties:
        ResourceAccessTokenId:
          type: string
          format: uuid
        ValidityStartUtc:
          $ref: '#/components/schemas/StringUpdateValue'
        ValidityEndUtc:
          $ref: '#/components/schemas/StringUpdateValue'
        Permissions:
          $ref: '#/components/schemas/ResourceAccessTokenPermissionsParameters'
      additionalProperties: false
      x-schema-id: ResourceAccessTokenUpdateParameters
    ResourceAddParameters:
      title: ResourceAddParameters
      required:
        - Data
        - Name
      type: object
      properties:
        Name:
          minLength: 1
          type: string
        ParentResourceId:
          type: string
          format: uuid
          nullable: true
        Data:
          title: Data
          properties:
            discriminator:
              $ref: '#/components/schemas/ResourceDataDiscriminator'
            value:
              oneOf:
                - $ref: '#/components/schemas/SpaceData'
                - type: object
                  additionalProperties: false
                - type: object
                  additionalProperties: false
      additionalProperties: false
      x-schema-id: ResourceAddParameters
    ResourceBlock:
      title: ResourceBlock
      required:
        - AssignedResourceId
        - CreatedUtc
        - EndUtc
        - EnterpriseId
        - Id
        - IsActive
        - StartUtc
        - Type
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          format: uuid
        EnterpriseId:
          type: string
          format: uuid
        AssignedResourceId:
          type: string
          format: uuid
        IsActive:
          type: boolean
        Type:
          $ref: '#/components/schemas/ResourceBlockType'
        StartUtc:
          minLength: 1
          type: string
        EndUtc:
          minLength: 1
          type: string
        CreatedUtc:
          minLength: 1
          type: string
        UpdatedUtc:
          minLength: 1
          type: string
      additionalProperties: false
      x-schema-id: ResourceBlock
    ResourceBlockAddParameters:
      title: ResourceBlockAddParameters
      required:
        - EndUtc
        - Name
        - ResourceId
        - StartUtc
        - Type
      type: object
      properties:
        ResourceId:
          type: string
          format: uuid
        Name:
          minLength: 1
          type: string
        Type:
          $ref: '#/components/schemas/ResourceBlockType'
        StartUtc:
          minLength: 1
          type: string
          format: date-time
        EndUtc:
          minLength: 1
          type: string
          format: date-time
        Notes:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: ResourceBlockAddParameters
    ResourceBlockDeleteParameters:
      title: ResourceBlockDeleteParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - ResourceBlockIds
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        ResourceBlockIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
      additionalProperties: false
      x-schema-id: ResourceBlockDeleteParameters
    ResourceBlockExtent:
      title: ResourceBlockExtent
      type: object
      properties:
        Inactive:
          type: boolean
      additionalProperties: false
      x-schema-id: ResourceBlockExtent
    ResourceBlockParameters:
      title: ResourceBlockParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Extent
        - Limitation
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        Extent:
          $ref: '#/components/schemas/ResourceBlockExtent'
        ResourceBlockIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        AssignedResourceIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        CollidingUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        CreatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
      additionalProperties: false
      x-schema-id: ResourceBlockParameters
    ResourceBlockResult:
      title: ResourceBlockResult
      required:
        - ResourceBlocks
      type: object
      properties:
        ResourceBlocks:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/ResourceBlock'
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ResourceBlockResult
    ResourceBlockType:
      enum:
        - OutOfOrder
        - InternalUse
      type: string
    ResourceCategory:
      title: ResourceCategory
      required:
        - Capacity
        - Classification
        - Descriptions
        - EnterpriseId
        - ExtraCapacity
        - Id
        - IsActive
        - Names
        - Ordering
        - ServiceId
        - ShortNames
        - Type
      type: object
      properties:
        Id:
          type: string
          format: uuid
        EnterpriseId:
          type: string
          format: uuid
        ServiceId:
          type: string
          format: uuid
        IsActive:
          type: boolean
        Type:
          $ref: '#/components/schemas/ResourceCategoryType'
        Classification:
          $ref: '#/components/schemas/ResourceClassification'
        Names:
          type: object
          additionalProperties:
            type: string
        ShortNames:
          type: object
          additionalProperties:
            type: string
        Descriptions:
          type: object
          additionalProperties:
            type: string
        Ordering:
          type: integer
          format: int32
        Capacity:
          type: integer
          format: int32
        ExtraCapacity:
          type: integer
          format: int32
        ExternalIdentifier:
          maxLength: 255
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: ResourceCategory
    ResourceCategoryAssignment:
      title: ResourceCategoryAssignment
      required:
        - CategoryId
        - CreatedUtc
        - Id
        - IsActive
        - ResourceId
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          format: uuid
        IsActive:
          type: boolean
        ResourceId:
          type: string
          format: uuid
        CategoryId:
          type: string
          format: uuid
        CreatedUtc:
          minLength: 1
          type: string
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          format: date-time
      additionalProperties: false
      x-schema-id: ResourceCategoryAssignment
    ResourceCategoryAssignmentFilterParameters:
      title: ResourceCategoryAssignmentFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
        - ResourceCategoryIds
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ResourceCategoryAssignmentIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ResourceCategoryIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        ActivityStates:
          type: array
          items:
            $ref: '#/components/schemas/ActivityStates'
          nullable: true
      additionalProperties: false
      x-schema-id: ResourceCategoryAssignmentFilterParameters
    ResourceCategoryAssignmentResult:
      title: ResourceCategoryAssignmentResult
      required:
        - ResourceCategoryAssignments
      type: object
      properties:
        ResourceCategoryAssignments:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/ResourceCategoryAssignment'
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ResourceCategoryAssignmentResult
    ResourceCategoryFilterParameters:
      title: ResourceCategoryFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
        - ServiceIds
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ResourceCategoryIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ServiceIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
      additionalProperties: false
      x-schema-id: ResourceCategoryFilterParameters
    ResourceCategoryImageAssignment:
      title: ResourceCategoryImageAssignment
      required:
        - CategoryId
        - CreatedUtc
        - Id
        - ImageId
        - IsActive
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          format: uuid
        IsActive:
          type: boolean
        CategoryId:
          type: string
          format: uuid
        ImageId:
          type: string
          format: uuid
        CreatedUtc:
          minLength: 1
          type: string
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          format: date-time
      additionalProperties: false
      x-schema-id: ResourceCategoryImageAssignment
    ResourceCategoryImageAssignmentFilterParameters:
      title: ResourceCategoryImageAssignmentFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
        - ResourceCategoryIds
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ResourceCategoryImageAssignmentIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ResourceCategoryIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        ActivityStates:
          type: array
          items:
            $ref: '#/components/schemas/ActivityStates'
          nullable: true
      additionalProperties: false
      x-schema-id: ResourceCategoryImageAssignmentFilterParameters
    ResourceCategoryImageAssignmentResult:
      title: ResourceCategoryImageAssignmentResult
      required:
        - ResourceCategoryImageAssignments
      type: object
      properties:
        ResourceCategoryImageAssignments:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/ResourceCategoryImageAssignment'
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ResourceCategoryImageAssignmentResult
    ResourceCategoryResult:
      title: ResourceCategoryResult
      required:
        - ResourceCategories
      type: object
      properties:
        ResourceCategories:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/ResourceCategory'
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ResourceCategoryResult
    ResourceCategoryType:
      enum:
        - Room
        - Bed
        - Dorm
        - Apartment
        - Suite
        - Villa
        - Site
        - Office
        - MeetingRoom
        - ParkingSpot
        - Desk
        - TeamArea
        - Membership
        - Tent
        - CaravanOrRV
        - UnequippedCampsite
        - Bike
      type: string
    ResourceClassification:
      enum:
        - StandardSingle
        - StandardDouble
        - SuperiorTwin
        - SuperiorDouble
        - JuniorSuite
        - SharedOrDorm
        - Other
        - SuperiorSingle
        - Triple
        - Family
        - StandardTwin
        - Studio
        - SuperiorTripleRoom
        - OneBedroomApartment
        - ThreeBedroomsApartment
        - TwoBedroomsApartment
      type: string
    ResourceDataDiscriminator:
      enum:
        - Space
        - Object
        - Person
      type: string
    ResourceExtent:
      title: ResourceExtent
      type: object
      properties:
        Resources:
          type: boolean
        ResourceCategories:
          type: boolean
          deprecated: true
        ResourceCategoryAssignments:
          type: boolean
          deprecated: true
        ResourceCategoryImageAssignments:
          type: boolean
          deprecated: true
        ResourceFeatures:
          type: boolean
          deprecated: true
        ResourceFeatureAssignments:
          type: boolean
          deprecated: true
        Inactive:
          type: boolean
      additionalProperties: false
      x-schema-id: ResourceExtent
    ResourceFeature:
      title: ResourceFeature
      required:
        - Classification
        - CreatedUtc
        - Descriptions
        - Id
        - IsActive
        - Names
        - ServiceId
        - ShortNames
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          format: uuid
        ServiceId:
          type: string
          format: uuid
        IsActive:
          type: boolean
        Classification:
          $ref: '#/components/schemas/ResourceFeatureClassification'
        Names:
          type: object
          additionalProperties:
            type: string
        ShortNames:
          type: object
          additionalProperties:
            type: string
        Descriptions:
          type: object
          additionalProperties:
            type: string
        CreatedUtc:
          minLength: 1
          type: string
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          format: date-time
      additionalProperties: false
      x-schema-id: ResourceFeature
    ResourceFeatureAssignment:
      title: ResourceFeatureAssignment
      required:
        - CreatedUtc
        - FeatureId
        - Id
        - IsActive
        - ResourceId
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          format: uuid
        IsActive:
          type: boolean
        ResourceId:
          type: string
          format: uuid
        FeatureId:
          type: string
          format: uuid
        CreatedUtc:
          minLength: 1
          type: string
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          format: date-time
      additionalProperties: false
      x-schema-id: ResourceFeatureAssignment
    ResourceFeatureAssignmentFilterParameters:
      title: ResourceFeatureAssignmentFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
        - ResourceFeatureIds
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ResourceFeatureAssignmentIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ResourceFeatureIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        ActivityStates:
          type: array
          items:
            $ref: '#/components/schemas/ActivityStates'
          nullable: true
      additionalProperties: false
      x-schema-id: ResourceFeatureAssignmentFilterParameters
    ResourceFeatureAssignmentResult:
      title: ResourceFeatureAssignmentResult
      required:
        - ResourceFeatureAssignments
      type: object
      properties:
        ResourceFeatureAssignments:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/ResourceFeatureAssignment'
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ResourceFeatureAssignmentResult
    ResourceFeatureClassification:
      enum:
        - SeaView
        - RiverView
        - OceanView
        - TwinBeds
        - DoubleBed
        - RollawayBed
        - UpperBed
        - LowerBed
        - Balcony
        - AccessibleBathroom
        - AccessibleRoom
        - ElevatorAccess
        - HighFloor
        - Kitchenette
        - AirConditioning
        - PrivateJacuzzi
        - PrivateSauna
        - EnsuiteRoom
        - PrivateBathroom
        - SharedBathroom
      type: string
    ResourceFeatureFilterParameters:
      title: ResourceFeatureFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
        - ServiceIds
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ResourceFeatureIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ServiceIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        ActivityStates:
          type: array
          items:
            $ref: '#/components/schemas/ActivityStates'
          nullable: true
      additionalProperties: false
      x-schema-id: ResourceFeatureFilterParameters
    ResourceFeatureResult:
      title: ResourceFeatureResult
      required:
        - ResourceFeatures
      type: object
      properties:
        ResourceFeatures:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/ResourceFeature'
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ResourceFeatureResult
    ResourceFilterParameters:
      title: ResourceFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ResourceIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        Names:
          type: array
          items:
            type: string
          nullable: true
        Extent:
          $ref: '#/components/schemas/ResourceExtent'
        CreatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
      additionalProperties: false
      x-schema-id: ResourceFilterParameters
    ResourceResult:
      title: ResourceResult
      type: object
      properties:
        Resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource'
          nullable: true
        ResourceCategories:
          type: array
          items:
            $ref: '#/components/schemas/ResourceCategory'
          nullable: true
          deprecated: true
        ResourceCategoryAssignments:
          type: array
          items:
            $ref: '#/components/schemas/ResourceCategoryAssignment'
          nullable: true
          deprecated: true
        ResourceCategoryImageAssignments:
          type: array
          items:
            $ref: '#/components/schemas/ResourceCategoryImageAssignment'
          nullable: true
          deprecated: true
        ResourceFeatures:
          type: array
          items:
            $ref: '#/components/schemas/ResourceFeature'
          nullable: true
          deprecated: true
        ResourceFeatureAssignments:
          type: array
          items:
            $ref: '#/components/schemas/ResourceFeatureAssignment'
          nullable: true
          deprecated: true
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ResourceResult
    ResourceUpdateParameters:
      title: ResourceUpdateParameters
      required:
        - ResourceId
      type: object
      properties:
        ResourceId:
          type: string
          format: uuid
        Name:
          $ref: '#/components/schemas/StringUpdateValue'
        ParentResourceId:
          $ref: '#/components/schemas/GuidNullableUpdateValue'
        Data:
          title: Data
          properties:
            discriminator:
              $ref: '#/components/schemas/ResourceDataDiscriminator'
            value:
              oneOf:
                - $ref: '#/components/schemas/SpaceData'
                - type: object
                  additionalProperties: false
                - type: object
                  additionalProperties: false
        State:
          $ref: '#/components/schemas/StringUpdateValue'
        StateReason:
          $ref: '#/components/schemas/StringUpdateValue'
      additionalProperties: false
      x-schema-id: ResourceUpdateParameters
    Restriction:
      title: Restriction
      type: object
      properties:
        Id:
          type: string
          format: uuid
        ServiceId:
          type: string
          format: uuid
        ExternalIdentifier:
          type: string
          nullable: true
        Origin:
          type: string
          nullable: true
        Conditions:
          $ref: '#/components/schemas/RestrictionConditions'
        Exceptions:
          $ref: '#/components/schemas/RestrictionExceptions'
      additionalProperties: false
      x-schema-id: Restriction
    RestrictionAdditionResult:
      title: RestrictionAdditionResult
      type: object
      properties:
        Restrictions:
          type: array
          items:
            $ref: '#/components/schemas/AddedRestriction'
          nullable: true
      additionalProperties: false
      x-schema-id: RestrictionAdditionResult
    RestrictionClearData:
      title: RestrictionClearData
      required:
        - Days
        - Type
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/RestrictionType'
        ExactRateId:
          type: string
          format: uuid
          nullable: true
        BaseRateId:
          type: string
          format: uuid
          nullable: true
        RateGroupId:
          type: string
          format: uuid
          nullable: true
        ResourceCategoryId:
          type: string
          format: uuid
          nullable: true
        ResourceCategoryType:
          anyOf:
            - $ref: '#/components/schemas/ResourceCategoryType'
          nullable: true
        StartUtc:
          type: string
          format: date-time
          nullable: true
        EndUtc:
          type: string
          format: date-time
          nullable: true
        Days:
          $ref: '#/components/schemas/DaysParameters'
      additionalProperties: false
      x-schema-id: RestrictionClearData
    RestrictionConditions:
      title: RestrictionConditions
      type: object
      properties:
        Type:
          type: string
          nullable: true
        ExactRateId:
          type: string
          format: uuid
          nullable: true
        BaseRateId:
          type: string
          format: uuid
          nullable: true
        RateGroupId:
          type: string
          format: uuid
          nullable: true
        ResourceCategoryId:
          type: string
          format: uuid
          nullable: true
        ResourceCategoryType:
          type: string
          nullable: true
        StartUtc:
          type: string
          nullable: true
        EndUtc:
          type: string
          nullable: true
        Days:
          type: array
          items:
            type: string
          nullable: true
        Hours:
          $ref: '#/components/schemas/Hours'
      additionalProperties: false
      x-schema-id: RestrictionConditions
    RestrictionConditionsData:
      title: RestrictionConditionsData
      required:
        - Type
      type: object
      properties:
        Type:
          minLength: 1
          type: string
        ExactRateId:
          type: string
          format: uuid
          nullable: true
        BaseRateId:
          type: string
          format: uuid
          nullable: true
        RateGroupId:
          type: string
          format: uuid
          nullable: true
        ResourceCategoryId:
          type: string
          format: uuid
          nullable: true
        ResourceCategoryType:
          anyOf:
            - $ref: '#/components/schemas/ResourceCategoryType'
          nullable: true
        StartUtc:
          type: string
          format: date-time
          nullable: true
        EndUtc:
          type: string
          format: date-time
          nullable: true
        Days:
          type: array
          items:
            type: string
          nullable: true
        Hours:
          $ref: '#/components/schemas/HoursParameters'
      additionalProperties: false
      x-schema-id: RestrictionConditionsData
    RestrictionData:
      title: RestrictionData
      required:
        - Conditions
      type: object
      properties:
        Identifier:
          type: string
          nullable: true
        ExternalIdentifier:
          type: string
          nullable: true
        Conditions:
          $ref: '#/components/schemas/RestrictionConditionsData'
        Exceptions:
          $ref: '#/components/schemas/RestrictionExceptionsData'
      additionalProperties: false
      x-schema-id: RestrictionData
    RestrictionExceptions:
      title: RestrictionExceptions
      type: object
      properties:
        MinAdvance:
          type: string
          nullable: true
        MaxAdvance:
          type: string
          nullable: true
        MinLength:
          type: string
          nullable: true
        MaxLength:
          type: string
          nullable: true
        MinPrice:
          $ref: '#/components/schemas/CurrencyValueOld'
        MaxPrice:
          $ref: '#/components/schemas/CurrencyValueOld'
        MinReservationCount:
          type: integer
          format: int32
          nullable: true
        MaxReservationCount:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
      x-schema-id: RestrictionExceptions
    RestrictionExceptionsData:
      title: RestrictionExceptionsData
      type: object
      properties:
        MinAdvance:
          type: string
          format: date-time
          nullable: true
        MaxAdvance:
          type: string
          format: date-time
          nullable: true
        MinLength:
          type: string
          format: date-time
          nullable: true
        MaxLength:
          type: string
          format: date-time
          nullable: true
        MinPrice:
          $ref: '#/components/schemas/CurrencyValueOld'
        MaxPrice:
          $ref: '#/components/schemas/CurrencyValueOld'
        MaxReservationCount:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
      x-schema-id: RestrictionExceptionsData
    RestrictionFilterParameters:
      title: RestrictionFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
        - ServiceIds
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        TimeFilter:
          type: string
          nullable: true
          deprecated: true
        StartUtc:
          type: string
          nullable: true
          deprecated: true
        EndUtc:
          type: string
          nullable: true
          deprecated: true
        CollidingUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        CreatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        RestrictionIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ResourceCategoryIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        RateIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ExactRateIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        BaseRateIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        Origin:
          anyOf:
            - $ref: '#/components/schemas/RestrictionOrigin'
          nullable: true
        ServiceIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
      additionalProperties: false
      x-schema-id: RestrictionFilterParameters
    RestrictionOrigin:
      enum:
        - User
        - Integration
      type: string
    RestrictionResult:
      title: RestrictionResult
      type: object
      properties:
        Restrictions:
          type: array
          items:
            $ref: '#/components/schemas/Restriction'
          nullable: true
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: RestrictionResult
    RestrictionSetData:
      title: RestrictionSetData
      required:
        - Days
        - Type
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/RestrictionType'
        ExactRateId:
          type: string
          format: uuid
          nullable: true
        BaseRateId:
          type: string
          format: uuid
          nullable: true
        RateGroupId:
          type: string
          format: uuid
          nullable: true
        ResourceCategoryId:
          type: string
          format: uuid
          nullable: true
        ResourceCategoryType:
          anyOf:
            - $ref: '#/components/schemas/ResourceCategoryType'
          nullable: true
        StartUtc:
          type: string
          format: date-time
          nullable: true
        EndUtc:
          type: string
          format: date-time
          nullable: true
        Days:
          $ref: '#/components/schemas/DaysParameters'
        MinAdvance:
          type: string
          format: date-time
          nullable: true
        MaxAdvance:
          type: string
          format: date-time
          nullable: true
        MinLength:
          type: string
          format: date-time
          nullable: true
        MaxLength:
          type: string
          format: date-time
          nullable: true
        MinPrice:
          $ref: '#/components/schemas/CurrencyValue'
        MaxPrice:
          $ref: '#/components/schemas/CurrencyValue'
        MaxReservationCount:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
      x-schema-id: RestrictionSetData
    RestrictionType:
      enum:
        - Stay
        - Start
        - End
      type: string
    RevenueType:
      enum:
        - Service
        - Product
        - Additional
      type: string
    RoutingRule:
      title: RoutingRule
      required:
        - Applicability
        - CompanyId
        - CompanyRelation
        - CreatedUtc
        - EnterpriseId
        - Id
        - RouteType
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          format: uuid
        EnterpriseId:
          type: string
          format: uuid
        CompanyId:
          type: string
          format: uuid
        CompanyRelation:
          $ref: '#/components/schemas/RoutingRuleCompanyRelation'
        Applicability:
          $ref: '#/components/schemas/RoutingRuleApplicability'
        RouteType:
          $ref: '#/components/schemas/RoutingRuleRouteType'
        ServiceId:
          type: string
          format: uuid
          nullable: true
        SelectedStayItems:
          $ref: '#/components/schemas/RoutingRuleStayItems'
        CreatedUtc:
          minLength: 1
          type: string
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          format: date-time
      additionalProperties: false
      x-schema-id: RoutingRule
    RoutingRuleAddParameter:
      title: RoutingRuleAddParameter
      required:
        - Applicability
        - CompanyId
        - CompanyRelation
        - RouteType
        - ServiceId
      type: object
      properties:
        CompanyId:
          type: string
          format: uuid
        ServiceId:
          type: string
          format: uuid
        CompanyRelation:
          $ref: '#/components/schemas/RoutingRuleCompanyRelation'
        Applicability:
          $ref: '#/components/schemas/RoutingRuleApplicability'
        RouteType:
          $ref: '#/components/schemas/RoutingRuleRouteType'
        SelectedStayItems:
          $ref: '#/components/schemas/RoutingRuleStayItemsAddParameters'
      additionalProperties: false
      x-schema-id: RoutingRuleAddParameter
    RoutingRuleApplicability:
      enum:
        - Always
        - PrepaidOnly
      type: string
    RoutingRuleCompanyRelation:
      enum:
        - PartnerCompany
        - TravelAgency
      type: string
    RoutingRuleDeleteParameters:
      title: RoutingRuleDeleteParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - RoutingRuleIds
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        RoutingRuleIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
      additionalProperties: false
      x-schema-id: RoutingRuleDeleteParameters
    RoutingRuleFilterParameters:
      title: RoutingRuleFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        CompanyIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        RoutingRuleIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
      additionalProperties: false
      x-schema-id: RoutingRuleFilterParameters
    RoutingRuleResult:
      title: RoutingRuleResult
      required:
        - RoutingRules
      type: object
      properties:
        RoutingRules:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/RoutingRule'
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: RoutingRuleResult
    RoutingRuleRouteType:
      enum:
        - AllStayItems
        - SelectedStayItems
      type: string
    RoutingRuleStayItems:
      title: RoutingRuleStayItems
      type: object
      properties:
        Nights:
          type: boolean
        CityTax:
          type: boolean
        ProductCategoryIds:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: RoutingRuleStayItems
    RoutingRuleStayItemsAddParameters:
      title: RoutingRuleStayItemsAddParameters
      type: object
      properties:
        Nights:
          type: boolean
        CityTax:
          type: boolean
        ProductCategoryIds:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: RoutingRuleStayItemsAddParameters
    RoutingRuleStayItemsUpdateParameters:
      title: RoutingRuleStayItemsUpdateParameters
      type: object
      properties:
        Nights:
          $ref: '#/components/schemas/BooleanUpdateValue'
        CityTax:
          $ref: '#/components/schemas/BooleanUpdateValue'
        ProductCategoryIds:
          $ref: '#/components/schemas/GuidIEnumerableUpdateValue'
      additionalProperties: false
      x-schema-id: RoutingRuleStayItemsUpdateParameters
    RoutingRuleUpdateParameters:
      title: RoutingRuleUpdateParameters
      required:
        - RoutingRuleId
      type: object
      properties:
        RoutingRuleId:
          type: string
          format: uuid
        CompanyId:
          $ref: '#/components/schemas/GuidUpdateValue'
        ServiceId:
          $ref: '#/components/schemas/GuidUpdateValue'
        CompanyRelation:
          anyOf:
            - $ref: '#/components/schemas/RoutingRuleCompanyRelation'
          nullable: true
        Applicability:
          anyOf:
            - $ref: '#/components/schemas/RoutingRuleApplicability'
          nullable: true
        RouteType:
          anyOf:
            - $ref: '#/components/schemas/RoutingRuleRouteType'
          nullable: true
        SelectedStayItems:
          $ref: '#/components/schemas/RoutingRuleStayItemsUpdateParameters'
      additionalProperties: false
      x-schema-id: RoutingRuleUpdateParameters
    Rule:
      title: Rule
      required:
        - CreatedUtc
        - Id
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          format: uuid
        Conditions:
          $ref: '#/components/schemas/RuleConditions'
        CreatedUtc:
          minLength: 1
          type: string
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          format: date-time
      additionalProperties: false
      x-schema-id: Rule
    RuleAction:
      title: RuleAction
      type: object
      properties:
        Id:
          type: string
          format: uuid
        RuleId:
          type: string
          format: uuid
        Data:
          title: Data
          properties:
            discriminator:
              $ref: '#/components/schemas/RuleActionDiscriminator'
            value:
              oneOf:
                - $ref: '#/components/schemas/RuleActionProductData'
      additionalProperties: false
      x-schema-id: RuleAction
    RuleActionDiscriminator:
      enum:
        - Product
      type: string
    RuleActionProductData:
      title: RuleActionProductData
      type: object
      properties:
        ActionType:
          type: string
          nullable: true
        ProductId:
          type: string
          format: uuid
      additionalProperties: false
      x-schema-id: RuleActionProductData
    RuleCondition:
      title: RuleCondition
      type: object
      properties:
        Value:
          type: string
          nullable: true
        ConditionType:
          anyOf:
            - $ref: '#/components/schemas/RuleConditionType'
          nullable: true
      additionalProperties: false
      x-schema-id: RuleCondition
    RuleConditionType:
      enum:
        - Equals
        - NotEquals
      type: string
    RuleConditions:
      title: RuleConditions
      type: object
      properties:
        RateId:
          $ref: '#/components/schemas/RuleCondition'
        RateGroupId:
          $ref: '#/components/schemas/RuleCondition'
        BusinessSegmentId:
          $ref: '#/components/schemas/RuleCondition'
        ResourceCategoryId:
          $ref: '#/components/schemas/RuleCondition'
        ResourceCategoryType:
          $ref: '#/components/schemas/RuleCondition'
        Origin:
          $ref: '#/components/schemas/RuleCondition'
        TravelAgencyId:
          $ref: '#/components/schemas/RuleCondition'
        MinimumTimeUnitCount:
          type: integer
          format: int32
          nullable: true
        MaximumTimeUnitCount:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
      x-schema-id: RuleConditions
    RuleExtent:
      title: RuleExtent
      type: object
      properties:
        RuleActions:
          type: boolean
        Rates:
          type: boolean
        RateGroups:
          type: boolean
        ResourceCategories:
          type: boolean
        BusinessSegments:
          type: boolean
      additionalProperties: false
      x-schema-id: RuleExtent
    RuleFilterParameters:
      title: RuleFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Extent
        - Limitation
        - ServiceIds
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        Ids:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ServiceIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        Extent:
          $ref: '#/components/schemas/RuleExtent'
      additionalProperties: false
      x-schema-id: RuleFilterParameters
    RuleResult:
      title: RuleResult
      type: object
      properties:
        Rules:
          type: array
          items:
            $ref: '#/components/schemas/Rule'
          nullable: true
        RuleActions:
          type: array
          items:
            $ref: '#/components/schemas/RuleAction'
          nullable: true
        Rates:
          type: array
          items:
            $ref: '#/components/schemas/Rate'
          nullable: true
        RateGroups:
          type: array
          items:
            $ref: '#/components/schemas/RateGroup'
          nullable: true
        ResourceCategories:
          type: array
          items:
            $ref: '#/components/schemas/ResourceCategory'
          nullable: true
        BusinessSegments:
          type: array
          items:
            $ref: '#/components/schemas/BusinessSegment'
          nullable: true
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: RuleResult
    SearchOperator:
      enum:
        - And
        - Or
      type: string
    SenderDiscriminator:
      enum:
        - Application
        - Enterprise
      type: string
    Service:
      title: Service
      required:
        - CreatedUtc
        - EnterpriseId
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          format: uuid
        EnterpriseId:
          type: string
          format: uuid
        IsActive:
          type: boolean
        Name:
          type: string
          nullable: true
        StartTime:
          type: string
          nullable: true
          deprecated: true
        EndTime:
          type: string
          nullable: true
          deprecated: true
        Options:
          $ref: '#/components/schemas/ServiceOptions'
        Promotions:
          $ref: '#/components/schemas/Promotions'
        Type:
          type: string
          nullable: true
          deprecated: true
        Ordering:
          type: integer
          format: int32
        Data:
          title: Data
          properties:
            discriminator:
              $ref: '#/components/schemas/ServiceType'
            value:
              oneOf:
                - $ref: '#/components/schemas/BookableServiceData'
                - $ref: '#/components/schemas/AdditionalServiceData'
        ExternalIdentifier:
          maxLength: 255
          type: string
          nullable: true
        CreatedUtc:
          minLength: 1
          type: string
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          format: date-time
      additionalProperties: false
      x-schema-id: Service
    ServiceAvailabilityFilterParameters:
      title: ServiceAvailabilityFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - ServiceId
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        ServiceId:
          type: string
          format: uuid
        FirstTimeUnitStartUtc:
          type: string
          format: date-time
          nullable: true
        LastTimeUnitStartUtc:
          type: string
          format: date-time
          nullable: true
        StartUtc:
          type: string
          format: date-time
          nullable: true
          deprecated: true
        EndUtc:
          type: string
          format: date-time
          nullable: true
          deprecated: true
      additionalProperties: false
      x-schema-id: ServiceAvailabilityFilterParameters
    ServiceAvailabilityResult:
      title: ServiceAvailabilityResult
      type: object
      properties:
        DatesUtc:
          type: array
          items:
            type: string
          nullable: true
          deprecated: true
        TimeUnitStartsUtc:
          type: array
          items:
            type: string
          nullable: true
        CategoryAvailabilities:
          type: array
          items:
            $ref: '#/components/schemas/CategoryAvailability'
          nullable: true
      additionalProperties: false
      x-schema-id: ServiceAvailabilityResult
    ServiceAvailabilityUpdateData:
      title: ServiceAvailabilityUpdateData
      required:
        - ResourceCategoryId
        - UnitCountAdjustment
      type: object
      properties:
        FirstTimeUnitStartUtc:
          type: string
          format: date-time
          nullable: true
        LastTimeUnitStartUtc:
          type: string
          format: date-time
          nullable: true
        StartUtc:
          type: string
          format: date-time
          nullable: true
          deprecated: true
        EndUtc:
          type: string
          format: date-time
          nullable: true
          deprecated: true
        ResourceCategoryId:
          type: string
          format: uuid
        UnitCountAdjustment:
          $ref: '#/components/schemas/Int32NullableUpdateValue'
        AvailabilityBlockId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ServiceAvailabilityUpdateData
    ServiceAvailabilityUpdateParameters:
      title: ServiceAvailabilityUpdateParameters
      required:
        - AccessToken
        - AvailabilityUpdates
        - Client
        - ClientToken
        - ServiceId
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        ServiceId:
          type: string
          format: uuid
        AvailabilityUpdates:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/ServiceAvailabilityUpdateData'
      additionalProperties: false
      x-schema-id: ServiceAvailabilityUpdateParameters
    ServiceFilterParameters:
      title: ServiceFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ServiceIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
      additionalProperties: false
      x-schema-id: ServiceFilterParameters
    ServiceOptions:
      title: ServiceOptions
      type: object
      properties:
        BillAsPackage:
          type: boolean
      additionalProperties: false
      x-schema-id: ServiceOptions
    ServiceOrder:
      title: ServiceOrder
      required:
        - AccountId
        - CreatedUtc
        - CreatorProfileId
        - Id
        - Options
        - Origin
        - ServiceId
        - State
        - UpdatedUtc
        - UpdaterProfileId
      type: object
      properties:
        Id:
          type: string
          format: uuid
        ServiceId:
          type: string
          format: uuid
        AccountId:
          type: string
          format: uuid
        AccountType:
          anyOf:
            - $ref: '#/components/schemas/AccountType'
          nullable: true
        CreatorProfileId:
          type: string
          format: uuid
        UpdaterProfileId:
          type: string
          format: uuid
        BookerId:
          type: string
          format: uuid
          nullable: true
        Number:
          type: string
          nullable: true
        State:
          $ref: '#/components/schemas/ServiceOrderState'
        Origin:
          $ref: '#/components/schemas/ServiceOrderOrigin'
        CommanderOrigin:
          anyOf:
            - $ref: '#/components/schemas/ServiceOrderCommanderOrigin'
          nullable: true
        OriginDetails:
          type: string
          nullable: true
        CreatedUtc:
          minLength: 1
          type: string
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          format: date-time
        CancelledUtc:
          type: string
          format: date-time
          nullable: true
        VoucherId:
          type: string
          format: uuid
          nullable: true
        BusinessSegmentId:
          type: string
          format: uuid
          nullable: true
        Options:
          $ref: '#/components/schemas/ServiceOrderOptions'
      additionalProperties: false
      x-schema-id: ServiceOrder
    ServiceOrderCancellationReason:
      enum:
        - Other
        - ConfirmationMissed
        - BookedElsewhere
        - ForceMajeure
        - GuestComplaint
        - NoShow
        - PriceTooHigh
        - ServiceNotAvailable
        - InputError
        - InvalidPayment
        - TravelAgency
        - RequestedByGuest
        - Update
        - BookingAbandoned
        - RequestedByBooker
      type: string
    ServiceOrderCommanderOrigin:
      enum:
        - InPerson
        - Channel
        - Phone
        - Email
        - Website
        - Message
        - CallCenter
      type: string
    ServiceOrderNoteAddParameters:
      title: ServiceOrderNoteAddParameters
      required:
        - ServiceOrderId
        - Text
      type: object
      properties:
        ServiceOrderId:
          type: string
          format: uuid
        Text:
          minLength: 1
          type: string
      additionalProperties: false
      x-schema-id: ServiceOrderNoteAddParameters
    ServiceOrderNoteAdditionResult:
      title: ServiceOrderNoteAdditionResult
      required:
        - ServiceOrderNotes
      type: object
      properties:
        ServiceOrderNotes:
          type: array
          items:
            $ref: '#/components/schemas/OrderNote'
      additionalProperties: false
      x-schema-id: ServiceOrderNoteAdditionResult
    ServiceOrderNoteDeleteParameters:
      title: ServiceOrderNoteDeleteParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - ServiceOrderNoteIds
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        ServiceOrderNoteIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
      additionalProperties: false
      x-schema-id: ServiceOrderNoteDeleteParameters
    ServiceOrderNoteFilterParameters:
      title: ServiceOrderNoteFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
        - ServiceOrderIds
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ServiceOrderIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
        ServiceOrderNoteIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
      additionalProperties: false
      x-schema-id: ServiceOrderNoteFilterParameters
    ServiceOrderNoteResult:
      title: ServiceOrderNoteResult
      required:
        - ServiceOrderNotes
      type: object
      properties:
        ServiceOrderNotes:
          type: array
          items:
            $ref: '#/components/schemas/OrderNote'
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ServiceOrderNoteResult
    ServiceOrderNoteUpdateParameters:
      title: ServiceOrderNoteUpdateParameters
      required:
        - ServiceOrderNoteId
      type: object
      properties:
        ServiceOrderNoteId:
          type: string
          format: uuid
        Text:
          $ref: '#/components/schemas/StringUpdateValue'
      additionalProperties: false
      x-schema-id: ServiceOrderNoteUpdateParameters
    ServiceOrderNoteUpdateResult:
      title: ServiceOrderNoteUpdateResult
      required:
        - ServiceOrderNotes
      type: object
      properties:
        ServiceOrderNotes:
          type: array
          items:
            $ref: '#/components/schemas/OrderNote'
      additionalProperties: false
      x-schema-id: ServiceOrderNoteUpdateResult
    ServiceOrderOptions:
      title: ServiceOrderOptions
      required:
        - AllCompanionsCheckedIn
        - AnyCompanionCheckedIn
        - ConnectorCheckIn
        - OwnerCheckedIn
      type: object
      properties:
        OwnerCheckedIn:
          type: boolean
        AllCompanionsCheckedIn:
          type: boolean
        AnyCompanionCheckedIn:
          type: boolean
        ConnectorCheckIn:
          type: boolean
      additionalProperties: false
      x-schema-id: ServiceOrderOptions
    ServiceOrderOrigin:
      enum:
        - Distributor
        - ChannelManager
        - Commander
        - Import
        - Connector
        - Navigator
      type: string
    ServiceOrderPersonCount:
      title: ServiceOrderPersonCount
      type: object
      properties:
        AgeCategoryId:
          type: string
          format: uuid
        Count:
          type: integer
          format: int32
      additionalProperties: false
      x-schema-id: ServiceOrderPersonCount
    ServiceOrderState:
      enum:
        - Inquired
        - Confirmed
        - Started
        - Processed
        - Canceled
        - Optional
        - Requested
      type: string
    ServiceResult:
      title: ServiceResult
      type: object
      properties:
        Services:
          type: array
          items:
            $ref: '#/components/schemas/Service'
          nullable: true
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: ServiceResult
    ServiceType:
      enum:
        - Reservable
        - Orderable
        - Bookable
        - Additional
      type: string
    SetRestrictionParameters:
      title: SetRestrictionParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Data
        - ServiceId
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        ServiceId:
          type: string
          format: uuid
        Data:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/RestrictionSetData'
      additionalProperties: false
      x-schema-id: SetRestrictionParameters
    Sex:
      enum:
        - Male
        - Female
      type: string
    Source:
      title: Source
      required:
        - Code
        - Id
        - Name
        - Type
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          format: uuid
        Name:
          minLength: 1
          type: string
        Type:
          $ref: '#/components/schemas/SourceType'
        UpdatedUtc:
          minLength: 1
          type: string
          format: date-time
        Code:
          type: integer
          format: int32
      additionalProperties: false
      x-schema-id: Source
    SourceAssignment:
      title: SourceAssignment
      required:
        - Id
        - IsPrimary
        - ReservationGroupId
        - SourceId
      type: object
      properties:
        Id:
          type: string
          format: uuid
        ReservationGroupId:
          type: string
          format: uuid
        SourceId:
          type: string
          format: uuid
        IsPrimary:
          type: boolean
      additionalProperties: false
      x-schema-id: SourceAssignment
    SourceAssignmentFilterParameters:
      title: SourceAssignmentFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ReservationGroupIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
      additionalProperties: false
      x-schema-id: SourceAssignmentFilterParameters
    SourceAssignmentResult:
      title: SourceAssignmentResult
      required:
        - SourceAssignments
      type: object
      properties:
        SourceAssignments:
          type: array
          items:
            $ref: '#/components/schemas/SourceAssignment'
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: SourceAssignmentResult
    SourceFilterParameters:
      title: SourceFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        SourceIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        Limitation:
          $ref: '#/components/schemas/Limitation'
      additionalProperties: false
      x-schema-id: SourceFilterParameters
    SourceResult:
      title: SourceResult
      required:
        - Sources
      type: object
      properties:
        Sources:
          type: array
          items:
            $ref: '#/components/schemas/Source'
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: SourceResult
    SourceType:
      enum:
        - OnlineTravelAgency
        - CentralReservationSystem
        - GlobalDistributionSystem
        - AlternativeDistributionSystem
        - SalesAndCateringSystem
        - PropertyManagementSystem
        - TourOperatorSystem
        - OnlineBookingEngine
        - Kiosk
        - Agent
      type: string
    SpaceData:
      title: SpaceData
      required:
        - FloorNumber
      type: object
      properties:
        FloorNumber:
          minLength: 1
          type: string
        LocationNotes:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: SpaceData
    StringUpdateValue:
      title: UpdateValue`1
      type: object
      properties:
        Value:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: UpdateValue`1
    SurchargeConfiguration:
      title: SurchargeConfiguration
      required:
        - SurchargeFees
      type: object
      properties:
        SurchargeFees:
          type: object
          additionalProperties:
            type: number
            format: double
        SurchargeServiceId:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: SurchargeConfiguration
    Task:
      title: Task
      type: object
      properties:
        Id:
          type: string
          format: uuid
        EnterpriseId:
          type: string
          format: uuid
        Name:
          type: string
          nullable: true
        State:
          type: string
          nullable: true
        Description:
          type: string
          nullable: true
        DepartmentId:
          type: string
          format: uuid
          nullable: true
        ServiceOrderId:
          type: string
          format: uuid
          nullable: true
        CreatedUtc:
          type: string
          nullable: true
        DeadlineUtc:
          type: string
          nullable: true
        ClosedUtc:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: Task
    TaskAddParameters:
      title: TaskAddParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - DeadlineUtc
        - Name
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        DepartmentId:
          type: string
          format: uuid
          nullable: true
        ServiceOrderId:
          type: string
          format: uuid
          nullable: true
        Name:
          minLength: 1
          type: string
        Description:
          type: string
          nullable: true
        DeadlineUtc:
          minLength: 1
          type: string
          format: date-time
      additionalProperties: false
      x-schema-id: TaskAddParameters
    TaskFilterParameters:
      title: TaskFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        CreatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        ClosedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        DeadlineUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
        TaskIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        DepartmentIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        ServiceOrderIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: TaskFilterParameters
    TaskResult:
      title: TaskResult
      type: object
      properties:
        Tasks:
          type: array
          items:
            $ref: '#/components/schemas/Task'
          nullable: true
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: TaskResult
    TaxBreakdown:
      title: TaxBreakdown
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/TaxBreakdownItem'
          nullable: true
      additionalProperties: false
      x-schema-id: TaxBreakdown
    TaxBreakdownItem:
      title: TaxBreakdownItem
      type: object
      properties:
        TaxRateCode:
          type: string
          nullable: true
        NetValue:
          type: number
          format: double
        TaxValue:
          type: number
          format: double
      additionalProperties: false
      x-schema-id: TaxBreakdownItem
    TaxEnvironment:
      title: TaxEnvironment
      type: object
      properties:
        Code:
          type: string
          nullable: true
        CountryCode:
          type: string
          nullable: true
        ValidityStartUtc:
          type: string
          nullable: true
        ValidityEndUtc:
          type: string
          nullable: true
        TaxationCodes:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
      x-schema-id: TaxEnvironment
    TaxEnvironmentResult:
      title: TaxEnvironmentResult
      type: object
      properties:
        TaxEnvironments:
          type: array
          items:
            $ref: '#/components/schemas/TaxEnvironment'
          nullable: true
        Taxations:
          type: array
          items:
            $ref: '#/components/schemas/OldTaxation'
          nullable: true
          deprecated: true
        TaxRates:
          type: array
          items:
            $ref: '#/components/schemas/TaxRate'
          nullable: true
          deprecated: true
      additionalProperties: false
      x-schema-id: TaxEnvironmentResult
    TaxRate:
      title: TaxRate
      type: object
      properties:
        Code:
          type: string
          nullable: true
        TaxationCode:
          type: string
          nullable: true
        Value:
          type: number
          format: double
        ValidityInvervalsUtc:
          type: array
          items:
            $ref: '#/components/schemas/DateTimeIntervalUtc'
          nullable: true
        Strategy:
          title: Strategy
          properties:
            discriminator:
              $ref: '#/components/schemas/TaxRateStrategyDiscriminator'
            value:
              oneOf:
                - $ref: '#/components/schemas/RelativeTaxRateStrategy'
                - $ref: '#/components/schemas/FlatTaxRateStrategy'
                - $ref: '#/components/schemas/DependentTaxRateStrategy'
      additionalProperties: false
      x-schema-id: TaxRate
    TaxRateStrategyDiscriminator:
      enum:
        - Relative
        - Flat
        - Dependent
      type: string
    TaxValue:
      title: TaxValue
      type: object
      properties:
        Code:
          type: string
          nullable: true
        Value:
          type: number
          format: double
      additionalProperties: false
      x-schema-id: TaxValue
    Taxation:
      title: Taxation
      type: object
      properties:
        Code:
          type: string
          nullable: true
        Name:
          type: string
          nullable: true
        LocalName:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: Taxation
    TaxationResult:
      title: TaxationResult
      type: object
      properties:
        Taxations:
          type: array
          items:
            $ref: '#/components/schemas/Taxation'
          nullable: true
        TaxRates:
          type: array
          items:
            $ref: '#/components/schemas/TaxRate'
          nullable: true
      additionalProperties: false
      x-schema-id: TaxationResult
    TimeFilterInterval:
      title: TimeFilterInterval
      type: object
      properties:
        StartUtc:
          type: string
          format: date-time
          nullable: true
        EndUtc:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
      x-schema-id: TimeFilterInterval
    TokenizedCreditCardParameters:
      title: TokenizedCreditCardParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - CreditCardData
        - CustomerId
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        CustomerId:
          type: string
          format: uuid
        CreditCardData:
          $ref: '#/components/schemas/CreditCardData'
      additionalProperties: false
      x-schema-id: TokenizedCreditCardParameters
    TravelAgencyContract:
      title: TravelAgencyContract
      required:
        - CompanyId
        - CreatedUtc
        - Id
        - IsActive
        - ServiceId
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          format: uuid
        ServiceId:
          type: string
          format: uuid
        CompanyId:
          type: string
          format: uuid
        IsActive:
          type: boolean
        CommissionIncluded:
          type: boolean
          nullable: true
        Commission:
          type: number
          format: double
          nullable: true
        ChannelManagerAbsoluteAdjustment:
          type: number
          format: double
          nullable: true
        ChannelManagerRelativeAdjustment:
          type: number
          format: double
          nullable: true
        Options:
          $ref: '#/components/schemas/TravelAgencyContractOptions'
        AccountingCode:
          type: string
          nullable: true
        InvoiceDueInterval:
          type: string
          nullable: true
        ChannelManagerBusinessSegmentId:
          type: string
          format: uuid
          nullable: true
        ContactPerson:
          type: string
          nullable: true
        ContactEmail:
          type: string
          format: email
          nullable: true
        AdditionalContactInfo:
          type: string
          nullable: true
        Notes:
          type: string
          nullable: true
        CreatedUtc:
          minLength: 1
          type: string
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          format: date-time
      additionalProperties: false
      x-schema-id: TravelAgencyContract
    TravelAgencyContractAddParameters:
      title: TravelAgencyContractAddParameters
      required:
        - CompanyId
        - ServiceId
      type: object
      properties:
        ServiceId:
          type: string
          format: uuid
        CompanyId:
          type: string
          format: uuid
        CommissionIncluded:
          type: boolean
          nullable: true
        Commission:
          type: number
          format: double
          nullable: true
        ChannelManagerBusinessSegmentId:
          type: string
          format: uuid
          nullable: true
        ChannelManagerAbsoluteAdjustment:
          type: number
          format: double
          nullable: true
        ChannelManagerRelativeAdjustment:
          type: number
          format: double
          nullable: true
        Options:
          $ref: '#/components/schemas/TravelAgencyContractOptions'
        AccountingCode:
          type: string
          nullable: true
        InvoiceDueInterval:
          type: string
          nullable: true
        ContactPerson:
          type: string
          nullable: true
        ContactEmail:
          type: string
          format: email
          nullable: true
        AdditionalContactInfo:
          type: string
          nullable: true
        Notes:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: TravelAgencyContractAddParameters
    TravelAgencyContractOptions:
      title: TravelAgencyContractOptions
      type: object
      properties:
        IncludeCancellationFeeInCommissionEstimate:
          type: boolean
        SkipAutomaticSettlement:
          type: boolean
      additionalProperties: false
      x-schema-id: TravelAgencyContractOptions
    TravelAgencyContractOptionsParameters:
      title: TravelAgencyContractOptionsParameters
      type: object
      properties:
        IncludeCancellationFeeInCommissionEstimate:
          $ref: '#/components/schemas/BooleanUpdateValue'
        SkipAutomaticSettlement:
          $ref: '#/components/schemas/BooleanUpdateValue'
      additionalProperties: false
      x-schema-id: TravelAgencyContractOptionsParameters
    TravelAgencyContractUpdateParameters:
      title: TravelAgencyContractUpdateParameters
      required:
        - TravelAgencyContractId
      type: object
      properties:
        TravelAgencyContractId:
          type: string
          format: uuid
        CommissionIncluded:
          $ref: '#/components/schemas/BooleanNullableUpdateValue'
        Commission:
          $ref: '#/components/schemas/DecimalNullableUpdateValue'
        ChannelManagerBusinessSegmentId:
          $ref: '#/components/schemas/GuidNullableUpdateValue'
        ChannelManagerAbsoluteAdjustment:
          $ref: '#/components/schemas/DecimalNullableUpdateValue'
        ChannelManagerRelativeAdjustment:
          $ref: '#/components/schemas/DecimalNullableUpdateValue'
        Options:
          $ref: '#/components/schemas/TravelAgencyContractOptionsParameters'
        AccountingCode:
          $ref: '#/components/schemas/StringUpdateValue'
        InvoiceDueInterval:
          $ref: '#/components/schemas/StringUpdateValue'
        ContactPerson:
          $ref: '#/components/schemas/StringUpdateValue'
        ContactEmail:
          $ref: '#/components/schemas/StringUpdateValue'
        AdditionalContactInfo:
          $ref: '#/components/schemas/StringUpdateValue'
        Notes:
          $ref: '#/components/schemas/StringUpdateValue'
      additionalProperties: false
      x-schema-id: TravelAgencyContractUpdateParameters
    Unit:
      type: object
      additionalProperties: false
    User:
      title: User
      type: object
      properties:
        Id:
          type: string
          format: uuid
          nullable: true
        FirstName:
          type: string
          nullable: true
        LastName:
          type: string
          nullable: true
        ImageUrl:
          type: string
          format: uri
          nullable: true
        Email:
          type: string
          format: email
          nullable: true
        LastSuccessfulSignInUtc:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
      x-schema-id: User
    Voucher:
      title: Voucher
      required:
        - ActivityState
        - CreatedUtc
        - Id
        - Name
        - ServiceId
        - Type
        - UpdatedUtc
      type: object
      properties:
        Id:
          type: string
          format: uuid
        ServiceId:
          type: string
          format: uuid
        Name:
          maxLength: 128
          minLength: 1
          type: string
        CreatedUtc:
          minLength: 1
          type: string
          format: date-time
        UpdatedUtc:
          minLength: 1
          type: string
          format: date-time
        Type:
          $ref: '#/components/schemas/VoucherType'
        ActivityState:
          $ref: '#/components/schemas/ActivityState'
        CompanyId:
          type: string
          format: uuid
          nullable: true
        TravelAgencyId:
          type: string
          format: uuid
          nullable: true
        OccupiableIntervalStartUtc:
          type: string
          format: date-time
          nullable: true
        OccupiableIntervalEndUtc:
          type: string
          format: date-time
          nullable: true
        ExternalIdentifier:
          maxLength: 255
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: Voucher
    VoucherAddParameters:
      title: VoucherAddParameters
      required:
        - Name
        - ServiceId
        - Type
      type: object
      properties:
        ServiceId:
          type: string
          format: uuid
        Name:
          maxLength: 128
          minLength: 1
          type: string
        Type:
          $ref: '#/components/schemas/VoucherType'
        CompanyId:
          type: string
          format: uuid
          nullable: true
        AssignedRateIds:
          maxItems: 5
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        OccupiableIntervalStartUtc:
          type: string
          format: date-time
          nullable: true
        OccupiableIntervalEndUtc:
          type: string
          format: date-time
          nullable: true
        ExternalIdentifier:
          maxLength: 255
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: VoucherAddParameters
    VoucherAssignment:
      title: VoucherAssignment
      type: object
      properties:
        VoucherId:
          type: string
          format: uuid
        RateId:
          type: string
          format: uuid
      additionalProperties: false
      x-schema-id: VoucherAssignment
    VoucherCode:
      title: VoucherCode
      type: object
      properties:
        Id:
          type: string
          format: uuid
        VoucherId:
          type: string
          format: uuid
        Value:
          type: string
          nullable: true
        ValidityStartUtc:
          type: string
          nullable: true
        ValidityEndUtc:
          type: string
          nullable: true
        CreatedUtc:
          type: string
          nullable: true
        UpdatedUtc:
          type: string
          nullable: true
        ActivityState:
          type: string
          nullable: true
      additionalProperties: false
      x-schema-id: VoucherCode
    VoucherCodeAddParameters:
      title: VoucherCodeAddParameters
      required:
        - Value
        - VoucherId
      type: object
      properties:
        VoucherId:
          type: string
          format: uuid
        Value:
          minLength: 1
          type: string
        ValidityStartUtc:
          type: string
          format: date-time
          nullable: true
        ValidityEndUtc:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
      x-schema-id: VoucherCodeAddParameters
    VoucherCodeFilterParameters:
      title: VoucherCodeFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Limitation
        - VoucherIds
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        VoucherCodeIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        VoucherIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
      additionalProperties: false
      x-schema-id: VoucherCodeFilterParameters
    VoucherCodeResult:
      title: VoucherCodeResult
      required:
        - VoucherCodes
      type: object
      properties:
        VoucherCodes:
          maxItems: 1000
          type: array
          items:
            $ref: '#/components/schemas/VoucherCode'
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: VoucherCodeResult
    VoucherExtent:
      title: VoucherExtent
      type: object
      properties:
        Vouchers:
          type: boolean
        VoucherCodes:
          type: boolean
          deprecated: true
        VoucherAssignments:
          type: boolean
        Companies:
          type: boolean
          deprecated: true
        Rates:
          type: boolean
      additionalProperties: false
      x-schema-id: VoucherExtent
    VoucherFilterParameters:
      title: VoucherFilterParameters
      required:
        - AccessToken
        - Client
        - ClientToken
        - Extent
        - Limitation
        - ServiceIds
      type: object
      properties:
        Client:
          minLength: 1
          type: string
        LanguageCode:
          type: string
          nullable: true
        CultureCode:
          type: string
          nullable: true
        AccessToken:
          minLength: 1
          type: string
        MaskedAccessToken:
          type: string
          nullable: true
          readOnly: true
        ClientToken:
          minLength: 1
          type: string
        MaskedClientToken:
          type: string
          nullable: true
          readOnly: true
        Limitation:
          $ref: '#/components/schemas/Limitation'
        EnterpriseIds:
          maxItems: 1000
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        Extent:
          $ref: '#/components/schemas/VoucherExtent'
        ServiceIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
        VoucherIds:
          maxItems: 1000
          minItems: 1
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        VoucherCodeValues:
          maxItems: 1000
          type: array
          items:
            type: string
          nullable: true
        ActivityStates:
          maxItems: 1000
          type: array
          items:
            type: string
          nullable: true
        UpdatedUtc:
          $ref: '#/components/schemas/TimeFilterInterval'
      additionalProperties: false
      x-schema-id: VoucherFilterParameters
    VoucherResult:
      title: VoucherResult
      type: object
      properties:
        Vouchers:
          type: array
          items:
            $ref: '#/components/schemas/Voucher'
          nullable: true
        VoucherCodes:
          type: array
          items:
            $ref: '#/components/schemas/VoucherCode'
          nullable: true
        VoucherAssignments:
          type: array
          items:
            $ref: '#/components/schemas/VoucherAssignment'
          nullable: true
        Rates:
          type: array
          items:
            $ref: '#/components/schemas/Rate'
          nullable: true
        Companies:
          type: array
          items:
            $ref: '#/components/schemas/Company'
          nullable: true
        Cursor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
      x-schema-id: VoucherResult
    VoucherType:
      enum:
        - Public
        - PartnerCompany
        - TravelAgency
      type: string
    VoucherUpdateParameters:
      title: VoucherUpdateParameters
      required:
        - VoucherId
      type: object
      properties:
        VoucherId:
          type: string
          format: uuid
        Name:
          $ref: '#/components/schemas/StringUpdateValue'
        Type:
          anyOf:
            - $ref: '#/components/schemas/VoucherType'
          nullable: true
        CompanyId:
          $ref: '#/components/schemas/GuidNullableUpdateValue'
        AssignedRateIds:
          $ref: '#/components/schemas/GuidIEnumerableUpdateValue'
        OccupiableIntervalStartUtc:
          $ref: '#/components/schemas/StringUpdateValue'
        OccupiableIntervalEndUtc:
          $ref: '#/components/schemas/StringUpdateValue'
        ExternalIdentifier:
          $ref: '#/components/schemas/StringUpdateValue'
      additionalProperties: false
      x-schema-id: VoucherUpdateParameters
    VoucherWriteResult:
      title: VoucherWriteResult
      type: object
      properties:
        Vouchers:
          type: array
          items:
            $ref: '#/components/schemas/Voucher'
          nullable: true
      additionalProperties: false
      x-schema-id: VoucherWriteResult